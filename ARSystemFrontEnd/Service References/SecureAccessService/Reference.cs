//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ARSystemFrontEnd.SecureAccessService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="mstApplication", Namespace="http://schemas.datacontract.org/2004/07/SecureAccess.Domain.Models")]
    [System.SerializableAttribute()]
    public partial class mstApplication : ARSystemFrontEnd.SecureAccessService.BaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApplicationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int mstApplicationIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Application {
            get {
                return this.ApplicationField;
            }
            set {
                if ((object.ReferenceEquals(this.ApplicationField, value) != true)) {
                    this.ApplicationField = value;
                    this.RaisePropertyChanged("Application");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int mstApplicationID {
            get {
                return this.mstApplicationIDField;
            }
            set {
                if ((this.mstApplicationIDField.Equals(value) != true)) {
                    this.mstApplicationIDField = value;
                    this.RaisePropertyChanged("mstApplicationID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseClass", Namespace="http://schemas.datacontract.org/2004/07/SecureAccess.Domain.Models")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ARSystemFrontEnd.SecureAccessService.mstLoginBanner))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ARSystemFrontEnd.SecureAccessService.vwUserMenu))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ARSystemFrontEnd.SecureAccessService.vwUserVendorMenu))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ARSystemFrontEnd.SecureAccessService.vwUserHomeDashboard))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ARSystemFrontEnd.SecureAccessService.vwRoleHomeDashboard))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ARSystemFrontEnd.SecureAccessService.idxUserHomeDashboard))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ARSystemFrontEnd.SecureAccessService.mstMenu))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ARSystemFrontEnd.SecureAccessService.mstIcon))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ARSystemFrontEnd.SecureAccessService.vwUserTaskToDo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ARSystemFrontEnd.SecureAccessService.vwUserNotification))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ARSystemFrontEnd.SecureAccessService.vwConsoleScheduler))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ARSystemFrontEnd.SecureAccessService.LogSchedule))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ARSystemFrontEnd.SecureAccessService.vmCreateConsole))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ARSystemFrontEnd.SecureAccessService.vwConsoleWeeklyStats))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ARSystemFrontEnd.SecureAccessService.vwUserCustomerMenu))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ARSystemFrontEnd.SecureAccessService.trxHitCounter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ARSystemFrontEnd.SecureAccessService.vwHitCounter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ARSystemFrontEnd.SecureAccessService.vwHitCounterOverview))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ARSystemFrontEnd.SecureAccessService.vmHitCounterPercentage))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ARSystemFrontEnd.SecureAccessService.vwHitCounterNonUtilized))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ARSystemFrontEnd.SecureAccessService.vwHitCounterPageList))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ARSystemFrontEnd.SecureAccessService.vwUserActionList))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ARSystemFrontEnd.SecureAccessService.mstRole))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ARSystemFrontEnd.SecureAccessService.vwRoleAction))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ARSystemFrontEnd.SecureAccessService.vwRoleMenu))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ARSystemFrontEnd.SecureAccessService.vmMappingUserAction))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ARSystemFrontEnd.SecureAccessService.vmMappingUserHomeDashboard))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ARSystemFrontEnd.SecureAccessService.vmMappingUserTaskToDo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ARSystemFrontEnd.SecureAccessService.vmMappingUserJobTitle))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ARSystemFrontEnd.SecureAccessService.idxRoleAction))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ARSystemFrontEnd.SecureAccessService.idxRoleHomeDashboard))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ARSystemFrontEnd.SecureAccessService.idxRoleTaskToDo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ARSystemFrontEnd.SecureAccessService.mstRootDashboardMobile))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ARSystemFrontEnd.SecureAccessService.idxRoleDynamicData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ARSystemFrontEnd.SecureAccessService.idxRoleDynamicDashboard))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ARSystemFrontEnd.SecureAccessService.vmLogin))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ARSystemFrontEnd.SecureAccessService.vmUserLogin))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ARSystemFrontEnd.SecureAccessService.vmUserCredential))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ARSystemFrontEnd.SecureAccessService.mstUser))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ARSystemFrontEnd.SecureAccessService.vwUser))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ARSystemFrontEnd.SecureAccessService.trxOTP))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ARSystemFrontEnd.SecureAccessService.vmUserPrivilege))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ARSystemFrontEnd.SecureAccessService.vmUserVendorLogin))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ARSystemFrontEnd.SecureAccessService.mstUserVendor))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ARSystemFrontEnd.SecureAccessService.vwUserVendor))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ARSystemFrontEnd.SecureAccessService.mstVendor))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ARSystemFrontEnd.SecureAccessService.vwAction))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ARSystemFrontEnd.SecureAccessService.mstAction))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ARSystemFrontEnd.SecureAccessService.vwTaskToDo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ARSystemFrontEnd.SecureAccessService.mstTaskToDo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ARSystemFrontEnd.SecureAccessService.vmUserCustomerLogin))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ARSystemFrontEnd.SecureAccessService.mstUserCustomer))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ARSystemFrontEnd.SecureAccessService.vwUserCustomer))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ARSystemFrontEnd.SecureAccessService.vmUserCustomer))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ARSystemFrontEnd.SecureAccessService.mstCustomerVendor))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ARSystemFrontEnd.SecureAccessService.mstCustomer))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ARSystemFrontEnd.SecureAccessService.vwHomeDashboard))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ARSystemFrontEnd.SecureAccessService.mstHomeDashboard))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ARSystemFrontEnd.SecureAccessService.vwApplicationUrl))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ARSystemFrontEnd.SecureAccessService.trxFavoriteMenu))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ARSystemFrontEnd.SecureAccessService.vmUserHomeDashboard))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ARSystemFrontEnd.SecureAccessService.vmTree))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ARSystemFrontEnd.SecureAccessService.vmTreeState))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ARSystemFrontEnd.SecureAccessService.DatatableOfvwActionNewYDz5Kj5d))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ARSystemFrontEnd.SecureAccessService.vwActionNew))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ARSystemFrontEnd.SecureAccessService.DatatableOfvwMenuYDz5Kj5d))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ARSystemFrontEnd.SecureAccessService.vwMenu))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ARSystemFrontEnd.SecureAccessService.DatatableOfvwTaskToDoNewYDz5Kj5d))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ARSystemFrontEnd.SecureAccessService.vwTaskToDoNew))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ARSystemFrontEnd.SecureAccessService.DatatableOfvwLogHitCounterYDz5Kj5d))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ARSystemFrontEnd.SecureAccessService.vwLogHitCounter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ARSystemFrontEnd.SecureAccessService.DatatableOfvwLoginLogYDz5Kj5d))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ARSystemFrontEnd.SecureAccessService.vwLoginLog))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ARSystemFrontEnd.SecureAccessService.DatatableOfvwAuditTrailYDz5Kj5d))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ARSystemFrontEnd.SecureAccessService.vwAuditTrail))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ARSystemFrontEnd.SecureAccessService.vmDashboardNavigation))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ARSystemFrontEnd.SecureAccessService.vwDashboardNavigation))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ARSystemFrontEnd.SecureAccessService.vwUserMenuNew))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ARSystemFrontEnd.SecureAccessService.vwUserVendorMenuNew))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ARSystemFrontEnd.SecureAccessService.vwUserCustomerMenuNew))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ARSystemFrontEnd.SecureAccessService.trxAuditTrail))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ARSystemFrontEnd.SecureAccessService.vwUserTaskToDoNew))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ARSystemFrontEnd.SecureAccessService.mstAuditTrailModule))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ARSystemFrontEnd.SecureAccessService.idxRoleDashboard))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ARSystemFrontEnd.SecureAccessService.idxRoleActionNew))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ARSystemFrontEnd.SecureAccessService.idxRoleMenu))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ARSystemFrontEnd.SecureAccessService.idxRoleTaskToDoNew))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ARSystemFrontEnd.SecureAccessService.vwDashboard))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ARSystemFrontEnd.SecureAccessService.mstDashboardCategory))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ARSystemFrontEnd.SecureAccessService.mstDirectorate))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ARSystemFrontEnd.SecureAccessService.mstDashboard))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ARSystemFrontEnd.SecureAccessService.mstActionNew))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ARSystemFrontEnd.SecureAccessService.mstMenuNew))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ARSystemFrontEnd.SecureAccessService.vwRoleMenuNew))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ARSystemFrontEnd.SecureAccessService.vwRoleActionNew))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ARSystemFrontEnd.SecureAccessService.mstTaskToDoNew))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ARSystemFrontEnd.SecureAccessService.vwRoleTaskToDoNew))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ARSystemFrontEnd.SecureAccessService.SyncStagingMstEmployee))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ARSystemFrontEnd.SecureAccessService.vmUpdateAuthorization))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ARSystemFrontEnd.SecureAccessService.idxRoleJobTitle))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ARSystemFrontEnd.SecureAccessService.mstApplication))]
    public partial class BaseClass : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ErrorTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ErrorType {
            get {
                return this.ErrorTypeField;
            }
            set {
                if ((this.ErrorTypeField.Equals(value) != true)) {
                    this.ErrorTypeField = value;
                    this.RaisePropertyChanged("ErrorType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="mstLoginBanner", Namespace="http://schemas.datacontract.org/2004/07/SecureAccess.Domain.Models")]
    [System.SerializableAttribute()]
    public partial class mstLoginBanner : ARSystemFrontEnd.SecureAccessService.BaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileContentTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FilePathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LoginBannerIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SequenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UpdatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> UpdatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool isActiveField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileContentType {
            get {
                return this.FileContentTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.FileContentTypeField, value) != true)) {
                    this.FileContentTypeField = value;
                    this.RaisePropertyChanged("FileContentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FilePath {
            get {
                return this.FilePathField;
            }
            set {
                if ((object.ReferenceEquals(this.FilePathField, value) != true)) {
                    this.FilePathField = value;
                    this.RaisePropertyChanged("FilePath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LoginBannerID {
            get {
                return this.LoginBannerIDField;
            }
            set {
                if ((this.LoginBannerIDField.Equals(value) != true)) {
                    this.LoginBannerIDField = value;
                    this.RaisePropertyChanged("LoginBannerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Sequence {
            get {
                return this.SequenceField;
            }
            set {
                if ((this.SequenceField.Equals(value) != true)) {
                    this.SequenceField = value;
                    this.RaisePropertyChanged("Sequence");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UpdatedBy {
            get {
                return this.UpdatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.UpdatedByField, value) != true)) {
                    this.UpdatedByField = value;
                    this.RaisePropertyChanged("UpdatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UpdatedDate {
            get {
                return this.UpdatedDateField;
            }
            set {
                if ((this.UpdatedDateField.Equals(value) != true)) {
                    this.UpdatedDateField = value;
                    this.RaisePropertyChanged("UpdatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isActive {
            get {
                return this.isActiveField;
            }
            set {
                if ((this.isActiveField.Equals(value) != true)) {
                    this.isActiveField = value;
                    this.RaisePropertyChanged("isActive");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="vwUserMenu", Namespace="http://schemas.datacontract.org/2004/07/SecureAccess.Domain.Models")]
    [System.SerializableAttribute()]
    public partial class vwUserMenu : ARSystemFrontEnd.SecureAccessService.BaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ApplicationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FaIconField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] ListKeySettingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MenuField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MenuParentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> MenuParentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MenuStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SortField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TokenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> mstMenuIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ApplicationID {
            get {
                return this.ApplicationIDField;
            }
            set {
                if ((this.ApplicationIDField.Equals(value) != true)) {
                    this.ApplicationIDField = value;
                    this.RaisePropertyChanged("ApplicationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FaIcon {
            get {
                return this.FaIconField;
            }
            set {
                if ((object.ReferenceEquals(this.FaIconField, value) != true)) {
                    this.FaIconField = value;
                    this.RaisePropertyChanged("FaIcon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] ListKeySetting {
            get {
                return this.ListKeySettingField;
            }
            set {
                if ((object.ReferenceEquals(this.ListKeySettingField, value) != true)) {
                    this.ListKeySettingField = value;
                    this.RaisePropertyChanged("ListKeySetting");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Menu {
            get {
                return this.MenuField;
            }
            set {
                if ((object.ReferenceEquals(this.MenuField, value) != true)) {
                    this.MenuField = value;
                    this.RaisePropertyChanged("Menu");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MenuParent {
            get {
                return this.MenuParentField;
            }
            set {
                if ((object.ReferenceEquals(this.MenuParentField, value) != true)) {
                    this.MenuParentField = value;
                    this.RaisePropertyChanged("MenuParent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> MenuParentID {
            get {
                return this.MenuParentIDField;
            }
            set {
                if ((this.MenuParentIDField.Equals(value) != true)) {
                    this.MenuParentIDField = value;
                    this.RaisePropertyChanged("MenuParentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MenuStatus {
            get {
                return this.MenuStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.MenuStatusField, value) != true)) {
                    this.MenuStatusField = value;
                    this.RaisePropertyChanged("MenuStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifiedByField, value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Sort {
            get {
                return this.SortField;
            }
            set {
                if ((this.SortField.Equals(value) != true)) {
                    this.SortField = value;
                    this.RaisePropertyChanged("Sort");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Token {
            get {
                return this.TokenField;
            }
            set {
                if ((object.ReferenceEquals(this.TokenField, value) != true)) {
                    this.TokenField = value;
                    this.RaisePropertyChanged("Token");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Url {
            get {
                return this.UrlField;
            }
            set {
                if ((object.ReferenceEquals(this.UrlField, value) != true)) {
                    this.UrlField = value;
                    this.RaisePropertyChanged("Url");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIDField, value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> mstMenuID {
            get {
                return this.mstMenuIDField;
            }
            set {
                if ((this.mstMenuIDField.Equals(value) != true)) {
                    this.mstMenuIDField = value;
                    this.RaisePropertyChanged("mstMenuID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="vwUserVendorMenu", Namespace="http://schemas.datacontract.org/2004/07/SecureAccess.Domain.Models")]
    [System.SerializableAttribute()]
    public partial class vwUserVendorMenu : ARSystemFrontEnd.SecureAccessService.BaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ApplicationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FaIconField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MenuField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MenuParentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> MenuParentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SortField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TokenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> mstMenuIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ApplicationID {
            get {
                return this.ApplicationIDField;
            }
            set {
                if ((this.ApplicationIDField.Equals(value) != true)) {
                    this.ApplicationIDField = value;
                    this.RaisePropertyChanged("ApplicationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FaIcon {
            get {
                return this.FaIconField;
            }
            set {
                if ((object.ReferenceEquals(this.FaIconField, value) != true)) {
                    this.FaIconField = value;
                    this.RaisePropertyChanged("FaIcon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Menu {
            get {
                return this.MenuField;
            }
            set {
                if ((object.ReferenceEquals(this.MenuField, value) != true)) {
                    this.MenuField = value;
                    this.RaisePropertyChanged("Menu");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MenuParent {
            get {
                return this.MenuParentField;
            }
            set {
                if ((object.ReferenceEquals(this.MenuParentField, value) != true)) {
                    this.MenuParentField = value;
                    this.RaisePropertyChanged("MenuParent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> MenuParentID {
            get {
                return this.MenuParentIDField;
            }
            set {
                if ((this.MenuParentIDField.Equals(value) != true)) {
                    this.MenuParentIDField = value;
                    this.RaisePropertyChanged("MenuParentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Sort {
            get {
                return this.SortField;
            }
            set {
                if ((this.SortField.Equals(value) != true)) {
                    this.SortField = value;
                    this.RaisePropertyChanged("Sort");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Token {
            get {
                return this.TokenField;
            }
            set {
                if ((object.ReferenceEquals(this.TokenField, value) != true)) {
                    this.TokenField = value;
                    this.RaisePropertyChanged("Token");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Url {
            get {
                return this.UrlField;
            }
            set {
                if ((object.ReferenceEquals(this.UrlField, value) != true)) {
                    this.UrlField = value;
                    this.RaisePropertyChanged("Url");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIDField, value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> mstMenuID {
            get {
                return this.mstMenuIDField;
            }
            set {
                if ((this.mstMenuIDField.Equals(value) != true)) {
                    this.mstMenuIDField = value;
                    this.RaisePropertyChanged("mstMenuID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="vwUserHomeDashboard", Namespace="http://schemas.datacontract.org/2004/07/SecureAccess.Domain.Models")]
    [System.SerializableAttribute()]
    public partial class vwUserHomeDashboard : ARSystemFrontEnd.SecureAccessService.BaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ApplicationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DashboardField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FaIconField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ViewNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int mstDashboardIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int positionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ApplicationID {
            get {
                return this.ApplicationIDField;
            }
            set {
                if ((this.ApplicationIDField.Equals(value) != true)) {
                    this.ApplicationIDField = value;
                    this.RaisePropertyChanged("ApplicationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dashboard {
            get {
                return this.DashboardField;
            }
            set {
                if ((object.ReferenceEquals(this.DashboardField, value) != true)) {
                    this.DashboardField = value;
                    this.RaisePropertyChanged("Dashboard");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FaIcon {
            get {
                return this.FaIconField;
            }
            set {
                if ((object.ReferenceEquals(this.FaIconField, value) != true)) {
                    this.FaIconField = value;
                    this.RaisePropertyChanged("FaIcon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullName {
            get {
                return this.FullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FullNameField, value) != true)) {
                    this.FullNameField = value;
                    this.RaisePropertyChanged("FullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIDField, value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ViewName {
            get {
                return this.ViewNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ViewNameField, value) != true)) {
                    this.ViewNameField = value;
                    this.RaisePropertyChanged("ViewName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int mstDashboardID {
            get {
                return this.mstDashboardIDField;
            }
            set {
                if ((this.mstDashboardIDField.Equals(value) != true)) {
                    this.mstDashboardIDField = value;
                    this.RaisePropertyChanged("mstDashboardID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int position {
            get {
                return this.positionField;
            }
            set {
                if ((this.positionField.Equals(value) != true)) {
                    this.positionField = value;
                    this.RaisePropertyChanged("position");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="vwRoleHomeDashboard", Namespace="http://schemas.datacontract.org/2004/07/SecureAccess.Domain.Models")]
    [System.SerializableAttribute()]
    public partial class vwRoleHomeDashboard : ARSystemFrontEnd.SecureAccessService.BaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ApplicationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DashboardField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FaIconField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ViewNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int mstDashboardIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int mstRoleIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ApplicationID {
            get {
                return this.ApplicationIDField;
            }
            set {
                if ((this.ApplicationIDField.Equals(value) != true)) {
                    this.ApplicationIDField = value;
                    this.RaisePropertyChanged("ApplicationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dashboard {
            get {
                return this.DashboardField;
            }
            set {
                if ((object.ReferenceEquals(this.DashboardField, value) != true)) {
                    this.DashboardField = value;
                    this.RaisePropertyChanged("Dashboard");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FaIcon {
            get {
                return this.FaIconField;
            }
            set {
                if ((object.ReferenceEquals(this.FaIconField, value) != true)) {
                    this.FaIconField = value;
                    this.RaisePropertyChanged("FaIcon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Role {
            get {
                return this.RoleField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleField, value) != true)) {
                    this.RoleField = value;
                    this.RaisePropertyChanged("Role");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ViewName {
            get {
                return this.ViewNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ViewNameField, value) != true)) {
                    this.ViewNameField = value;
                    this.RaisePropertyChanged("ViewName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int mstDashboardID {
            get {
                return this.mstDashboardIDField;
            }
            set {
                if ((this.mstDashboardIDField.Equals(value) != true)) {
                    this.mstDashboardIDField = value;
                    this.RaisePropertyChanged("mstDashboardID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int mstRoleID {
            get {
                return this.mstRoleIDField;
            }
            set {
                if ((this.mstRoleIDField.Equals(value) != true)) {
                    this.mstRoleIDField = value;
                    this.RaisePropertyChanged("mstRoleID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="idxUserHomeDashboard", Namespace="http://schemas.datacontract.org/2004/07/SecureAccess.Domain.Models")]
    [System.SerializableAttribute()]
    public partial class idxUserHomeDashboard : ARSystemFrontEnd.SecureAccessService.BaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long idxUserDashboardIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int mstDashboardIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int positionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIDField, value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long idxUserDashboardID {
            get {
                return this.idxUserDashboardIDField;
            }
            set {
                if ((this.idxUserDashboardIDField.Equals(value) != true)) {
                    this.idxUserDashboardIDField = value;
                    this.RaisePropertyChanged("idxUserDashboardID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int mstDashboardID {
            get {
                return this.mstDashboardIDField;
            }
            set {
                if ((this.mstDashboardIDField.Equals(value) != true)) {
                    this.mstDashboardIDField = value;
                    this.RaisePropertyChanged("mstDashboardID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int position {
            get {
                return this.positionField;
            }
            set {
                if ((this.positionField.Equals(value) != true)) {
                    this.positionField = value;
                    this.RaisePropertyChanged("position");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="mstMenu", Namespace="http://schemas.datacontract.org/2004/07/SecureAccess.Domain.Models")]
    [System.SerializableAttribute()]
    public partial class mstMenu : ARSystemFrontEnd.SecureAccessService.BaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ActionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ApplicationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FaIconField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MenuField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MenuParentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RoleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SortField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long mstMenuIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ActionID {
            get {
                return this.ActionIDField;
            }
            set {
                if ((this.ActionIDField.Equals(value) != true)) {
                    this.ActionIDField = value;
                    this.RaisePropertyChanged("ActionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ApplicationID {
            get {
                return this.ApplicationIDField;
            }
            set {
                if ((this.ApplicationIDField.Equals(value) != true)) {
                    this.ApplicationIDField = value;
                    this.RaisePropertyChanged("ApplicationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FaIcon {
            get {
                return this.FaIconField;
            }
            set {
                if ((object.ReferenceEquals(this.FaIconField, value) != true)) {
                    this.FaIconField = value;
                    this.RaisePropertyChanged("FaIcon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Menu {
            get {
                return this.MenuField;
            }
            set {
                if ((object.ReferenceEquals(this.MenuField, value) != true)) {
                    this.MenuField = value;
                    this.RaisePropertyChanged("Menu");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MenuParentID {
            get {
                return this.MenuParentIDField;
            }
            set {
                if ((this.MenuParentIDField.Equals(value) != true)) {
                    this.MenuParentIDField = value;
                    this.RaisePropertyChanged("MenuParentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RoleID {
            get {
                return this.RoleIDField;
            }
            set {
                if ((this.RoleIDField.Equals(value) != true)) {
                    this.RoleIDField = value;
                    this.RaisePropertyChanged("RoleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Sort {
            get {
                return this.SortField;
            }
            set {
                if ((this.SortField.Equals(value) != true)) {
                    this.SortField = value;
                    this.RaisePropertyChanged("Sort");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long mstMenuID {
            get {
                return this.mstMenuIDField;
            }
            set {
                if ((this.mstMenuIDField.Equals(value) != true)) {
                    this.mstMenuIDField = value;
                    this.RaisePropertyChanged("mstMenuID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="mstIcon", Namespace="http://schemas.datacontract.org/2004/07/SecureAccess.Domain.Models")]
    [System.SerializableAttribute()]
    public partial class mstIcon : ARSystemFrontEnd.SecureAccessService.BaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IconCategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IconCodeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IconCategory {
            get {
                return this.IconCategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.IconCategoryField, value) != true)) {
                    this.IconCategoryField = value;
                    this.RaisePropertyChanged("IconCategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IconCode {
            get {
                return this.IconCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.IconCodeField, value) != true)) {
                    this.IconCodeField = value;
                    this.RaisePropertyChanged("IconCode");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="vwUserTaskToDo", Namespace="http://schemas.datacontract.org/2004/07/SecureAccess.Domain.Models")]
    [System.SerializableAttribute()]
    public partial class vwUserTaskToDo : ARSystemFrontEnd.SecureAccessService.BaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ActionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ApplicationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConnectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExecStoredProcedureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaskToDoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TokenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> mstTaskToDoIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long trxTokenIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ActionID {
            get {
                return this.ActionIDField;
            }
            set {
                if ((this.ActionIDField.Equals(value) != true)) {
                    this.ActionIDField = value;
                    this.RaisePropertyChanged("ActionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ApplicationID {
            get {
                return this.ApplicationIDField;
            }
            set {
                if ((this.ApplicationIDField.Equals(value) != true)) {
                    this.ApplicationIDField = value;
                    this.RaisePropertyChanged("ApplicationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Connection {
            get {
                return this.ConnectionField;
            }
            set {
                if ((object.ReferenceEquals(this.ConnectionField, value) != true)) {
                    this.ConnectionField = value;
                    this.RaisePropertyChanged("Connection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExecStoredProcedure {
            get {
                return this.ExecStoredProcedureField;
            }
            set {
                if ((object.ReferenceEquals(this.ExecStoredProcedureField, value) != true)) {
                    this.ExecStoredProcedureField = value;
                    this.RaisePropertyChanged("ExecStoredProcedure");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaskToDo {
            get {
                return this.TaskToDoField;
            }
            set {
                if ((object.ReferenceEquals(this.TaskToDoField, value) != true)) {
                    this.TaskToDoField = value;
                    this.RaisePropertyChanged("TaskToDo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Token {
            get {
                return this.TokenField;
            }
            set {
                if ((object.ReferenceEquals(this.TokenField, value) != true)) {
                    this.TokenField = value;
                    this.RaisePropertyChanged("Token");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Url {
            get {
                return this.UrlField;
            }
            set {
                if ((object.ReferenceEquals(this.UrlField, value) != true)) {
                    this.UrlField = value;
                    this.RaisePropertyChanged("Url");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIDField, value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> mstTaskToDoID {
            get {
                return this.mstTaskToDoIDField;
            }
            set {
                if ((this.mstTaskToDoIDField.Equals(value) != true)) {
                    this.mstTaskToDoIDField = value;
                    this.RaisePropertyChanged("mstTaskToDoID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long trxTokenID {
            get {
                return this.trxTokenIDField;
            }
            set {
                if ((this.trxTokenIDField.Equals(value) != true)) {
                    this.trxTokenIDField = value;
                    this.RaisePropertyChanged("trxTokenID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="vwUserNotification", Namespace="http://schemas.datacontract.org/2004/07/SecureAccess.Domain.Models")]
    [System.SerializableAttribute()]
    public partial class vwUserNotification : ARSystemFrontEnd.SecureAccessService.BaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ActionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ApplicationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConnectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExecStoredProcedureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotificationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TokenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> mstNotificationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long trxTokenIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ActionID {
            get {
                return this.ActionIDField;
            }
            set {
                if ((this.ActionIDField.Equals(value) != true)) {
                    this.ActionIDField = value;
                    this.RaisePropertyChanged("ActionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ApplicationID {
            get {
                return this.ApplicationIDField;
            }
            set {
                if ((this.ApplicationIDField.Equals(value) != true)) {
                    this.ApplicationIDField = value;
                    this.RaisePropertyChanged("ApplicationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Connection {
            get {
                return this.ConnectionField;
            }
            set {
                if ((object.ReferenceEquals(this.ConnectionField, value) != true)) {
                    this.ConnectionField = value;
                    this.RaisePropertyChanged("Connection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExecStoredProcedure {
            get {
                return this.ExecStoredProcedureField;
            }
            set {
                if ((object.ReferenceEquals(this.ExecStoredProcedureField, value) != true)) {
                    this.ExecStoredProcedureField = value;
                    this.RaisePropertyChanged("ExecStoredProcedure");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notification {
            get {
                return this.NotificationField;
            }
            set {
                if ((object.ReferenceEquals(this.NotificationField, value) != true)) {
                    this.NotificationField = value;
                    this.RaisePropertyChanged("Notification");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Token {
            get {
                return this.TokenField;
            }
            set {
                if ((object.ReferenceEquals(this.TokenField, value) != true)) {
                    this.TokenField = value;
                    this.RaisePropertyChanged("Token");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Url {
            get {
                return this.UrlField;
            }
            set {
                if ((object.ReferenceEquals(this.UrlField, value) != true)) {
                    this.UrlField = value;
                    this.RaisePropertyChanged("Url");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIDField, value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> mstNotificationID {
            get {
                return this.mstNotificationIDField;
            }
            set {
                if ((this.mstNotificationIDField.Equals(value) != true)) {
                    this.mstNotificationIDField = value;
                    this.RaisePropertyChanged("mstNotificationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long trxTokenID {
            get {
                return this.trxTokenIDField;
            }
            set {
                if ((this.trxTokenIDField.Equals(value) != true)) {
                    this.trxTokenIDField = value;
                    this.RaisePropertyChanged("trxTokenID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="vwConsoleScheduler", Namespace="http://schemas.datacontract.org/2004/07/SecureAccess.Domain.Models")]
    [System.SerializableAttribute()]
    public partial class vwConsoleScheduler : ARSystemFrontEnd.SecureAccessService.BaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConsoleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> EveryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsRunningField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IsToExecuteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastExecutionDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> LastExecutionTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RunningElapsedTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ScheduleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TimeExpiredField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConsoleID {
            get {
                return this.ConsoleIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ConsoleIDField, value) != true)) {
                    this.ConsoleIDField = value;
                    this.RaisePropertyChanged("ConsoleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Every {
            get {
                return this.EveryField;
            }
            set {
                if ((this.EveryField.Equals(value) != true)) {
                    this.EveryField = value;
                    this.RaisePropertyChanged("Every");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsRunning {
            get {
                return this.IsRunningField;
            }
            set {
                if ((this.IsRunningField.Equals(value) != true)) {
                    this.IsRunningField = value;
                    this.RaisePropertyChanged("IsRunning");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IsToExecute {
            get {
                return this.IsToExecuteField;
            }
            set {
                if ((this.IsToExecuteField.Equals(value) != true)) {
                    this.IsToExecuteField = value;
                    this.RaisePropertyChanged("IsToExecute");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastExecutionDate {
            get {
                return this.LastExecutionDateField;
            }
            set {
                if ((this.LastExecutionDateField.Equals(value) != true)) {
                    this.LastExecutionDateField = value;
                    this.RaisePropertyChanged("LastExecutionDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> LastExecutionTime {
            get {
                return this.LastExecutionTimeField;
            }
            set {
                if ((this.LastExecutionTimeField.Equals(value) != true)) {
                    this.LastExecutionTimeField = value;
                    this.RaisePropertyChanged("LastExecutionTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RunningElapsedTime {
            get {
                return this.RunningElapsedTimeField;
            }
            set {
                if ((this.RunningElapsedTimeField.Equals(value) != true)) {
                    this.RunningElapsedTimeField = value;
                    this.RaisePropertyChanged("RunningElapsedTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ScheduleID {
            get {
                return this.ScheduleIDField;
            }
            set {
                if ((this.ScheduleIDField.Equals(value) != true)) {
                    this.ScheduleIDField = value;
                    this.RaisePropertyChanged("ScheduleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TimeExpired {
            get {
                return this.TimeExpiredField;
            }
            set {
                if ((this.TimeExpiredField.Equals(value) != true)) {
                    this.TimeExpiredField = value;
                    this.RaisePropertyChanged("TimeExpired");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LogSchedule", Namespace="http://schemas.datacontract.org/2004/07/SecureAccess.Domain.Models")]
    [System.SerializableAttribute()]
    public partial class LogSchedule : ARSystemFrontEnd.SecureAccessService.BaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ExecutionDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> ExecutionTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsSuccessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long LogIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LogMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ScheduleIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ExecutionDate {
            get {
                return this.ExecutionDateField;
            }
            set {
                if ((this.ExecutionDateField.Equals(value) != true)) {
                    this.ExecutionDateField = value;
                    this.RaisePropertyChanged("ExecutionDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> ExecutionTime {
            get {
                return this.ExecutionTimeField;
            }
            set {
                if ((this.ExecutionTimeField.Equals(value) != true)) {
                    this.ExecutionTimeField = value;
                    this.RaisePropertyChanged("ExecutionTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long LogID {
            get {
                return this.LogIDField;
            }
            set {
                if ((this.LogIDField.Equals(value) != true)) {
                    this.LogIDField = value;
                    this.RaisePropertyChanged("LogID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LogMessage {
            get {
                return this.LogMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.LogMessageField, value) != true)) {
                    this.LogMessageField = value;
                    this.RaisePropertyChanged("LogMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ScheduleID {
            get {
                return this.ScheduleIDField;
            }
            set {
                if ((this.ScheduleIDField.Equals(value) != true)) {
                    this.ScheduleIDField = value;
                    this.RaisePropertyChanged("ScheduleID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="vmCreateConsole", Namespace="http://schemas.datacontract.org/2004/07/SecureAccess.Domain.Models")]
    [System.SerializableAttribute()]
    public partial class vmCreateConsole : ARSystemFrontEnd.SecureAccessService.BaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConsoleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConsoleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EveryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TimeExpiredField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConsoleID {
            get {
                return this.ConsoleIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ConsoleIDField, value) != true)) {
                    this.ConsoleIDField = value;
                    this.RaisePropertyChanged("ConsoleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConsoleName {
            get {
                return this.ConsoleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ConsoleNameField, value) != true)) {
                    this.ConsoleNameField = value;
                    this.RaisePropertyChanged("ConsoleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Every {
            get {
                return this.EveryField;
            }
            set {
                if ((this.EveryField.Equals(value) != true)) {
                    this.EveryField = value;
                    this.RaisePropertyChanged("Every");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TimeExpired {
            get {
                return this.TimeExpiredField;
            }
            set {
                if ((this.TimeExpiredField.Equals(value) != true)) {
                    this.TimeExpiredField = value;
                    this.RaisePropertyChanged("TimeExpired");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="vwConsoleWeeklyStats", Namespace="http://schemas.datacontract.org/2004/07/SecureAccess.Domain.Models")]
    [System.SerializableAttribute()]
    public partial class vwConsoleWeeklyStats : ARSystemFrontEnd.SecureAccessService.BaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> DayIndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> FailedCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SuccessCountField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> DayIndex {
            get {
                return this.DayIndexField;
            }
            set {
                if ((this.DayIndexField.Equals(value) != true)) {
                    this.DayIndexField = value;
                    this.RaisePropertyChanged("DayIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> FailedCount {
            get {
                return this.FailedCountField;
            }
            set {
                if ((this.FailedCountField.Equals(value) != true)) {
                    this.FailedCountField = value;
                    this.RaisePropertyChanged("FailedCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SuccessCount {
            get {
                return this.SuccessCountField;
            }
            set {
                if ((this.SuccessCountField.Equals(value) != true)) {
                    this.SuccessCountField = value;
                    this.RaisePropertyChanged("SuccessCount");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="vwUserCustomerMenu", Namespace="http://schemas.datacontract.org/2004/07/SecureAccess.Domain.Models")]
    [System.SerializableAttribute()]
    public partial class vwUserCustomerMenu : ARSystemFrontEnd.SecureAccessService.BaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ApplicationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FaIconField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MenuField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MenuParentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> MenuParentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SortField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TokenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> mstMenuIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ApplicationID {
            get {
                return this.ApplicationIDField;
            }
            set {
                if ((this.ApplicationIDField.Equals(value) != true)) {
                    this.ApplicationIDField = value;
                    this.RaisePropertyChanged("ApplicationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FaIcon {
            get {
                return this.FaIconField;
            }
            set {
                if ((object.ReferenceEquals(this.FaIconField, value) != true)) {
                    this.FaIconField = value;
                    this.RaisePropertyChanged("FaIcon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Menu {
            get {
                return this.MenuField;
            }
            set {
                if ((object.ReferenceEquals(this.MenuField, value) != true)) {
                    this.MenuField = value;
                    this.RaisePropertyChanged("Menu");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MenuParent {
            get {
                return this.MenuParentField;
            }
            set {
                if ((object.ReferenceEquals(this.MenuParentField, value) != true)) {
                    this.MenuParentField = value;
                    this.RaisePropertyChanged("MenuParent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> MenuParentID {
            get {
                return this.MenuParentIDField;
            }
            set {
                if ((this.MenuParentIDField.Equals(value) != true)) {
                    this.MenuParentIDField = value;
                    this.RaisePropertyChanged("MenuParentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Sort {
            get {
                return this.SortField;
            }
            set {
                if ((this.SortField.Equals(value) != true)) {
                    this.SortField = value;
                    this.RaisePropertyChanged("Sort");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Token {
            get {
                return this.TokenField;
            }
            set {
                if ((object.ReferenceEquals(this.TokenField, value) != true)) {
                    this.TokenField = value;
                    this.RaisePropertyChanged("Token");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Url {
            get {
                return this.UrlField;
            }
            set {
                if ((object.ReferenceEquals(this.UrlField, value) != true)) {
                    this.UrlField = value;
                    this.RaisePropertyChanged("Url");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIDField, value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> mstMenuID {
            get {
                return this.mstMenuIDField;
            }
            set {
                if ((this.mstMenuIDField.Equals(value) != true)) {
                    this.mstMenuIDField = value;
                    this.RaisePropertyChanged("mstMenuID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="trxHitCounter", Namespace="http://schemas.datacontract.org/2004/07/SecureAccess.Domain.Models")]
    [System.SerializableAttribute()]
    public partial class trxHitCounter : ARSystemFrontEnd.SecureAccessService.BaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ApplicationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ControllerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HitByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime HitDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UrlField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Action {
            get {
                return this.ActionField;
            }
            set {
                if ((object.ReferenceEquals(this.ActionField, value) != true)) {
                    this.ActionField = value;
                    this.RaisePropertyChanged("Action");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ApplicationID {
            get {
                return this.ApplicationIDField;
            }
            set {
                if ((this.ApplicationIDField.Equals(value) != true)) {
                    this.ApplicationIDField = value;
                    this.RaisePropertyChanged("ApplicationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Controller {
            get {
                return this.ControllerField;
            }
            set {
                if ((object.ReferenceEquals(this.ControllerField, value) != true)) {
                    this.ControllerField = value;
                    this.RaisePropertyChanged("Controller");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HitBy {
            get {
                return this.HitByField;
            }
            set {
                if ((object.ReferenceEquals(this.HitByField, value) != true)) {
                    this.HitByField = value;
                    this.RaisePropertyChanged("HitBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime HitDate {
            get {
                return this.HitDateField;
            }
            set {
                if ((this.HitDateField.Equals(value) != true)) {
                    this.HitDateField = value;
                    this.RaisePropertyChanged("HitDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Url {
            get {
                return this.UrlField;
            }
            set {
                if ((object.ReferenceEquals(this.UrlField, value) != true)) {
                    this.UrlField = value;
                    this.RaisePropertyChanged("Url");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="vwHitCounter", Namespace="http://schemas.datacontract.org/2004/07/SecureAccess.Domain.Models")]
    [System.SerializableAttribute()]
    public partial class vwHitCounter : ARSystemFrontEnd.SecureAccessService.BaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApplicationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ApplicationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ControllerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> HitCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> HitDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastHitDateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Action {
            get {
                return this.ActionField;
            }
            set {
                if ((object.ReferenceEquals(this.ActionField, value) != true)) {
                    this.ActionField = value;
                    this.RaisePropertyChanged("Action");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Application {
            get {
                return this.ApplicationField;
            }
            set {
                if ((object.ReferenceEquals(this.ApplicationField, value) != true)) {
                    this.ApplicationField = value;
                    this.RaisePropertyChanged("Application");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ApplicationID {
            get {
                return this.ApplicationIDField;
            }
            set {
                if ((this.ApplicationIDField.Equals(value) != true)) {
                    this.ApplicationIDField = value;
                    this.RaisePropertyChanged("ApplicationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Controller {
            get {
                return this.ControllerField;
            }
            set {
                if ((object.ReferenceEquals(this.ControllerField, value) != true)) {
                    this.ControllerField = value;
                    this.RaisePropertyChanged("Controller");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> HitCount {
            get {
                return this.HitCountField;
            }
            set {
                if ((this.HitCountField.Equals(value) != true)) {
                    this.HitCountField = value;
                    this.RaisePropertyChanged("HitCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> HitDate {
            get {
                return this.HitDateField;
            }
            set {
                if ((this.HitDateField.Equals(value) != true)) {
                    this.HitDateField = value;
                    this.RaisePropertyChanged("HitDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastHitDate {
            get {
                return this.LastHitDateField;
            }
            set {
                if ((this.LastHitDateField.Equals(value) != true)) {
                    this.LastHitDateField = value;
                    this.RaisePropertyChanged("LastHitDate");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="vwHitCounterOverview", Namespace="http://schemas.datacontract.org/2004/07/SecureAccess.Domain.Models")]
    [System.SerializableAttribute()]
    public partial class vwHitCounterOverview : ARSystemFrontEnd.SecureAccessService.BaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApplicationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ApplicationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> HitCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HitDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastHitDateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Application {
            get {
                return this.ApplicationField;
            }
            set {
                if ((object.ReferenceEquals(this.ApplicationField, value) != true)) {
                    this.ApplicationField = value;
                    this.RaisePropertyChanged("Application");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ApplicationID {
            get {
                return this.ApplicationIDField;
            }
            set {
                if ((this.ApplicationIDField.Equals(value) != true)) {
                    this.ApplicationIDField = value;
                    this.RaisePropertyChanged("ApplicationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> HitCount {
            get {
                return this.HitCountField;
            }
            set {
                if ((this.HitCountField.Equals(value) != true)) {
                    this.HitCountField = value;
                    this.RaisePropertyChanged("HitCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HitDate {
            get {
                return this.HitDateField;
            }
            set {
                if ((object.ReferenceEquals(this.HitDateField, value) != true)) {
                    this.HitDateField = value;
                    this.RaisePropertyChanged("HitDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastHitDate {
            get {
                return this.LastHitDateField;
            }
            set {
                if ((this.LastHitDateField.Equals(value) != true)) {
                    this.LastHitDateField = value;
                    this.RaisePropertyChanged("LastHitDate");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="vmHitCounterPercentage", Namespace="http://schemas.datacontract.org/2004/07/SecureAccess.Domain.Models")]
    [System.SerializableAttribute()]
    public partial class vmHitCounterPercentage : ARSystemFrontEnd.SecureAccessService.BaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApplicationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ApplicationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ControllerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> HitCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> HitPercentageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> HitYearField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Application {
            get {
                return this.ApplicationField;
            }
            set {
                if ((object.ReferenceEquals(this.ApplicationField, value) != true)) {
                    this.ApplicationField = value;
                    this.RaisePropertyChanged("Application");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ApplicationID {
            get {
                return this.ApplicationIDField;
            }
            set {
                if ((this.ApplicationIDField.Equals(value) != true)) {
                    this.ApplicationIDField = value;
                    this.RaisePropertyChanged("ApplicationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Controller {
            get {
                return this.ControllerField;
            }
            set {
                if ((object.ReferenceEquals(this.ControllerField, value) != true)) {
                    this.ControllerField = value;
                    this.RaisePropertyChanged("Controller");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> HitCount {
            get {
                return this.HitCountField;
            }
            set {
                if ((this.HitCountField.Equals(value) != true)) {
                    this.HitCountField = value;
                    this.RaisePropertyChanged("HitCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> HitPercentage {
            get {
                return this.HitPercentageField;
            }
            set {
                if ((this.HitPercentageField.Equals(value) != true)) {
                    this.HitPercentageField = value;
                    this.RaisePropertyChanged("HitPercentage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> HitYear {
            get {
                return this.HitYearField;
            }
            set {
                if ((this.HitYearField.Equals(value) != true)) {
                    this.HitYearField = value;
                    this.RaisePropertyChanged("HitYear");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="vwHitCounterNonUtilized", Namespace="http://schemas.datacontract.org/2004/07/SecureAccess.Domain.Models")]
    [System.SerializableAttribute()]
    public partial class vwHitCounterNonUtilized : ARSystemFrontEnd.SecureAccessService.BaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ApplicationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UrlField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ApplicationID {
            get {
                return this.ApplicationIDField;
            }
            set {
                if ((this.ApplicationIDField.Equals(value) != true)) {
                    this.ApplicationIDField = value;
                    this.RaisePropertyChanged("ApplicationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Url {
            get {
                return this.UrlField;
            }
            set {
                if ((object.ReferenceEquals(this.UrlField, value) != true)) {
                    this.UrlField = value;
                    this.RaisePropertyChanged("Url");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="vwHitCounterPageList", Namespace="http://schemas.datacontract.org/2004/07/SecureAccess.Domain.Models")]
    [System.SerializableAttribute()]
    public partial class vwHitCounterPageList : ARSystemFrontEnd.SecureAccessService.BaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ApplicationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> HitCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> HitDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> HitYearField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UrlField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ApplicationID {
            get {
                return this.ApplicationIDField;
            }
            set {
                if ((this.ApplicationIDField.Equals(value) != true)) {
                    this.ApplicationIDField = value;
                    this.RaisePropertyChanged("ApplicationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> HitCount {
            get {
                return this.HitCountField;
            }
            set {
                if ((this.HitCountField.Equals(value) != true)) {
                    this.HitCountField = value;
                    this.RaisePropertyChanged("HitCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> HitDate {
            get {
                return this.HitDateField;
            }
            set {
                if ((this.HitDateField.Equals(value) != true)) {
                    this.HitDateField = value;
                    this.RaisePropertyChanged("HitDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> HitYear {
            get {
                return this.HitYearField;
            }
            set {
                if ((this.HitYearField.Equals(value) != true)) {
                    this.HitYearField = value;
                    this.RaisePropertyChanged("HitYear");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Url {
            get {
                return this.UrlField;
            }
            set {
                if ((object.ReferenceEquals(this.UrlField, value) != true)) {
                    this.UrlField = value;
                    this.RaisePropertyChanged("Url");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="vwUserActionList", Namespace="http://schemas.datacontract.org/2004/07/SecureAccess.Domain.Models")]
    [System.SerializableAttribute()]
    public partial class vwUserActionList : ARSystemFrontEnd.SecureAccessService.BaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActionTokenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ApplicationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int mstRoleIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Action {
            get {
                return this.ActionField;
            }
            set {
                if ((object.ReferenceEquals(this.ActionField, value) != true)) {
                    this.ActionField = value;
                    this.RaisePropertyChanged("Action");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ActionToken {
            get {
                return this.ActionTokenField;
            }
            set {
                if ((object.ReferenceEquals(this.ActionTokenField, value) != true)) {
                    this.ActionTokenField = value;
                    this.RaisePropertyChanged("ActionToken");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ApplicationID {
            get {
                return this.ApplicationIDField;
            }
            set {
                if ((this.ApplicationIDField.Equals(value) != true)) {
                    this.ApplicationIDField = value;
                    this.RaisePropertyChanged("ApplicationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullName {
            get {
                return this.FullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FullNameField, value) != true)) {
                    this.FullNameField = value;
                    this.RaisePropertyChanged("FullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Role {
            get {
                return this.RoleField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleField, value) != true)) {
                    this.RoleField = value;
                    this.RaisePropertyChanged("Role");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIDField, value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int mstRoleID {
            get {
                return this.mstRoleIDField;
            }
            set {
                if ((this.mstRoleIDField.Equals(value) != true)) {
                    this.mstRoleIDField = value;
                    this.RaisePropertyChanged("mstRoleID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="mstRole", Namespace="http://schemas.datacontract.org/2004/07/SecureAccess.Domain.Models")]
    [System.SerializableAttribute()]
    public partial class mstRole : ARSystemFrontEnd.SecureAccessService.BaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UpdatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> UpdatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int mstRoleIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Role {
            get {
                return this.RoleField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleField, value) != true)) {
                    this.RoleField = value;
                    this.RaisePropertyChanged("Role");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UpdatedBy {
            get {
                return this.UpdatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.UpdatedByField, value) != true)) {
                    this.UpdatedByField = value;
                    this.RaisePropertyChanged("UpdatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UpdatedDate {
            get {
                return this.UpdatedDateField;
            }
            set {
                if ((this.UpdatedDateField.Equals(value) != true)) {
                    this.UpdatedDateField = value;
                    this.RaisePropertyChanged("UpdatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int mstRoleID {
            get {
                return this.mstRoleIDField;
            }
            set {
                if ((this.mstRoleIDField.Equals(value) != true)) {
                    this.mstRoleIDField = value;
                    this.RaisePropertyChanged("mstRoleID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="vwRoleAction", Namespace="http://schemas.datacontract.org/2004/07/SecureAccess.Domain.Models")]
    [System.SerializableAttribute()]
    public partial class vwRoleAction : ARSystemFrontEnd.SecureAccessService.BaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActionTokenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ApplicationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsMenuField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int mstActionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int mstRoleIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Action {
            get {
                return this.ActionField;
            }
            set {
                if ((object.ReferenceEquals(this.ActionField, value) != true)) {
                    this.ActionField = value;
                    this.RaisePropertyChanged("Action");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ActionToken {
            get {
                return this.ActionTokenField;
            }
            set {
                if ((object.ReferenceEquals(this.ActionTokenField, value) != true)) {
                    this.ActionTokenField = value;
                    this.RaisePropertyChanged("ActionToken");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ApplicationID {
            get {
                return this.ApplicationIDField;
            }
            set {
                if ((this.ApplicationIDField.Equals(value) != true)) {
                    this.ApplicationIDField = value;
                    this.RaisePropertyChanged("ApplicationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsMenu {
            get {
                return this.IsMenuField;
            }
            set {
                if ((this.IsMenuField.Equals(value) != true)) {
                    this.IsMenuField = value;
                    this.RaisePropertyChanged("IsMenu");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int mstActionID {
            get {
                return this.mstActionIDField;
            }
            set {
                if ((this.mstActionIDField.Equals(value) != true)) {
                    this.mstActionIDField = value;
                    this.RaisePropertyChanged("mstActionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int mstRoleID {
            get {
                return this.mstRoleIDField;
            }
            set {
                if ((this.mstRoleIDField.Equals(value) != true)) {
                    this.mstRoleIDField = value;
                    this.RaisePropertyChanged("mstRoleID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="vwRoleMenu", Namespace="http://schemas.datacontract.org/2004/07/SecureAccess.Domain.Models")]
    [System.SerializableAttribute()]
    public partial class vwRoleMenu : ARSystemFrontEnd.SecureAccessService.BaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ActionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ApplicationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FaIconField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MenuField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MenuParentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MenuParentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RoleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RootMenuField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SortField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long mstMenuIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ActionID {
            get {
                return this.ActionIDField;
            }
            set {
                if ((this.ActionIDField.Equals(value) != true)) {
                    this.ActionIDField = value;
                    this.RaisePropertyChanged("ActionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ApplicationID {
            get {
                return this.ApplicationIDField;
            }
            set {
                if ((this.ApplicationIDField.Equals(value) != true)) {
                    this.ApplicationIDField = value;
                    this.RaisePropertyChanged("ApplicationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FaIcon {
            get {
                return this.FaIconField;
            }
            set {
                if ((object.ReferenceEquals(this.FaIconField, value) != true)) {
                    this.FaIconField = value;
                    this.RaisePropertyChanged("FaIcon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Menu {
            get {
                return this.MenuField;
            }
            set {
                if ((object.ReferenceEquals(this.MenuField, value) != true)) {
                    this.MenuField = value;
                    this.RaisePropertyChanged("Menu");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MenuParent {
            get {
                return this.MenuParentField;
            }
            set {
                if ((object.ReferenceEquals(this.MenuParentField, value) != true)) {
                    this.MenuParentField = value;
                    this.RaisePropertyChanged("MenuParent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MenuParentID {
            get {
                return this.MenuParentIDField;
            }
            set {
                if ((this.MenuParentIDField.Equals(value) != true)) {
                    this.MenuParentIDField = value;
                    this.RaisePropertyChanged("MenuParentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RoleID {
            get {
                return this.RoleIDField;
            }
            set {
                if ((this.RoleIDField.Equals(value) != true)) {
                    this.RoleIDField = value;
                    this.RaisePropertyChanged("RoleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RootMenu {
            get {
                return this.RootMenuField;
            }
            set {
                if ((object.ReferenceEquals(this.RootMenuField, value) != true)) {
                    this.RootMenuField = value;
                    this.RaisePropertyChanged("RootMenu");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Sort {
            get {
                return this.SortField;
            }
            set {
                if ((this.SortField.Equals(value) != true)) {
                    this.SortField = value;
                    this.RaisePropertyChanged("Sort");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Url {
            get {
                return this.UrlField;
            }
            set {
                if ((object.ReferenceEquals(this.UrlField, value) != true)) {
                    this.UrlField = value;
                    this.RaisePropertyChanged("Url");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long mstMenuID {
            get {
                return this.mstMenuIDField;
            }
            set {
                if ((this.mstMenuIDField.Equals(value) != true)) {
                    this.mstMenuIDField = value;
                    this.RaisePropertyChanged("mstMenuID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="vmMappingUserAction", Namespace="http://schemas.datacontract.org/2004/07/SecureAccess.Domain.Models")]
    [System.SerializableAttribute()]
    public partial class vmMappingUserAction : ARSystemFrontEnd.SecureAccessService.BaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsAllowedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int mstActionIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Action {
            get {
                return this.ActionField;
            }
            set {
                if ((object.ReferenceEquals(this.ActionField, value) != true)) {
                    this.ActionField = value;
                    this.RaisePropertyChanged("Action");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAllowed {
            get {
                return this.IsAllowedField;
            }
            set {
                if ((this.IsAllowedField.Equals(value) != true)) {
                    this.IsAllowedField = value;
                    this.RaisePropertyChanged("IsAllowed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int mstActionID {
            get {
                return this.mstActionIDField;
            }
            set {
                if ((this.mstActionIDField.Equals(value) != true)) {
                    this.mstActionIDField = value;
                    this.RaisePropertyChanged("mstActionID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="vmMappingUserHomeDashboard", Namespace="http://schemas.datacontract.org/2004/07/SecureAccess.Domain.Models")]
    [System.SerializableAttribute()]
    public partial class vmMappingUserHomeDashboard : ARSystemFrontEnd.SecureAccessService.BaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DashboardField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsAllowedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int mstDashboardIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dashboard {
            get {
                return this.DashboardField;
            }
            set {
                if ((object.ReferenceEquals(this.DashboardField, value) != true)) {
                    this.DashboardField = value;
                    this.RaisePropertyChanged("Dashboard");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAllowed {
            get {
                return this.IsAllowedField;
            }
            set {
                if ((this.IsAllowedField.Equals(value) != true)) {
                    this.IsAllowedField = value;
                    this.RaisePropertyChanged("IsAllowed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int mstDashboardID {
            get {
                return this.mstDashboardIDField;
            }
            set {
                if ((this.mstDashboardIDField.Equals(value) != true)) {
                    this.mstDashboardIDField = value;
                    this.RaisePropertyChanged("mstDashboardID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="vmMappingUserTaskToDo", Namespace="http://schemas.datacontract.org/2004/07/SecureAccess.Domain.Models")]
    [System.SerializableAttribute()]
    public partial class vmMappingUserTaskToDo : ARSystemFrontEnd.SecureAccessService.BaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsAllowedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaskToDoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int mstTaskToDoIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAllowed {
            get {
                return this.IsAllowedField;
            }
            set {
                if ((this.IsAllowedField.Equals(value) != true)) {
                    this.IsAllowedField = value;
                    this.RaisePropertyChanged("IsAllowed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaskToDo {
            get {
                return this.TaskToDoField;
            }
            set {
                if ((object.ReferenceEquals(this.TaskToDoField, value) != true)) {
                    this.TaskToDoField = value;
                    this.RaisePropertyChanged("TaskToDo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int mstTaskToDoID {
            get {
                return this.mstTaskToDoIDField;
            }
            set {
                if ((this.mstTaskToDoIDField.Equals(value) != true)) {
                    this.mstTaskToDoIDField = value;
                    this.RaisePropertyChanged("mstTaskToDoID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="vmMappingUserJobTitle", Namespace="http://schemas.datacontract.org/2004/07/SecureAccess.Domain.Models")]
    [System.SerializableAttribute()]
    public partial class vmMappingUserJobTitle : ARSystemFrontEnd.SecureAccessService.BaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsMappedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSelectedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JobTitleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JobTitleNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsMapped {
            get {
                return this.IsMappedField;
            }
            set {
                if ((this.IsMappedField.Equals(value) != true)) {
                    this.IsMappedField = value;
                    this.RaisePropertyChanged("IsMapped");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSelected {
            get {
                return this.IsSelectedField;
            }
            set {
                if ((this.IsSelectedField.Equals(value) != true)) {
                    this.IsSelectedField = value;
                    this.RaisePropertyChanged("IsSelected");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JobTitleID {
            get {
                return this.JobTitleIDField;
            }
            set {
                if ((object.ReferenceEquals(this.JobTitleIDField, value) != true)) {
                    this.JobTitleIDField = value;
                    this.RaisePropertyChanged("JobTitleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JobTitleName {
            get {
                return this.JobTitleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.JobTitleNameField, value) != true)) {
                    this.JobTitleNameField = value;
                    this.RaisePropertyChanged("JobTitleName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="idxRoleAction", Namespace="http://schemas.datacontract.org/2004/07/SecureAccess.Domain.Models")]
    [System.SerializableAttribute()]
    public partial class idxRoleAction : ARSystemFrontEnd.SecureAccessService.BaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long idxRoleActionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int mstActionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int mstRoleIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long idxRoleActionID {
            get {
                return this.idxRoleActionIDField;
            }
            set {
                if ((this.idxRoleActionIDField.Equals(value) != true)) {
                    this.idxRoleActionIDField = value;
                    this.RaisePropertyChanged("idxRoleActionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int mstActionID {
            get {
                return this.mstActionIDField;
            }
            set {
                if ((this.mstActionIDField.Equals(value) != true)) {
                    this.mstActionIDField = value;
                    this.RaisePropertyChanged("mstActionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int mstRoleID {
            get {
                return this.mstRoleIDField;
            }
            set {
                if ((this.mstRoleIDField.Equals(value) != true)) {
                    this.mstRoleIDField = value;
                    this.RaisePropertyChanged("mstRoleID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="idxRoleHomeDashboard", Namespace="http://schemas.datacontract.org/2004/07/SecureAccess.Domain.Models")]
    [System.SerializableAttribute()]
    public partial class idxRoleHomeDashboard : ARSystemFrontEnd.SecureAccessService.BaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long idxRoleDashboardIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int mstDashboardIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int mstRoleIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long idxRoleDashboardID {
            get {
                return this.idxRoleDashboardIDField;
            }
            set {
                if ((this.idxRoleDashboardIDField.Equals(value) != true)) {
                    this.idxRoleDashboardIDField = value;
                    this.RaisePropertyChanged("idxRoleDashboardID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int mstDashboardID {
            get {
                return this.mstDashboardIDField;
            }
            set {
                if ((this.mstDashboardIDField.Equals(value) != true)) {
                    this.mstDashboardIDField = value;
                    this.RaisePropertyChanged("mstDashboardID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int mstRoleID {
            get {
                return this.mstRoleIDField;
            }
            set {
                if ((this.mstRoleIDField.Equals(value) != true)) {
                    this.mstRoleIDField = value;
                    this.RaisePropertyChanged("mstRoleID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="idxRoleTaskToDo", Namespace="http://schemas.datacontract.org/2004/07/SecureAccess.Domain.Models")]
    [System.SerializableAttribute()]
    public partial class idxRoleTaskToDo : ARSystemFrontEnd.SecureAccessService.BaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idxRoleTaskToDoIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int mstRoleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int mstTaskToDoIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int idxRoleTaskToDoID {
            get {
                return this.idxRoleTaskToDoIDField;
            }
            set {
                if ((this.idxRoleTaskToDoIDField.Equals(value) != true)) {
                    this.idxRoleTaskToDoIDField = value;
                    this.RaisePropertyChanged("idxRoleTaskToDoID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int mstRoleID {
            get {
                return this.mstRoleIDField;
            }
            set {
                if ((this.mstRoleIDField.Equals(value) != true)) {
                    this.mstRoleIDField = value;
                    this.RaisePropertyChanged("mstRoleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int mstTaskToDoID {
            get {
                return this.mstTaskToDoIDField;
            }
            set {
                if ((this.mstTaskToDoIDField.Equals(value) != true)) {
                    this.mstTaskToDoIDField = value;
                    this.RaisePropertyChanged("mstTaskToDoID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="mstRootDashboardMobile", Namespace="http://schemas.datacontract.org/2004/07/SecureAccess.Domain.Models")]
    [System.SerializableAttribute()]
    public partial class mstRootDashboardMobile : ARSystemFrontEnd.SecureAccessService.BaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string created_byField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> created_dateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> sortField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string updated_byField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> updated_dateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string created_by {
            get {
                return this.created_byField;
            }
            set {
                if ((object.ReferenceEquals(this.created_byField, value) != true)) {
                    this.created_byField = value;
                    this.RaisePropertyChanged("created_by");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> created_date {
            get {
                return this.created_dateField;
            }
            set {
                if ((this.created_dateField.Equals(value) != true)) {
                    this.created_dateField = value;
                    this.RaisePropertyChanged("created_date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> sort {
            get {
                return this.sortField;
            }
            set {
                if ((this.sortField.Equals(value) != true)) {
                    this.sortField = value;
                    this.RaisePropertyChanged("sort");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string updated_by {
            get {
                return this.updated_byField;
            }
            set {
                if ((object.ReferenceEquals(this.updated_byField, value) != true)) {
                    this.updated_byField = value;
                    this.RaisePropertyChanged("updated_by");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> updated_date {
            get {
                return this.updated_dateField;
            }
            set {
                if ((this.updated_dateField.Equals(value) != true)) {
                    this.updated_dateField = value;
                    this.RaisePropertyChanged("updated_date");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="idxRoleDynamicData", Namespace="http://schemas.datacontract.org/2004/07/SecureAccess.Domain.Models")]
    [System.SerializableAttribute()]
    public partial class idxRoleDynamicData : ARSystemFrontEnd.SecureAccessService.BaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long idxRoleDynamicDataIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int mstRoleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int mstRootIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long idxRoleDynamicDataID {
            get {
                return this.idxRoleDynamicDataIDField;
            }
            set {
                if ((this.idxRoleDynamicDataIDField.Equals(value) != true)) {
                    this.idxRoleDynamicDataIDField = value;
                    this.RaisePropertyChanged("idxRoleDynamicDataID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int mstRoleID {
            get {
                return this.mstRoleIDField;
            }
            set {
                if ((this.mstRoleIDField.Equals(value) != true)) {
                    this.mstRoleIDField = value;
                    this.RaisePropertyChanged("mstRoleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int mstRootID {
            get {
                return this.mstRootIDField;
            }
            set {
                if ((this.mstRootIDField.Equals(value) != true)) {
                    this.mstRootIDField = value;
                    this.RaisePropertyChanged("mstRootID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="idxRoleDynamicDashboard", Namespace="http://schemas.datacontract.org/2004/07/SecureAccess.Domain.Models")]
    [System.SerializableAttribute()]
    public partial class idxRoleDynamicDashboard : ARSystemFrontEnd.SecureAccessService.BaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long idxRoleDynamicDashboardIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int mstDashboardMobileIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int mstRoleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int mstRootDashboardMobileIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long idxRoleDynamicDashboardID {
            get {
                return this.idxRoleDynamicDashboardIDField;
            }
            set {
                if ((this.idxRoleDynamicDashboardIDField.Equals(value) != true)) {
                    this.idxRoleDynamicDashboardIDField = value;
                    this.RaisePropertyChanged("idxRoleDynamicDashboardID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int mstDashboardMobileID {
            get {
                return this.mstDashboardMobileIDField;
            }
            set {
                if ((this.mstDashboardMobileIDField.Equals(value) != true)) {
                    this.mstDashboardMobileIDField = value;
                    this.RaisePropertyChanged("mstDashboardMobileID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int mstRoleID {
            get {
                return this.mstRoleIDField;
            }
            set {
                if ((this.mstRoleIDField.Equals(value) != true)) {
                    this.mstRoleIDField = value;
                    this.RaisePropertyChanged("mstRoleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int mstRootDashboardMobileID {
            get {
                return this.mstRootDashboardMobileIDField;
            }
            set {
                if ((this.mstRootDashboardMobileIDField.Equals(value) != true)) {
                    this.mstRootDashboardMobileIDField = value;
                    this.RaisePropertyChanged("mstRootDashboardMobileID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="vmLogin", Namespace="http://schemas.datacontract.org/2004/07/SecureAccess.Domain.Models")]
    [System.SerializableAttribute()]
    public partial class vmLogin : ARSystemFrontEnd.SecureAccessService.BaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApplicationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ApplicationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BrowserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeviceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DomainField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LatitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LongitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MacAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UniqueTagIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserAgentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Application {
            get {
                return this.ApplicationField;
            }
            set {
                if ((object.ReferenceEquals(this.ApplicationField, value) != true)) {
                    this.ApplicationField = value;
                    this.RaisePropertyChanged("Application");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ApplicationID {
            get {
                return this.ApplicationIDField;
            }
            set {
                if ((this.ApplicationIDField.Equals(value) != true)) {
                    this.ApplicationIDField = value;
                    this.RaisePropertyChanged("ApplicationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Browser {
            get {
                return this.BrowserField;
            }
            set {
                if ((object.ReferenceEquals(this.BrowserField, value) != true)) {
                    this.BrowserField = value;
                    this.RaisePropertyChanged("Browser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Device {
            get {
                return this.DeviceField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceField, value) != true)) {
                    this.DeviceField = value;
                    this.RaisePropertyChanged("Device");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Domain {
            get {
                return this.DomainField;
            }
            set {
                if ((object.ReferenceEquals(this.DomainField, value) != true)) {
                    this.DomainField = value;
                    this.RaisePropertyChanged("Domain");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IP {
            get {
                return this.IPField;
            }
            set {
                if ((object.ReferenceEquals(this.IPField, value) != true)) {
                    this.IPField = value;
                    this.RaisePropertyChanged("IP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((object.ReferenceEquals(this.LatitudeField, value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((object.ReferenceEquals(this.LongitudeField, value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MacAddress {
            get {
                return this.MacAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.MacAddressField, value) != true)) {
                    this.MacAddressField = value;
                    this.RaisePropertyChanged("MacAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UniqueTagID {
            get {
                return this.UniqueTagIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UniqueTagIDField, value) != true)) {
                    this.UniqueTagIDField = value;
                    this.RaisePropertyChanged("UniqueTagID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserAgent {
            get {
                return this.UserAgentField;
            }
            set {
                if ((object.ReferenceEquals(this.UserAgentField, value) != true)) {
                    this.UserAgentField = value;
                    this.RaisePropertyChanged("UserAgent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIDField, value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="vmUserLogin", Namespace="http://schemas.datacontract.org/2004/07/SecureAccess.Domain.Models")]
    [System.SerializableAttribute()]
    public partial class vmUserLogin : ARSystemFrontEnd.SecureAccessService.BaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApplicationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsPasswordDefaultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsPasswordExpiredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserFullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserRoleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserRoleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserTokenField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Application {
            get {
                return this.ApplicationField;
            }
            set {
                if ((object.ReferenceEquals(this.ApplicationField, value) != true)) {
                    this.ApplicationField = value;
                    this.RaisePropertyChanged("Application");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyCode {
            get {
                return this.CompanyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyCodeField, value) != true)) {
                    this.CompanyCodeField = value;
                    this.RaisePropertyChanged("CompanyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerID {
            get {
                return this.CustomerIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerIDField, value) != true)) {
                    this.CustomerIDField = value;
                    this.RaisePropertyChanged("CustomerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPasswordDefault {
            get {
                return this.IsPasswordDefaultField;
            }
            set {
                if ((this.IsPasswordDefaultField.Equals(value) != true)) {
                    this.IsPasswordDefaultField = value;
                    this.RaisePropertyChanged("IsPasswordDefault");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPasswordExpired {
            get {
                return this.IsPasswordExpiredField;
            }
            set {
                if ((this.IsPasswordExpiredField.Equals(value) != true)) {
                    this.IsPasswordExpiredField = value;
                    this.RaisePropertyChanged("IsPasswordExpired");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserFullName {
            get {
                return this.UserFullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserFullNameField, value) != true)) {
                    this.UserFullNameField = value;
                    this.RaisePropertyChanged("UserFullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIDField, value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserRole {
            get {
                return this.UserRoleField;
            }
            set {
                if ((object.ReferenceEquals(this.UserRoleField, value) != true)) {
                    this.UserRoleField = value;
                    this.RaisePropertyChanged("UserRole");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserRoleID {
            get {
                return this.UserRoleIDField;
            }
            set {
                if ((this.UserRoleIDField.Equals(value) != true)) {
                    this.UserRoleIDField = value;
                    this.RaisePropertyChanged("UserRoleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserToken {
            get {
                return this.UserTokenField;
            }
            set {
                if ((object.ReferenceEquals(this.UserTokenField, value) != true)) {
                    this.UserTokenField = value;
                    this.RaisePropertyChanged("UserToken");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="vmUserCredential", Namespace="http://schemas.datacontract.org/2004/07/SecureAccess.Domain.Models")]
    [System.SerializableAttribute()]
    public partial class vmUserCredential : ARSystemFrontEnd.SecureAccessService.BaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserRoleIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerID {
            get {
                return this.CustomerIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerIDField, value) != true)) {
                    this.CustomerIDField = value;
                    this.RaisePropertyChanged("CustomerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIDField, value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserRoleID {
            get {
                return this.UserRoleIDField;
            }
            set {
                if ((this.UserRoleIDField.Equals(value) != true)) {
                    this.UserRoleIDField = value;
                    this.RaisePropertyChanged("UserRoleID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="mstUser", Namespace="http://schemas.datacontract.org/2004/07/SecureAccess.Domain.Models")]
    [System.SerializableAttribute()]
    public partial class mstUser : ARSystemFrontEnd.SecureAccessService.BaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HCISPositionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsPasswordDefaultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PasswordExpiredDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordSaltField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Phone1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Phone2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RegionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RoleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UpdatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> UpdatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserImageField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyCode {
            get {
                return this.CompanyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyCodeField, value) != true)) {
                    this.CompanyCodeField = value;
                    this.RaisePropertyChanged("CompanyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullName {
            get {
                return this.FullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FullNameField, value) != true)) {
                    this.FullNameField = value;
                    this.RaisePropertyChanged("FullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HCISPosition {
            get {
                return this.HCISPositionField;
            }
            set {
                if ((object.ReferenceEquals(this.HCISPositionField, value) != true)) {
                    this.HCISPositionField = value;
                    this.RaisePropertyChanged("HCISPosition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPasswordDefault {
            get {
                return this.IsPasswordDefaultField;
            }
            set {
                if ((this.IsPasswordDefaultField.Equals(value) != true)) {
                    this.IsPasswordDefaultField = value;
                    this.RaisePropertyChanged("IsPasswordDefault");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PasswordExpiredDate {
            get {
                return this.PasswordExpiredDateField;
            }
            set {
                if ((this.PasswordExpiredDateField.Equals(value) != true)) {
                    this.PasswordExpiredDateField = value;
                    this.RaisePropertyChanged("PasswordExpiredDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PasswordSalt {
            get {
                return this.PasswordSaltField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordSaltField, value) != true)) {
                    this.PasswordSaltField = value;
                    this.RaisePropertyChanged("PasswordSalt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone1 {
            get {
                return this.Phone1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Phone1Field, value) != true)) {
                    this.Phone1Field = value;
                    this.RaisePropertyChanged("Phone1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone2 {
            get {
                return this.Phone2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Phone2Field, value) != true)) {
                    this.Phone2Field = value;
                    this.RaisePropertyChanged("Phone2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RegionID {
            get {
                return this.RegionIDField;
            }
            set {
                if ((this.RegionIDField.Equals(value) != true)) {
                    this.RegionIDField = value;
                    this.RaisePropertyChanged("RegionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RoleID {
            get {
                return this.RoleIDField;
            }
            set {
                if ((this.RoleIDField.Equals(value) != true)) {
                    this.RoleIDField = value;
                    this.RaisePropertyChanged("RoleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UpdatedBy {
            get {
                return this.UpdatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.UpdatedByField, value) != true)) {
                    this.UpdatedByField = value;
                    this.RaisePropertyChanged("UpdatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UpdatedDate {
            get {
                return this.UpdatedDateField;
            }
            set {
                if ((this.UpdatedDateField.Equals(value) != true)) {
                    this.UpdatedDateField = value;
                    this.RaisePropertyChanged("UpdatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIDField, value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserImage {
            get {
                return this.UserImageField;
            }
            set {
                if ((object.ReferenceEquals(this.UserImageField, value) != true)) {
                    this.UserImageField = value;
                    this.RaisePropertyChanged("UserImage");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="vwUser", Namespace="http://schemas.datacontract.org/2004/07/SecureAccess.Domain.Models")]
    [System.SerializableAttribute()]
    public partial class vwUser : ARSystemFrontEnd.SecureAccessService.BaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HCISPositionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IsLoginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IsPasswordDefaultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IsPasswordExpiredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Phone1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Phone2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RegionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RoleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserImageField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullName {
            get {
                return this.FullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FullNameField, value) != true)) {
                    this.FullNameField = value;
                    this.RaisePropertyChanged("FullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HCISPosition {
            get {
                return this.HCISPositionField;
            }
            set {
                if ((object.ReferenceEquals(this.HCISPositionField, value) != true)) {
                    this.HCISPositionField = value;
                    this.RaisePropertyChanged("HCISPosition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IsLogin {
            get {
                return this.IsLoginField;
            }
            set {
                if ((this.IsLoginField.Equals(value) != true)) {
                    this.IsLoginField = value;
                    this.RaisePropertyChanged("IsLogin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IsPasswordDefault {
            get {
                return this.IsPasswordDefaultField;
            }
            set {
                if ((this.IsPasswordDefaultField.Equals(value) != true)) {
                    this.IsPasswordDefaultField = value;
                    this.RaisePropertyChanged("IsPasswordDefault");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IsPasswordExpired {
            get {
                return this.IsPasswordExpiredField;
            }
            set {
                if ((this.IsPasswordExpiredField.Equals(value) != true)) {
                    this.IsPasswordExpiredField = value;
                    this.RaisePropertyChanged("IsPasswordExpired");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone1 {
            get {
                return this.Phone1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Phone1Field, value) != true)) {
                    this.Phone1Field = value;
                    this.RaisePropertyChanged("Phone1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone2 {
            get {
                return this.Phone2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Phone2Field, value) != true)) {
                    this.Phone2Field = value;
                    this.RaisePropertyChanged("Phone2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Region {
            get {
                return this.RegionField;
            }
            set {
                if ((object.ReferenceEquals(this.RegionField, value) != true)) {
                    this.RegionField = value;
                    this.RaisePropertyChanged("Region");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RegionID {
            get {
                return this.RegionIDField;
            }
            set {
                if ((this.RegionIDField.Equals(value) != true)) {
                    this.RegionIDField = value;
                    this.RaisePropertyChanged("RegionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Role {
            get {
                return this.RoleField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleField, value) != true)) {
                    this.RoleField = value;
                    this.RaisePropertyChanged("Role");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RoleID {
            get {
                return this.RoleIDField;
            }
            set {
                if ((this.RoleIDField.Equals(value) != true)) {
                    this.RoleIDField = value;
                    this.RaisePropertyChanged("RoleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIDField, value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserImage {
            get {
                return this.UserImageField;
            }
            set {
                if ((object.ReferenceEquals(this.UserImageField, value) != true)) {
                    this.UserImageField = value;
                    this.RaisePropertyChanged("UserImage");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="trxOTP", Namespace="http://schemas.datacontract.org/2004/07/SecureAccess.Domain.Models")]
    [System.SerializableAttribute()]
    public partial class trxOTP : ARSystemFrontEnd.SecureAccessService.BaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApplicationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ApplicationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ExpiredDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsConfirmField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> OTPTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Application {
            get {
                return this.ApplicationField;
            }
            set {
                if ((object.ReferenceEquals(this.ApplicationField, value) != true)) {
                    this.ApplicationField = value;
                    this.RaisePropertyChanged("Application");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ApplicationID {
            get {
                return this.ApplicationIDField;
            }
            set {
                if ((this.ApplicationIDField.Equals(value) != true)) {
                    this.ApplicationIDField = value;
                    this.RaisePropertyChanged("ApplicationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ExpiredDate {
            get {
                return this.ExpiredDateField;
            }
            set {
                if ((this.ExpiredDateField.Equals(value) != true)) {
                    this.ExpiredDateField = value;
                    this.RaisePropertyChanged("ExpiredDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IP {
            get {
                return this.IPField;
            }
            set {
                if ((object.ReferenceEquals(this.IPField, value) != true)) {
                    this.IPField = value;
                    this.RaisePropertyChanged("IP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsConfirm {
            get {
                return this.IsConfirmField;
            }
            set {
                if ((this.IsConfirmField.Equals(value) != true)) {
                    this.IsConfirmField = value;
                    this.RaisePropertyChanged("IsConfirm");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> OTPTypeID {
            get {
                return this.OTPTypeIDField;
            }
            set {
                if ((this.OTPTypeIDField.Equals(value) != true)) {
                    this.OTPTypeIDField = value;
                    this.RaisePropertyChanged("OTPTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIDField, value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="vmUserPrivilege", Namespace="http://schemas.datacontract.org/2004/07/SecureAccess.Domain.Models")]
    [System.SerializableAttribute()]
    public partial class vmUserPrivilege : ARSystemFrontEnd.SecureAccessService.BaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PrivilegeStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PrivilegeStatus {
            get {
                return this.PrivilegeStatusField;
            }
            set {
                if ((this.PrivilegeStatusField.Equals(value) != true)) {
                    this.PrivilegeStatusField = value;
                    this.RaisePropertyChanged("PrivilegeStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIDField, value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="vmUserVendorLogin", Namespace="http://schemas.datacontract.org/2004/07/SecureAccess.Domain.Models")]
    [System.SerializableAttribute()]
    public partial class vmUserVendorLogin : ARSystemFrontEnd.SecureAccessService.BaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApplicationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsPasswordExpiredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserFullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserRoleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserTokenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Application {
            get {
                return this.ApplicationField;
            }
            set {
                if ((object.ReferenceEquals(this.ApplicationField, value) != true)) {
                    this.ApplicationField = value;
                    this.RaisePropertyChanged("Application");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPasswordExpired {
            get {
                return this.IsPasswordExpiredField;
            }
            set {
                if ((this.IsPasswordExpiredField.Equals(value) != true)) {
                    this.IsPasswordExpiredField = value;
                    this.RaisePropertyChanged("IsPasswordExpired");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserFullName {
            get {
                return this.UserFullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserFullNameField, value) != true)) {
                    this.UserFullNameField = value;
                    this.RaisePropertyChanged("UserFullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIDField, value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserRole {
            get {
                return this.UserRoleField;
            }
            set {
                if ((object.ReferenceEquals(this.UserRoleField, value) != true)) {
                    this.UserRoleField = value;
                    this.RaisePropertyChanged("UserRole");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserToken {
            get {
                return this.UserTokenField;
            }
            set {
                if ((object.ReferenceEquals(this.UserTokenField, value) != true)) {
                    this.UserTokenField = value;
                    this.RaisePropertyChanged("UserToken");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorId {
            get {
                return this.VendorIdField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorIdField, value) != true)) {
                    this.VendorIdField = value;
                    this.RaisePropertyChanged("VendorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorName {
            get {
                return this.VendorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNameField, value) != true)) {
                    this.VendorNameField = value;
                    this.RaisePropertyChanged("VendorName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="mstUserVendor", Namespace="http://schemas.datacontract.org/2004/07/SecureAccess.Domain.Models")]
    [System.SerializableAttribute()]
    public partial class mstUserVendor : ARSystemFrontEnd.SecureAccessService.BaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PasswordExpiredDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordSaltField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Phone1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Phone2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RoleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UpdatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> UpdatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserImageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullName {
            get {
                return this.FullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FullNameField, value) != true)) {
                    this.FullNameField = value;
                    this.RaisePropertyChanged("FullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PasswordExpiredDate {
            get {
                return this.PasswordExpiredDateField;
            }
            set {
                if ((this.PasswordExpiredDateField.Equals(value) != true)) {
                    this.PasswordExpiredDateField = value;
                    this.RaisePropertyChanged("PasswordExpiredDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PasswordSalt {
            get {
                return this.PasswordSaltField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordSaltField, value) != true)) {
                    this.PasswordSaltField = value;
                    this.RaisePropertyChanged("PasswordSalt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone1 {
            get {
                return this.Phone1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Phone1Field, value) != true)) {
                    this.Phone1Field = value;
                    this.RaisePropertyChanged("Phone1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone2 {
            get {
                return this.Phone2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Phone2Field, value) != true)) {
                    this.Phone2Field = value;
                    this.RaisePropertyChanged("Phone2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RoleID {
            get {
                return this.RoleIDField;
            }
            set {
                if ((this.RoleIDField.Equals(value) != true)) {
                    this.RoleIDField = value;
                    this.RaisePropertyChanged("RoleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UpdatedBy {
            get {
                return this.UpdatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.UpdatedByField, value) != true)) {
                    this.UpdatedByField = value;
                    this.RaisePropertyChanged("UpdatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UpdatedDate {
            get {
                return this.UpdatedDateField;
            }
            set {
                if ((this.UpdatedDateField.Equals(value) != true)) {
                    this.UpdatedDateField = value;
                    this.RaisePropertyChanged("UpdatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIDField, value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserImage {
            get {
                return this.UserImageField;
            }
            set {
                if ((object.ReferenceEquals(this.UserImageField, value) != true)) {
                    this.UserImageField = value;
                    this.RaisePropertyChanged("UserImage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorID {
            get {
                return this.VendorIDField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorIDField, value) != true)) {
                    this.VendorIDField = value;
                    this.RaisePropertyChanged("VendorID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="vwUserVendor", Namespace="http://schemas.datacontract.org/2004/07/SecureAccess.Domain.Models")]
    [System.SerializableAttribute()]
    public partial class vwUserVendor : ARSystemFrontEnd.SecureAccessService.BaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IsLoginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IsPasswordExpiredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Phone1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Phone2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RoleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserImageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullName {
            get {
                return this.FullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FullNameField, value) != true)) {
                    this.FullNameField = value;
                    this.RaisePropertyChanged("FullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IsLogin {
            get {
                return this.IsLoginField;
            }
            set {
                if ((this.IsLoginField.Equals(value) != true)) {
                    this.IsLoginField = value;
                    this.RaisePropertyChanged("IsLogin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IsPasswordExpired {
            get {
                return this.IsPasswordExpiredField;
            }
            set {
                if ((this.IsPasswordExpiredField.Equals(value) != true)) {
                    this.IsPasswordExpiredField = value;
                    this.RaisePropertyChanged("IsPasswordExpired");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone1 {
            get {
                return this.Phone1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Phone1Field, value) != true)) {
                    this.Phone1Field = value;
                    this.RaisePropertyChanged("Phone1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone2 {
            get {
                return this.Phone2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Phone2Field, value) != true)) {
                    this.Phone2Field = value;
                    this.RaisePropertyChanged("Phone2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Role {
            get {
                return this.RoleField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleField, value) != true)) {
                    this.RoleField = value;
                    this.RaisePropertyChanged("Role");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RoleID {
            get {
                return this.RoleIDField;
            }
            set {
                if ((this.RoleIDField.Equals(value) != true)) {
                    this.RoleIDField = value;
                    this.RaisePropertyChanged("RoleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIDField, value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserImage {
            get {
                return this.UserImageField;
            }
            set {
                if ((object.ReferenceEquals(this.UserImageField, value) != true)) {
                    this.UserImageField = value;
                    this.RaisePropertyChanged("UserImage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorID {
            get {
                return this.VendorIDField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorIDField, value) != true)) {
                    this.VendorIDField = value;
                    this.RaisePropertyChanged("VendorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorName {
            get {
                return this.VendorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNameField, value) != true)) {
                    this.VendorNameField = value;
                    this.RaisePropertyChanged("VendorName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="mstVendor", Namespace="http://schemas.datacontract.org/2004/07/SecureAccess.Domain.Models")]
    [System.SerializableAttribute()]
    public partial class mstVendor : ARSystemFrontEnd.SecureAccessService.BaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Address1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Address2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Address3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CPEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CPPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DirectorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DirectorEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DirectorPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NPWPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NPWPAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostalCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RecipientAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RecipientNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResidenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TelephoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UpdatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> UpdatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorAXIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorInitialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address1 {
            get {
                return this.Address1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Address1Field, value) != true)) {
                    this.Address1Field = value;
                    this.RaisePropertyChanged("Address1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address2 {
            get {
                return this.Address2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Address2Field, value) != true)) {
                    this.Address2Field = value;
                    this.RaisePropertyChanged("Address2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address3 {
            get {
                return this.Address3Field;
            }
            set {
                if ((object.ReferenceEquals(this.Address3Field, value) != true)) {
                    this.Address3Field = value;
                    this.RaisePropertyChanged("Address3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CP {
            get {
                return this.CPField;
            }
            set {
                if ((object.ReferenceEquals(this.CPField, value) != true)) {
                    this.CPField = value;
                    this.RaisePropertyChanged("CP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CPEmail {
            get {
                return this.CPEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.CPEmailField, value) != true)) {
                    this.CPEmailField = value;
                    this.RaisePropertyChanged("CPEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CPPhone {
            get {
                return this.CPPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.CPPhoneField, value) != true)) {
                    this.CPPhoneField = value;
                    this.RaisePropertyChanged("CPPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Director {
            get {
                return this.DirectorField;
            }
            set {
                if ((object.ReferenceEquals(this.DirectorField, value) != true)) {
                    this.DirectorField = value;
                    this.RaisePropertyChanged("Director");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DirectorEmail {
            get {
                return this.DirectorEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.DirectorEmailField, value) != true)) {
                    this.DirectorEmailField = value;
                    this.RaisePropertyChanged("DirectorEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DirectorPhone {
            get {
                return this.DirectorPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.DirectorPhoneField, value) != true)) {
                    this.DirectorPhoneField = value;
                    this.RaisePropertyChanged("DirectorPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Fax {
            get {
                return this.FaxField;
            }
            set {
                if ((object.ReferenceEquals(this.FaxField, value) != true)) {
                    this.FaxField = value;
                    this.RaisePropertyChanged("Fax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NPWP {
            get {
                return this.NPWPField;
            }
            set {
                if ((object.ReferenceEquals(this.NPWPField, value) != true)) {
                    this.NPWPField = value;
                    this.RaisePropertyChanged("NPWP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NPWPAddress {
            get {
                return this.NPWPAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.NPWPAddressField, value) != true)) {
                    this.NPWPAddressField = value;
                    this.RaisePropertyChanged("NPWPAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostalCode {
            get {
                return this.PostalCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PostalCodeField, value) != true)) {
                    this.PostalCodeField = value;
                    this.RaisePropertyChanged("PostalCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RecipientAddress {
            get {
                return this.RecipientAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.RecipientAddressField, value) != true)) {
                    this.RecipientAddressField = value;
                    this.RaisePropertyChanged("RecipientAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RecipientName {
            get {
                return this.RecipientNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RecipientNameField, value) != true)) {
                    this.RecipientNameField = value;
                    this.RaisePropertyChanged("RecipientName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Residence {
            get {
                return this.ResidenceField;
            }
            set {
                if ((object.ReferenceEquals(this.ResidenceField, value) != true)) {
                    this.ResidenceField = value;
                    this.RaisePropertyChanged("Residence");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Telephone {
            get {
                return this.TelephoneField;
            }
            set {
                if ((object.ReferenceEquals(this.TelephoneField, value) != true)) {
                    this.TelephoneField = value;
                    this.RaisePropertyChanged("Telephone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UpdatedBy {
            get {
                return this.UpdatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.UpdatedByField, value) != true)) {
                    this.UpdatedByField = value;
                    this.RaisePropertyChanged("UpdatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UpdatedDate {
            get {
                return this.UpdatedDateField;
            }
            set {
                if ((this.UpdatedDateField.Equals(value) != true)) {
                    this.UpdatedDateField = value;
                    this.RaisePropertyChanged("UpdatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorAXID {
            get {
                return this.VendorAXIDField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorAXIDField, value) != true)) {
                    this.VendorAXIDField = value;
                    this.RaisePropertyChanged("VendorAXID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorID {
            get {
                return this.VendorIDField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorIDField, value) != true)) {
                    this.VendorIDField = value;
                    this.RaisePropertyChanged("VendorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorInitial {
            get {
                return this.VendorInitialField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorInitialField, value) != true)) {
                    this.VendorInitialField = value;
                    this.RaisePropertyChanged("VendorInitial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorName {
            get {
                return this.VendorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNameField, value) != true)) {
                    this.VendorNameField = value;
                    this.RaisePropertyChanged("VendorName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="vwAction", Namespace="http://schemas.datacontract.org/2004/07/SecureAccess.Domain.Models")]
    [System.SerializableAttribute()]
    public partial class vwAction : ARSystemFrontEnd.SecureAccessService.BaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActionTokenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApplicationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ApplicationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsMenuField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int mstActionIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Action {
            get {
                return this.ActionField;
            }
            set {
                if ((object.ReferenceEquals(this.ActionField, value) != true)) {
                    this.ActionField = value;
                    this.RaisePropertyChanged("Action");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ActionToken {
            get {
                return this.ActionTokenField;
            }
            set {
                if ((object.ReferenceEquals(this.ActionTokenField, value) != true)) {
                    this.ActionTokenField = value;
                    this.RaisePropertyChanged("ActionToken");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Application {
            get {
                return this.ApplicationField;
            }
            set {
                if ((object.ReferenceEquals(this.ApplicationField, value) != true)) {
                    this.ApplicationField = value;
                    this.RaisePropertyChanged("Application");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ApplicationID {
            get {
                return this.ApplicationIDField;
            }
            set {
                if ((this.ApplicationIDField.Equals(value) != true)) {
                    this.ApplicationIDField = value;
                    this.RaisePropertyChanged("ApplicationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsMenu {
            get {
                return this.IsMenuField;
            }
            set {
                if ((this.IsMenuField.Equals(value) != true)) {
                    this.IsMenuField = value;
                    this.RaisePropertyChanged("IsMenu");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Url {
            get {
                return this.UrlField;
            }
            set {
                if ((object.ReferenceEquals(this.UrlField, value) != true)) {
                    this.UrlField = value;
                    this.RaisePropertyChanged("Url");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int mstActionID {
            get {
                return this.mstActionIDField;
            }
            set {
                if ((this.mstActionIDField.Equals(value) != true)) {
                    this.mstActionIDField = value;
                    this.RaisePropertyChanged("mstActionID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="mstAction", Namespace="http://schemas.datacontract.org/2004/07/SecureAccess.Domain.Models")]
    [System.SerializableAttribute()]
    public partial class mstAction : ARSystemFrontEnd.SecureAccessService.BaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActionTokenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ApplicationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsMenuField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int mstActionIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Action {
            get {
                return this.ActionField;
            }
            set {
                if ((object.ReferenceEquals(this.ActionField, value) != true)) {
                    this.ActionField = value;
                    this.RaisePropertyChanged("Action");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ActionToken {
            get {
                return this.ActionTokenField;
            }
            set {
                if ((object.ReferenceEquals(this.ActionTokenField, value) != true)) {
                    this.ActionTokenField = value;
                    this.RaisePropertyChanged("ActionToken");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ApplicationID {
            get {
                return this.ApplicationIDField;
            }
            set {
                if ((this.ApplicationIDField.Equals(value) != true)) {
                    this.ApplicationIDField = value;
                    this.RaisePropertyChanged("ApplicationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsMenu {
            get {
                return this.IsMenuField;
            }
            set {
                if ((this.IsMenuField.Equals(value) != true)) {
                    this.IsMenuField = value;
                    this.RaisePropertyChanged("IsMenu");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Url {
            get {
                return this.UrlField;
            }
            set {
                if ((object.ReferenceEquals(this.UrlField, value) != true)) {
                    this.UrlField = value;
                    this.RaisePropertyChanged("Url");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int mstActionID {
            get {
                return this.mstActionIDField;
            }
            set {
                if ((this.mstActionIDField.Equals(value) != true)) {
                    this.mstActionIDField = value;
                    this.RaisePropertyChanged("mstActionID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="vwTaskToDo", Namespace="http://schemas.datacontract.org/2004/07/SecureAccess.Domain.Models")]
    [System.SerializableAttribute()]
    public partial class vwTaskToDo : ARSystemFrontEnd.SecureAccessService.BaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ActionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApplicationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ApplicationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConnectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExecStoredProcedureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaskToDoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int mstTaskToDoIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Action {
            get {
                return this.ActionField;
            }
            set {
                if ((object.ReferenceEquals(this.ActionField, value) != true)) {
                    this.ActionField = value;
                    this.RaisePropertyChanged("Action");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ActionID {
            get {
                return this.ActionIDField;
            }
            set {
                if ((this.ActionIDField.Equals(value) != true)) {
                    this.ActionIDField = value;
                    this.RaisePropertyChanged("ActionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Application {
            get {
                return this.ApplicationField;
            }
            set {
                if ((object.ReferenceEquals(this.ApplicationField, value) != true)) {
                    this.ApplicationField = value;
                    this.RaisePropertyChanged("Application");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ApplicationID {
            get {
                return this.ApplicationIDField;
            }
            set {
                if ((this.ApplicationIDField.Equals(value) != true)) {
                    this.ApplicationIDField = value;
                    this.RaisePropertyChanged("ApplicationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Connection {
            get {
                return this.ConnectionField;
            }
            set {
                if ((object.ReferenceEquals(this.ConnectionField, value) != true)) {
                    this.ConnectionField = value;
                    this.RaisePropertyChanged("Connection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExecStoredProcedure {
            get {
                return this.ExecStoredProcedureField;
            }
            set {
                if ((object.ReferenceEquals(this.ExecStoredProcedureField, value) != true)) {
                    this.ExecStoredProcedureField = value;
                    this.RaisePropertyChanged("ExecStoredProcedure");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaskToDo {
            get {
                return this.TaskToDoField;
            }
            set {
                if ((object.ReferenceEquals(this.TaskToDoField, value) != true)) {
                    this.TaskToDoField = value;
                    this.RaisePropertyChanged("TaskToDo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int mstTaskToDoID {
            get {
                return this.mstTaskToDoIDField;
            }
            set {
                if ((this.mstTaskToDoIDField.Equals(value) != true)) {
                    this.mstTaskToDoIDField = value;
                    this.RaisePropertyChanged("mstTaskToDoID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="mstTaskToDo", Namespace="http://schemas.datacontract.org/2004/07/SecureAccess.Domain.Models")]
    [System.SerializableAttribute()]
    public partial class mstTaskToDo : ARSystemFrontEnd.SecureAccessService.BaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ActionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ApplicationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConnectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExecStoredProcedureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaskToDoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int mstTaskToDoIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ActionID {
            get {
                return this.ActionIDField;
            }
            set {
                if ((this.ActionIDField.Equals(value) != true)) {
                    this.ActionIDField = value;
                    this.RaisePropertyChanged("ActionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ApplicationID {
            get {
                return this.ApplicationIDField;
            }
            set {
                if ((this.ApplicationIDField.Equals(value) != true)) {
                    this.ApplicationIDField = value;
                    this.RaisePropertyChanged("ApplicationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Connection {
            get {
                return this.ConnectionField;
            }
            set {
                if ((object.ReferenceEquals(this.ConnectionField, value) != true)) {
                    this.ConnectionField = value;
                    this.RaisePropertyChanged("Connection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExecStoredProcedure {
            get {
                return this.ExecStoredProcedureField;
            }
            set {
                if ((object.ReferenceEquals(this.ExecStoredProcedureField, value) != true)) {
                    this.ExecStoredProcedureField = value;
                    this.RaisePropertyChanged("ExecStoredProcedure");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaskToDo {
            get {
                return this.TaskToDoField;
            }
            set {
                if ((object.ReferenceEquals(this.TaskToDoField, value) != true)) {
                    this.TaskToDoField = value;
                    this.RaisePropertyChanged("TaskToDo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int mstTaskToDoID {
            get {
                return this.mstTaskToDoIDField;
            }
            set {
                if ((this.mstTaskToDoIDField.Equals(value) != true)) {
                    this.mstTaskToDoIDField = value;
                    this.RaisePropertyChanged("mstTaskToDoID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="vmUserCustomerLogin", Namespace="http://schemas.datacontract.org/2004/07/SecureAccess.Domain.Models")]
    [System.SerializableAttribute()]
    public partial class vmUserCustomerLogin : ARSystemFrontEnd.SecureAccessService.BaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApplicationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerVendorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CustomerVendorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsPasswordExpiredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserFullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserRoleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserTokenField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Application {
            get {
                return this.ApplicationField;
            }
            set {
                if ((object.ReferenceEquals(this.ApplicationField, value) != true)) {
                    this.ApplicationField = value;
                    this.RaisePropertyChanged("Application");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerID {
            get {
                return this.CustomerIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerIDField, value) != true)) {
                    this.CustomerIDField = value;
                    this.RaisePropertyChanged("CustomerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerName {
            get {
                return this.CustomerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerNameField, value) != true)) {
                    this.CustomerNameField = value;
                    this.RaisePropertyChanged("CustomerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerVendor {
            get {
                return this.CustomerVendorField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerVendorField, value) != true)) {
                    this.CustomerVendorField = value;
                    this.RaisePropertyChanged("CustomerVendor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CustomerVendorID {
            get {
                return this.CustomerVendorIDField;
            }
            set {
                if ((this.CustomerVendorIDField.Equals(value) != true)) {
                    this.CustomerVendorIDField = value;
                    this.RaisePropertyChanged("CustomerVendorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPasswordExpired {
            get {
                return this.IsPasswordExpiredField;
            }
            set {
                if ((this.IsPasswordExpiredField.Equals(value) != true)) {
                    this.IsPasswordExpiredField = value;
                    this.RaisePropertyChanged("IsPasswordExpired");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserFullName {
            get {
                return this.UserFullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserFullNameField, value) != true)) {
                    this.UserFullNameField = value;
                    this.RaisePropertyChanged("UserFullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIDField, value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserRole {
            get {
                return this.UserRoleField;
            }
            set {
                if ((object.ReferenceEquals(this.UserRoleField, value) != true)) {
                    this.UserRoleField = value;
                    this.RaisePropertyChanged("UserRole");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserToken {
            get {
                return this.UserTokenField;
            }
            set {
                if ((object.ReferenceEquals(this.UserTokenField, value) != true)) {
                    this.UserTokenField = value;
                    this.RaisePropertyChanged("UserToken");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="mstUserCustomer", Namespace="http://schemas.datacontract.org/2004/07/SecureAccess.Domain.Models")]
    [System.SerializableAttribute()]
    public partial class mstUserCustomer : ARSystemFrontEnd.SecureAccessService.BaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdditionalEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CustomerVendorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime PasswordExpiredDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Phone1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Phone2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RoleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UpdatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> UpdatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserImageField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AdditionalEmail {
            get {
                return this.AdditionalEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.AdditionalEmailField, value) != true)) {
                    this.AdditionalEmailField = value;
                    this.RaisePropertyChanged("AdditionalEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerID {
            get {
                return this.CustomerIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerIDField, value) != true)) {
                    this.CustomerIDField = value;
                    this.RaisePropertyChanged("CustomerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CustomerVendorID {
            get {
                return this.CustomerVendorIDField;
            }
            set {
                if ((this.CustomerVendorIDField.Equals(value) != true)) {
                    this.CustomerVendorIDField = value;
                    this.RaisePropertyChanged("CustomerVendorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullName {
            get {
                return this.FullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FullNameField, value) != true)) {
                    this.FullNameField = value;
                    this.RaisePropertyChanged("FullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime PasswordExpiredDate {
            get {
                return this.PasswordExpiredDateField;
            }
            set {
                if ((this.PasswordExpiredDateField.Equals(value) != true)) {
                    this.PasswordExpiredDateField = value;
                    this.RaisePropertyChanged("PasswordExpiredDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone1 {
            get {
                return this.Phone1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Phone1Field, value) != true)) {
                    this.Phone1Field = value;
                    this.RaisePropertyChanged("Phone1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone2 {
            get {
                return this.Phone2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Phone2Field, value) != true)) {
                    this.Phone2Field = value;
                    this.RaisePropertyChanged("Phone2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RoleID {
            get {
                return this.RoleIDField;
            }
            set {
                if ((this.RoleIDField.Equals(value) != true)) {
                    this.RoleIDField = value;
                    this.RaisePropertyChanged("RoleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UpdatedBy {
            get {
                return this.UpdatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.UpdatedByField, value) != true)) {
                    this.UpdatedByField = value;
                    this.RaisePropertyChanged("UpdatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UpdatedDate {
            get {
                return this.UpdatedDateField;
            }
            set {
                if ((this.UpdatedDateField.Equals(value) != true)) {
                    this.UpdatedDateField = value;
                    this.RaisePropertyChanged("UpdatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIDField, value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserImage {
            get {
                return this.UserImageField;
            }
            set {
                if ((object.ReferenceEquals(this.UserImageField, value) != true)) {
                    this.UserImageField = value;
                    this.RaisePropertyChanged("UserImage");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="vwUserCustomer", Namespace="http://schemas.datacontract.org/2004/07/SecureAccess.Domain.Models")]
    [System.SerializableAttribute()]
    public partial class vwUserCustomer : ARSystemFrontEnd.SecureAccessService.BaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerVendorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CustomerVendorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IsLoginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IsPasswordExpiredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RoleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UpdatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> UpdatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerID {
            get {
                return this.CustomerIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerIDField, value) != true)) {
                    this.CustomerIDField = value;
                    this.RaisePropertyChanged("CustomerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerName {
            get {
                return this.CustomerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerNameField, value) != true)) {
                    this.CustomerNameField = value;
                    this.RaisePropertyChanged("CustomerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerVendor {
            get {
                return this.CustomerVendorField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerVendorField, value) != true)) {
                    this.CustomerVendorField = value;
                    this.RaisePropertyChanged("CustomerVendor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CustomerVendorID {
            get {
                return this.CustomerVendorIDField;
            }
            set {
                if ((this.CustomerVendorIDField.Equals(value) != true)) {
                    this.CustomerVendorIDField = value;
                    this.RaisePropertyChanged("CustomerVendorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullName {
            get {
                return this.FullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FullNameField, value) != true)) {
                    this.FullNameField = value;
                    this.RaisePropertyChanged("FullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IsLogin {
            get {
                return this.IsLoginField;
            }
            set {
                if ((this.IsLoginField.Equals(value) != true)) {
                    this.IsLoginField = value;
                    this.RaisePropertyChanged("IsLogin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IsPasswordExpired {
            get {
                return this.IsPasswordExpiredField;
            }
            set {
                if ((this.IsPasswordExpiredField.Equals(value) != true)) {
                    this.IsPasswordExpiredField = value;
                    this.RaisePropertyChanged("IsPasswordExpired");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Role {
            get {
                return this.RoleField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleField, value) != true)) {
                    this.RoleField = value;
                    this.RaisePropertyChanged("Role");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RoleID {
            get {
                return this.RoleIDField;
            }
            set {
                if ((this.RoleIDField.Equals(value) != true)) {
                    this.RoleIDField = value;
                    this.RaisePropertyChanged("RoleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UpdatedBy {
            get {
                return this.UpdatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.UpdatedByField, value) != true)) {
                    this.UpdatedByField = value;
                    this.RaisePropertyChanged("UpdatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UpdatedDate {
            get {
                return this.UpdatedDateField;
            }
            set {
                if ((this.UpdatedDateField.Equals(value) != true)) {
                    this.UpdatedDateField = value;
                    this.RaisePropertyChanged("UpdatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIDField, value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="vmUserCustomer", Namespace="http://schemas.datacontract.org/2004/07/SecureAccess.Domain.Models")]
    [System.SerializableAttribute()]
    public partial class vmUserCustomer : ARSystemFrontEnd.SecureAccessService.BaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ARSystemFrontEnd.SecureAccessService.mstCustomerVendor CustomerVendorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ARSystemFrontEnd.SecureAccessService.mstUserCustomer UserField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ARSystemFrontEnd.SecureAccessService.mstCustomerVendor CustomerVendor {
            get {
                return this.CustomerVendorField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerVendorField, value) != true)) {
                    this.CustomerVendorField = value;
                    this.RaisePropertyChanged("CustomerVendor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ARSystemFrontEnd.SecureAccessService.mstUserCustomer User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="mstCustomerVendor", Namespace="http://schemas.datacontract.org/2004/07/SecureAccess.Domain.Models")]
    [System.SerializableAttribute()]
    public partial class mstCustomerVendor : ARSystemFrontEnd.SecureAccessService.BaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerVendorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustomerVendorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TelephoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UpdatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> UpdateedDateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerVendor {
            get {
                return this.CustomerVendorField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerVendorField, value) != true)) {
                    this.CustomerVendorField = value;
                    this.RaisePropertyChanged("CustomerVendor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustomerVendorID {
            get {
                return this.CustomerVendorIDField;
            }
            set {
                if ((this.CustomerVendorIDField.Equals(value) != true)) {
                    this.CustomerVendorIDField = value;
                    this.RaisePropertyChanged("CustomerVendorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Fax {
            get {
                return this.FaxField;
            }
            set {
                if ((object.ReferenceEquals(this.FaxField, value) != true)) {
                    this.FaxField = value;
                    this.RaisePropertyChanged("Fax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Telephone {
            get {
                return this.TelephoneField;
            }
            set {
                if ((object.ReferenceEquals(this.TelephoneField, value) != true)) {
                    this.TelephoneField = value;
                    this.RaisePropertyChanged("Telephone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UpdatedBy {
            get {
                return this.UpdatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.UpdatedByField, value) != true)) {
                    this.UpdatedByField = value;
                    this.RaisePropertyChanged("UpdatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UpdateedDate {
            get {
                return this.UpdateedDateField;
            }
            set {
                if ((this.UpdateedDateField.Equals(value) != true)) {
                    this.UpdateedDateField = value;
                    this.RaisePropertyChanged("UpdateedDate");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="mstCustomer", Namespace="http://schemas.datacontract.org/2004/07/SecureAccess.Domain.Models")]
    [System.SerializableAttribute()]
    public partial class mstCustomer : ARSystemFrontEnd.SecureAccessService.BaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Address1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Address2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Address3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsTelcoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NPWPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UpdatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> UpdatedDateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address1 {
            get {
                return this.Address1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Address1Field, value) != true)) {
                    this.Address1Field = value;
                    this.RaisePropertyChanged("Address1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address2 {
            get {
                return this.Address2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Address2Field, value) != true)) {
                    this.Address2Field = value;
                    this.RaisePropertyChanged("Address2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address3 {
            get {
                return this.Address3Field;
            }
            set {
                if ((object.ReferenceEquals(this.Address3Field, value) != true)) {
                    this.Address3Field = value;
                    this.RaisePropertyChanged("Address3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyName {
            get {
                return this.CompanyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyNameField, value) != true)) {
                    this.CompanyNameField = value;
                    this.RaisePropertyChanged("CompanyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerCode {
            get {
                return this.CustomerCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerCodeField, value) != true)) {
                    this.CustomerCodeField = value;
                    this.RaisePropertyChanged("CustomerCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerID {
            get {
                return this.CustomerIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerIDField, value) != true)) {
                    this.CustomerIDField = value;
                    this.RaisePropertyChanged("CustomerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerName {
            get {
                return this.CustomerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerNameField, value) != true)) {
                    this.CustomerNameField = value;
                    this.RaisePropertyChanged("CustomerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsTelco {
            get {
                return this.IsTelcoField;
            }
            set {
                if ((this.IsTelcoField.Equals(value) != true)) {
                    this.IsTelcoField = value;
                    this.RaisePropertyChanged("IsTelco");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NPWP {
            get {
                return this.NPWPField;
            }
            set {
                if ((object.ReferenceEquals(this.NPWPField, value) != true)) {
                    this.NPWPField = value;
                    this.RaisePropertyChanged("NPWP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UpdatedBy {
            get {
                return this.UpdatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.UpdatedByField, value) != true)) {
                    this.UpdatedByField = value;
                    this.RaisePropertyChanged("UpdatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UpdatedDate {
            get {
                return this.UpdatedDateField;
            }
            set {
                if ((this.UpdatedDateField.Equals(value) != true)) {
                    this.UpdatedDateField = value;
                    this.RaisePropertyChanged("UpdatedDate");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="vwHomeDashboard", Namespace="http://schemas.datacontract.org/2004/07/SecureAccess.Domain.Models")]
    [System.SerializableAttribute()]
    public partial class vwHomeDashboard : ARSystemFrontEnd.SecureAccessService.BaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApplicationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ApplicationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DashboardField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FaIconField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ViewNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int mstDashboardIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Application {
            get {
                return this.ApplicationField;
            }
            set {
                if ((object.ReferenceEquals(this.ApplicationField, value) != true)) {
                    this.ApplicationField = value;
                    this.RaisePropertyChanged("Application");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ApplicationID {
            get {
                return this.ApplicationIDField;
            }
            set {
                if ((this.ApplicationIDField.Equals(value) != true)) {
                    this.ApplicationIDField = value;
                    this.RaisePropertyChanged("ApplicationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dashboard {
            get {
                return this.DashboardField;
            }
            set {
                if ((object.ReferenceEquals(this.DashboardField, value) != true)) {
                    this.DashboardField = value;
                    this.RaisePropertyChanged("Dashboard");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FaIcon {
            get {
                return this.FaIconField;
            }
            set {
                if ((object.ReferenceEquals(this.FaIconField, value) != true)) {
                    this.FaIconField = value;
                    this.RaisePropertyChanged("FaIcon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ViewName {
            get {
                return this.ViewNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ViewNameField, value) != true)) {
                    this.ViewNameField = value;
                    this.RaisePropertyChanged("ViewName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int mstDashboardID {
            get {
                return this.mstDashboardIDField;
            }
            set {
                if ((this.mstDashboardIDField.Equals(value) != true)) {
                    this.mstDashboardIDField = value;
                    this.RaisePropertyChanged("mstDashboardID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="mstHomeDashboard", Namespace="http://schemas.datacontract.org/2004/07/SecureAccess.Domain.Models")]
    [System.SerializableAttribute()]
    public partial class mstHomeDashboard : ARSystemFrontEnd.SecureAccessService.BaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ApplicationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DashboardField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FaIconField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TokenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ViewNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int mstDashboardIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ApplicationID {
            get {
                return this.ApplicationIDField;
            }
            set {
                if ((this.ApplicationIDField.Equals(value) != true)) {
                    this.ApplicationIDField = value;
                    this.RaisePropertyChanged("ApplicationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dashboard {
            get {
                return this.DashboardField;
            }
            set {
                if ((object.ReferenceEquals(this.DashboardField, value) != true)) {
                    this.DashboardField = value;
                    this.RaisePropertyChanged("Dashboard");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FaIcon {
            get {
                return this.FaIconField;
            }
            set {
                if ((object.ReferenceEquals(this.FaIconField, value) != true)) {
                    this.FaIconField = value;
                    this.RaisePropertyChanged("FaIcon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Token {
            get {
                return this.TokenField;
            }
            set {
                if ((object.ReferenceEquals(this.TokenField, value) != true)) {
                    this.TokenField = value;
                    this.RaisePropertyChanged("Token");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ViewName {
            get {
                return this.ViewNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ViewNameField, value) != true)) {
                    this.ViewNameField = value;
                    this.RaisePropertyChanged("ViewName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int mstDashboardID {
            get {
                return this.mstDashboardIDField;
            }
            set {
                if ((this.mstDashboardIDField.Equals(value) != true)) {
                    this.mstDashboardIDField = value;
                    this.RaisePropertyChanged("mstDashboardID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="vwApplicationUrl", Namespace="http://schemas.datacontract.org/2004/07/SecureAccess.Domain.Models")]
    [System.SerializableAttribute()]
    public partial class vwApplicationUrl : ARSystemFrontEnd.SecureAccessService.BaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ApplicationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApplicationNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApplicationURLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TokenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ApplicationID {
            get {
                return this.ApplicationIDField;
            }
            set {
                if ((this.ApplicationIDField.Equals(value) != true)) {
                    this.ApplicationIDField = value;
                    this.RaisePropertyChanged("ApplicationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ApplicationName {
            get {
                return this.ApplicationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ApplicationNameField, value) != true)) {
                    this.ApplicationNameField = value;
                    this.RaisePropertyChanged("ApplicationName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ApplicationURL {
            get {
                return this.ApplicationURLField;
            }
            set {
                if ((object.ReferenceEquals(this.ApplicationURLField, value) != true)) {
                    this.ApplicationURLField = value;
                    this.RaisePropertyChanged("ApplicationURL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Token {
            get {
                return this.TokenField;
            }
            set {
                if ((object.ReferenceEquals(this.TokenField, value) != true)) {
                    this.TokenField = value;
                    this.RaisePropertyChanged("Token");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIDField, value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="trxFavoriteMenu", Namespace="http://schemas.datacontract.org/2004/07/SecureAccess.Domain.Models")]
    [System.SerializableAttribute()]
    public partial class trxFavoriteMenu : ARSystemFrontEnd.SecureAccessService.BaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ApplicationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long mstMenuIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ApplicationID {
            get {
                return this.ApplicationIDField;
            }
            set {
                if ((this.ApplicationIDField.Equals(value) != true)) {
                    this.ApplicationIDField = value;
                    this.RaisePropertyChanged("ApplicationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIDField, value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long mstMenuID {
            get {
                return this.mstMenuIDField;
            }
            set {
                if ((this.mstMenuIDField.Equals(value) != true)) {
                    this.mstMenuIDField = value;
                    this.RaisePropertyChanged("mstMenuID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="vmUserHomeDashboard", Namespace="http://schemas.datacontract.org/2004/07/SecureAccess.Domain.Models.ViewModels")]
    [System.SerializableAttribute()]
    public partial class vmUserHomeDashboard : ARSystemFrontEnd.SecureAccessService.BaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ARSystemFrontEnd.SecureAccessService.idxUserHomeDashboard[] UserDashboardListField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ARSystemFrontEnd.SecureAccessService.idxUserHomeDashboard[] UserDashboardList {
            get {
                return this.UserDashboardListField;
            }
            set {
                if ((object.ReferenceEquals(this.UserDashboardListField, value) != true)) {
                    this.UserDashboardListField = value;
                    this.RaisePropertyChanged("UserDashboardList");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="vmTree", Namespace="http://schemas.datacontract.org/2004/07/SecureAccess.Domain.Models.ViewModels.Tre" +
        "e")]
    [System.SerializableAttribute()]
    public partial class vmTree : ARSystemFrontEnd.SecureAccessService.BaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ARSystemFrontEnd.SecureAccessService.vmTree[] childrenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string iconField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ARSystemFrontEnd.SecureAccessService.vmTreeState stateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string textField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ARSystemFrontEnd.SecureAccessService.vmTree[] children {
            get {
                return this.childrenField;
            }
            set {
                if ((object.ReferenceEquals(this.childrenField, value) != true)) {
                    this.childrenField = value;
                    this.RaisePropertyChanged("children");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string icon {
            get {
                return this.iconField;
            }
            set {
                if ((object.ReferenceEquals(this.iconField, value) != true)) {
                    this.iconField = value;
                    this.RaisePropertyChanged("icon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ARSystemFrontEnd.SecureAccessService.vmTreeState state {
            get {
                return this.stateField;
            }
            set {
                if ((object.ReferenceEquals(this.stateField, value) != true)) {
                    this.stateField = value;
                    this.RaisePropertyChanged("state");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string text {
            get {
                return this.textField;
            }
            set {
                if ((object.ReferenceEquals(this.textField, value) != true)) {
                    this.textField = value;
                    this.RaisePropertyChanged("text");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="vmTreeState", Namespace="http://schemas.datacontract.org/2004/07/SecureAccess.Domain.Models.ViewModels.Tre" +
        "e")]
    [System.SerializableAttribute()]
    public partial class vmTreeState : ARSystemFrontEnd.SecureAccessService.BaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool disabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool openedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool selectedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool disabled {
            get {
                return this.disabledField;
            }
            set {
                if ((this.disabledField.Equals(value) != true)) {
                    this.disabledField = value;
                    this.RaisePropertyChanged("disabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool opened {
            get {
                return this.openedField;
            }
            set {
                if ((this.openedField.Equals(value) != true)) {
                    this.openedField = value;
                    this.RaisePropertyChanged("opened");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool selected {
            get {
                return this.selectedField;
            }
            set {
                if ((this.selectedField.Equals(value) != true)) {
                    this.selectedField = value;
                    this.RaisePropertyChanged("selected");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DatatableOfvwActionNewYDz5Kj5d", Namespace="http://schemas.datacontract.org/2004/07/SecureAccess.Domain.Models.ViewModels.Dat" +
        "atable")]
    [System.SerializableAttribute()]
    public partial class DatatableOfvwActionNewYDz5Kj5d : ARSystemFrontEnd.SecureAccessService.BaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ARSystemFrontEnd.SecureAccessService.vwActionNew[] ListField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Count {
            get {
                return this.CountField;
            }
            set {
                if ((this.CountField.Equals(value) != true)) {
                    this.CountField = value;
                    this.RaisePropertyChanged("Count");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ARSystemFrontEnd.SecureAccessService.vwActionNew[] List {
            get {
                return this.ListField;
            }
            set {
                if ((object.ReferenceEquals(this.ListField, value) != true)) {
                    this.ListField = value;
                    this.RaisePropertyChanged("List");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="vwActionNew", Namespace="http://schemas.datacontract.org/2004/07/SecureAccess.Domain.Models.TBIGSADB01.TBG" +
        "SecureAccess")]
    [System.SerializableAttribute()]
    public partial class vwActionNew : ARSystemFrontEnd.SecureAccessService.BaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ActionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActionTokenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApplicationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ApplicationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsMenuField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MenuField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MenuIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Action {
            get {
                return this.ActionField;
            }
            set {
                if ((object.ReferenceEquals(this.ActionField, value) != true)) {
                    this.ActionField = value;
                    this.RaisePropertyChanged("Action");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ActionID {
            get {
                return this.ActionIDField;
            }
            set {
                if ((this.ActionIDField.Equals(value) != true)) {
                    this.ActionIDField = value;
                    this.RaisePropertyChanged("ActionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ActionToken {
            get {
                return this.ActionTokenField;
            }
            set {
                if ((object.ReferenceEquals(this.ActionTokenField, value) != true)) {
                    this.ActionTokenField = value;
                    this.RaisePropertyChanged("ActionToken");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Application {
            get {
                return this.ApplicationField;
            }
            set {
                if ((object.ReferenceEquals(this.ApplicationField, value) != true)) {
                    this.ApplicationField = value;
                    this.RaisePropertyChanged("Application");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ApplicationID {
            get {
                return this.ApplicationIDField;
            }
            set {
                if ((this.ApplicationIDField.Equals(value) != true)) {
                    this.ApplicationIDField = value;
                    this.RaisePropertyChanged("ApplicationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsMenu {
            get {
                return this.IsMenuField;
            }
            set {
                if ((this.IsMenuField.Equals(value) != true)) {
                    this.IsMenuField = value;
                    this.RaisePropertyChanged("IsMenu");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Menu {
            get {
                return this.MenuField;
            }
            set {
                if ((object.ReferenceEquals(this.MenuField, value) != true)) {
                    this.MenuField = value;
                    this.RaisePropertyChanged("Menu");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MenuID {
            get {
                return this.MenuIDField;
            }
            set {
                if ((this.MenuIDField.Equals(value) != true)) {
                    this.MenuIDField = value;
                    this.RaisePropertyChanged("MenuID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DatatableOfvwMenuYDz5Kj5d", Namespace="http://schemas.datacontract.org/2004/07/SecureAccess.Domain.Models.ViewModels.Dat" +
        "atable")]
    [System.SerializableAttribute()]
    public partial class DatatableOfvwMenuYDz5Kj5d : ARSystemFrontEnd.SecureAccessService.BaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ARSystemFrontEnd.SecureAccessService.vwMenu[] ListField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Count {
            get {
                return this.CountField;
            }
            set {
                if ((this.CountField.Equals(value) != true)) {
                    this.CountField = value;
                    this.RaisePropertyChanged("Count");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ARSystemFrontEnd.SecureAccessService.vwMenu[] List {
            get {
                return this.ListField;
            }
            set {
                if ((object.ReferenceEquals(this.ListField, value) != true)) {
                    this.ListField = value;
                    this.RaisePropertyChanged("List");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="vwMenu", Namespace="http://schemas.datacontract.org/2004/07/SecureAccess.Domain.Models.TBIGSADB01.TBG" +
        "SecureAccess")]
    [System.SerializableAttribute()]
    public partial class vwMenu : ARSystemFrontEnd.SecureAccessService.BaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApplicationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ApplicationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IconField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MenuField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MenuIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MenuParentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MenuParentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SortField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UrlField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Application {
            get {
                return this.ApplicationField;
            }
            set {
                if ((object.ReferenceEquals(this.ApplicationField, value) != true)) {
                    this.ApplicationField = value;
                    this.RaisePropertyChanged("Application");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ApplicationID {
            get {
                return this.ApplicationIDField;
            }
            set {
                if ((this.ApplicationIDField.Equals(value) != true)) {
                    this.ApplicationIDField = value;
                    this.RaisePropertyChanged("ApplicationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Icon {
            get {
                return this.IconField;
            }
            set {
                if ((object.ReferenceEquals(this.IconField, value) != true)) {
                    this.IconField = value;
                    this.RaisePropertyChanged("Icon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Menu {
            get {
                return this.MenuField;
            }
            set {
                if ((object.ReferenceEquals(this.MenuField, value) != true)) {
                    this.MenuField = value;
                    this.RaisePropertyChanged("Menu");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MenuID {
            get {
                return this.MenuIDField;
            }
            set {
                if ((this.MenuIDField.Equals(value) != true)) {
                    this.MenuIDField = value;
                    this.RaisePropertyChanged("MenuID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MenuParent {
            get {
                return this.MenuParentField;
            }
            set {
                if ((object.ReferenceEquals(this.MenuParentField, value) != true)) {
                    this.MenuParentField = value;
                    this.RaisePropertyChanged("MenuParent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MenuParentID {
            get {
                return this.MenuParentIDField;
            }
            set {
                if ((this.MenuParentIDField.Equals(value) != true)) {
                    this.MenuParentIDField = value;
                    this.RaisePropertyChanged("MenuParentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Sort {
            get {
                return this.SortField;
            }
            set {
                if ((this.SortField.Equals(value) != true)) {
                    this.SortField = value;
                    this.RaisePropertyChanged("Sort");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Url {
            get {
                return this.UrlField;
            }
            set {
                if ((object.ReferenceEquals(this.UrlField, value) != true)) {
                    this.UrlField = value;
                    this.RaisePropertyChanged("Url");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DatatableOfvwTaskToDoNewYDz5Kj5d", Namespace="http://schemas.datacontract.org/2004/07/SecureAccess.Domain.Models.ViewModels.Dat" +
        "atable")]
    [System.SerializableAttribute()]
    public partial class DatatableOfvwTaskToDoNewYDz5Kj5d : ARSystemFrontEnd.SecureAccessService.BaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ARSystemFrontEnd.SecureAccessService.vwTaskToDoNew[] ListField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Count {
            get {
                return this.CountField;
            }
            set {
                if ((this.CountField.Equals(value) != true)) {
                    this.CountField = value;
                    this.RaisePropertyChanged("Count");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ARSystemFrontEnd.SecureAccessService.vwTaskToDoNew[] List {
            get {
                return this.ListField;
            }
            set {
                if ((object.ReferenceEquals(this.ListField, value) != true)) {
                    this.ListField = value;
                    this.RaisePropertyChanged("List");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="vwTaskToDoNew", Namespace="http://schemas.datacontract.org/2004/07/SecureAccess.Domain.Models.TBIGSADB01.TBG" +
        "SecureAccess")]
    [System.SerializableAttribute()]
    public partial class vwTaskToDoNew : ARSystemFrontEnd.SecureAccessService.BaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ActionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApplicationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ApplicationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConnectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExecStoredProcedureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MenuField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MenuIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaskToDoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TaskToDoIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UpdatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> UpdatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UrlField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Action {
            get {
                return this.ActionField;
            }
            set {
                if ((object.ReferenceEquals(this.ActionField, value) != true)) {
                    this.ActionField = value;
                    this.RaisePropertyChanged("Action");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ActionID {
            get {
                return this.ActionIDField;
            }
            set {
                if ((this.ActionIDField.Equals(value) != true)) {
                    this.ActionIDField = value;
                    this.RaisePropertyChanged("ActionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Application {
            get {
                return this.ApplicationField;
            }
            set {
                if ((object.ReferenceEquals(this.ApplicationField, value) != true)) {
                    this.ApplicationField = value;
                    this.RaisePropertyChanged("Application");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ApplicationID {
            get {
                return this.ApplicationIDField;
            }
            set {
                if ((this.ApplicationIDField.Equals(value) != true)) {
                    this.ApplicationIDField = value;
                    this.RaisePropertyChanged("ApplicationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Connection {
            get {
                return this.ConnectionField;
            }
            set {
                if ((object.ReferenceEquals(this.ConnectionField, value) != true)) {
                    this.ConnectionField = value;
                    this.RaisePropertyChanged("Connection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExecStoredProcedure {
            get {
                return this.ExecStoredProcedureField;
            }
            set {
                if ((object.ReferenceEquals(this.ExecStoredProcedureField, value) != true)) {
                    this.ExecStoredProcedureField = value;
                    this.RaisePropertyChanged("ExecStoredProcedure");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Menu {
            get {
                return this.MenuField;
            }
            set {
                if ((object.ReferenceEquals(this.MenuField, value) != true)) {
                    this.MenuField = value;
                    this.RaisePropertyChanged("Menu");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MenuID {
            get {
                return this.MenuIDField;
            }
            set {
                if ((this.MenuIDField.Equals(value) != true)) {
                    this.MenuIDField = value;
                    this.RaisePropertyChanged("MenuID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaskToDo {
            get {
                return this.TaskToDoField;
            }
            set {
                if ((object.ReferenceEquals(this.TaskToDoField, value) != true)) {
                    this.TaskToDoField = value;
                    this.RaisePropertyChanged("TaskToDo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TaskToDoID {
            get {
                return this.TaskToDoIDField;
            }
            set {
                if ((this.TaskToDoIDField.Equals(value) != true)) {
                    this.TaskToDoIDField = value;
                    this.RaisePropertyChanged("TaskToDoID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UpdatedBy {
            get {
                return this.UpdatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.UpdatedByField, value) != true)) {
                    this.UpdatedByField = value;
                    this.RaisePropertyChanged("UpdatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UpdatedDate {
            get {
                return this.UpdatedDateField;
            }
            set {
                if ((this.UpdatedDateField.Equals(value) != true)) {
                    this.UpdatedDateField = value;
                    this.RaisePropertyChanged("UpdatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Url {
            get {
                return this.UrlField;
            }
            set {
                if ((object.ReferenceEquals(this.UrlField, value) != true)) {
                    this.UrlField = value;
                    this.RaisePropertyChanged("Url");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DatatableOfvwLogHitCounterYDz5Kj5d", Namespace="http://schemas.datacontract.org/2004/07/SecureAccess.Domain.Models.ViewModels.Dat" +
        "atable")]
    [System.SerializableAttribute()]
    public partial class DatatableOfvwLogHitCounterYDz5Kj5d : ARSystemFrontEnd.SecureAccessService.BaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ARSystemFrontEnd.SecureAccessService.vwLogHitCounter[] ListField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Count {
            get {
                return this.CountField;
            }
            set {
                if ((this.CountField.Equals(value) != true)) {
                    this.CountField = value;
                    this.RaisePropertyChanged("Count");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ARSystemFrontEnd.SecureAccessService.vwLogHitCounter[] List {
            get {
                return this.ListField;
            }
            set {
                if ((object.ReferenceEquals(this.ListField, value) != true)) {
                    this.ListField = value;
                    this.RaisePropertyChanged("List");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="vwLogHitCounter", Namespace="http://schemas.datacontract.org/2004/07/SecureAccess.Domain.Models.TBIGSADB01.TBG" +
        "SecureAccess")]
    [System.SerializableAttribute()]
    public partial class vwLogHitCounter : ARSystemFrontEnd.SecureAccessService.BaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ApplicationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ControllerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HitByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HitByNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime HitDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Action {
            get {
                return this.ActionField;
            }
            set {
                if ((object.ReferenceEquals(this.ActionField, value) != true)) {
                    this.ActionField = value;
                    this.RaisePropertyChanged("Action");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ApplicationID {
            get {
                return this.ApplicationIDField;
            }
            set {
                if ((this.ApplicationIDField.Equals(value) != true)) {
                    this.ApplicationIDField = value;
                    this.RaisePropertyChanged("ApplicationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Controller {
            get {
                return this.ControllerField;
            }
            set {
                if ((object.ReferenceEquals(this.ControllerField, value) != true)) {
                    this.ControllerField = value;
                    this.RaisePropertyChanged("Controller");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HitBy {
            get {
                return this.HitByField;
            }
            set {
                if ((object.ReferenceEquals(this.HitByField, value) != true)) {
                    this.HitByField = value;
                    this.RaisePropertyChanged("HitBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HitByName {
            get {
                return this.HitByNameField;
            }
            set {
                if ((object.ReferenceEquals(this.HitByNameField, value) != true)) {
                    this.HitByNameField = value;
                    this.RaisePropertyChanged("HitByName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime HitDate {
            get {
                return this.HitDateField;
            }
            set {
                if ((this.HitDateField.Equals(value) != true)) {
                    this.HitDateField = value;
                    this.RaisePropertyChanged("HitDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Url {
            get {
                return this.UrlField;
            }
            set {
                if ((object.ReferenceEquals(this.UrlField, value) != true)) {
                    this.UrlField = value;
                    this.RaisePropertyChanged("Url");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Vendor {
            get {
                return this.VendorField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorField, value) != true)) {
                    this.VendorField = value;
                    this.RaisePropertyChanged("Vendor");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DatatableOfvwLoginLogYDz5Kj5d", Namespace="http://schemas.datacontract.org/2004/07/SecureAccess.Domain.Models.ViewModels.Dat" +
        "atable")]
    [System.SerializableAttribute()]
    public partial class DatatableOfvwLoginLogYDz5Kj5d : ARSystemFrontEnd.SecureAccessService.BaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ARSystemFrontEnd.SecureAccessService.vwLoginLog[] ListField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Count {
            get {
                return this.CountField;
            }
            set {
                if ((this.CountField.Equals(value) != true)) {
                    this.CountField = value;
                    this.RaisePropertyChanged("Count");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ARSystemFrontEnd.SecureAccessService.vwLoginLog[] List {
            get {
                return this.ListField;
            }
            set {
                if ((object.ReferenceEquals(this.ListField, value) != true)) {
                    this.ListField = value;
                    this.RaisePropertyChanged("List");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="vwLoginLog", Namespace="http://schemas.datacontract.org/2004/07/SecureAccess.Domain.Models.TBIGSADB01.TBG" +
        "SecureAccess")]
    [System.SerializableAttribute()]
    public partial class vwLoginLog : ARSystemFrontEnd.SecureAccessService.BaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ApplicationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BrowserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConvertedLoginDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IconField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LoginDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserFullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ApplicationID {
            get {
                return this.ApplicationIDField;
            }
            set {
                if ((this.ApplicationIDField.Equals(value) != true)) {
                    this.ApplicationIDField = value;
                    this.RaisePropertyChanged("ApplicationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Browser {
            get {
                return this.BrowserField;
            }
            set {
                if ((object.ReferenceEquals(this.BrowserField, value) != true)) {
                    this.BrowserField = value;
                    this.RaisePropertyChanged("Browser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConvertedLoginDate {
            get {
                return this.ConvertedLoginDateField;
            }
            set {
                if ((object.ReferenceEquals(this.ConvertedLoginDateField, value) != true)) {
                    this.ConvertedLoginDateField = value;
                    this.RaisePropertyChanged("ConvertedLoginDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IP {
            get {
                return this.IPField;
            }
            set {
                if ((object.ReferenceEquals(this.IPField, value) != true)) {
                    this.IPField = value;
                    this.RaisePropertyChanged("IP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Icon {
            get {
                return this.IconField;
            }
            set {
                if ((object.ReferenceEquals(this.IconField, value) != true)) {
                    this.IconField = value;
                    this.RaisePropertyChanged("Icon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LoginDate {
            get {
                return this.LoginDateField;
            }
            set {
                if ((this.LoginDateField.Equals(value) != true)) {
                    this.LoginDateField = value;
                    this.RaisePropertyChanged("LoginDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserFullName {
            get {
                return this.UserFullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserFullNameField, value) != true)) {
                    this.UserFullNameField = value;
                    this.RaisePropertyChanged("UserFullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIDField, value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Vendor {
            get {
                return this.VendorField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorField, value) != true)) {
                    this.VendorField = value;
                    this.RaisePropertyChanged("Vendor");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DatatableOfvwAuditTrailYDz5Kj5d", Namespace="http://schemas.datacontract.org/2004/07/SecureAccess.Domain.Models.ViewModels.Dat" +
        "atable")]
    [System.SerializableAttribute()]
    public partial class DatatableOfvwAuditTrailYDz5Kj5d : ARSystemFrontEnd.SecureAccessService.BaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ARSystemFrontEnd.SecureAccessService.vwAuditTrail[] ListField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Count {
            get {
                return this.CountField;
            }
            set {
                if ((this.CountField.Equals(value) != true)) {
                    this.CountField = value;
                    this.RaisePropertyChanged("Count");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ARSystemFrontEnd.SecureAccessService.vwAuditTrail[] List {
            get {
                return this.ListField;
            }
            set {
                if ((object.ReferenceEquals(this.ListField, value) != true)) {
                    this.ListField = value;
                    this.RaisePropertyChanged("List");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="vwAuditTrail", Namespace="http://schemas.datacontract.org/2004/07/SecureAccess.Domain.Models.TBIGSADB01.TBG" +
        "SecureAccess")]
    [System.SerializableAttribute()]
    public partial class vwAuditTrail : ARSystemFrontEnd.SecureAccessService.BaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ActionDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ActionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApplicationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ApplicationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModuleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModuleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserFullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Action {
            get {
                return this.ActionField;
            }
            set {
                if ((object.ReferenceEquals(this.ActionField, value) != true)) {
                    this.ActionField = value;
                    this.RaisePropertyChanged("Action");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ActionDate {
            get {
                return this.ActionDateField;
            }
            set {
                if ((this.ActionDateField.Equals(value) != true)) {
                    this.ActionDateField = value;
                    this.RaisePropertyChanged("ActionDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ActionID {
            get {
                return this.ActionIDField;
            }
            set {
                if ((this.ActionIDField.Equals(value) != true)) {
                    this.ActionIDField = value;
                    this.RaisePropertyChanged("ActionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Application {
            get {
                return this.ApplicationField;
            }
            set {
                if ((object.ReferenceEquals(this.ApplicationField, value) != true)) {
                    this.ApplicationField = value;
                    this.RaisePropertyChanged("Application");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ApplicationID {
            get {
                return this.ApplicationIDField;
            }
            set {
                if ((this.ApplicationIDField.Equals(value) != true)) {
                    this.ApplicationIDField = value;
                    this.RaisePropertyChanged("ApplicationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Module {
            get {
                return this.ModuleField;
            }
            set {
                if ((object.ReferenceEquals(this.ModuleField, value) != true)) {
                    this.ModuleField = value;
                    this.RaisePropertyChanged("Module");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModuleID {
            get {
                return this.ModuleIDField;
            }
            set {
                if ((this.ModuleIDField.Equals(value) != true)) {
                    this.ModuleIDField = value;
                    this.RaisePropertyChanged("ModuleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserFullName {
            get {
                return this.UserFullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserFullNameField, value) != true)) {
                    this.UserFullNameField = value;
                    this.RaisePropertyChanged("UserFullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIDField, value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="vmDashboardNavigation", Namespace="http://schemas.datacontract.org/2004/07/SecureAccess.Domain.Models.General.Dashbo" +
        "ardNavigation")]
    [System.SerializableAttribute()]
    public partial class vmDashboardNavigation : ARSystemFrontEnd.SecureAccessService.BaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] CategoryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ARSystemFrontEnd.SecureAccessService.vwDashboardNavigation[] DashboardListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DirectorateNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] CategoryName {
            get {
                return this.CategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryNameField, value) != true)) {
                    this.CategoryNameField = value;
                    this.RaisePropertyChanged("CategoryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ARSystemFrontEnd.SecureAccessService.vwDashboardNavigation[] DashboardList {
            get {
                return this.DashboardListField;
            }
            set {
                if ((object.ReferenceEquals(this.DashboardListField, value) != true)) {
                    this.DashboardListField = value;
                    this.RaisePropertyChanged("DashboardList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DirectorateName {
            get {
                return this.DirectorateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DirectorateNameField, value) != true)) {
                    this.DirectorateNameField = value;
                    this.RaisePropertyChanged("DirectorateName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="vwDashboardNavigation", Namespace="http://schemas.datacontract.org/2004/07/SecureAccess.Domain.Models.TBIGSADB01.TBG" +
        "SecureAccess")]
    [System.SerializableAttribute()]
    public partial class vwDashboardNavigation : ARSystemFrontEnd.SecureAccessService.BaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DashboardDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DashboardIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DashboardIconField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DashboardNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DashboardURLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DirectorateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DirectorateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RoleIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryField, value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CategoryID {
            get {
                return this.CategoryIDField;
            }
            set {
                if ((this.CategoryIDField.Equals(value) != true)) {
                    this.CategoryIDField = value;
                    this.RaisePropertyChanged("CategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DashboardDescription {
            get {
                return this.DashboardDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DashboardDescriptionField, value) != true)) {
                    this.DashboardDescriptionField = value;
                    this.RaisePropertyChanged("DashboardDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DashboardID {
            get {
                return this.DashboardIDField;
            }
            set {
                if ((this.DashboardIDField.Equals(value) != true)) {
                    this.DashboardIDField = value;
                    this.RaisePropertyChanged("DashboardID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DashboardIcon {
            get {
                return this.DashboardIconField;
            }
            set {
                if ((object.ReferenceEquals(this.DashboardIconField, value) != true)) {
                    this.DashboardIconField = value;
                    this.RaisePropertyChanged("DashboardIcon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DashboardName {
            get {
                return this.DashboardNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DashboardNameField, value) != true)) {
                    this.DashboardNameField = value;
                    this.RaisePropertyChanged("DashboardName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DashboardURL {
            get {
                return this.DashboardURLField;
            }
            set {
                if ((object.ReferenceEquals(this.DashboardURLField, value) != true)) {
                    this.DashboardURLField = value;
                    this.RaisePropertyChanged("DashboardURL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DirectorateID {
            get {
                return this.DirectorateIDField;
            }
            set {
                if ((this.DirectorateIDField.Equals(value) != true)) {
                    this.DirectorateIDField = value;
                    this.RaisePropertyChanged("DirectorateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DirectorateName {
            get {
                return this.DirectorateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DirectorateNameField, value) != true)) {
                    this.DirectorateNameField = value;
                    this.RaisePropertyChanged("DirectorateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RoleID {
            get {
                return this.RoleIDField;
            }
            set {
                if ((this.RoleIDField.Equals(value) != true)) {
                    this.RoleIDField = value;
                    this.RaisePropertyChanged("RoleID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="vwUserMenuNew", Namespace="http://schemas.datacontract.org/2004/07/SecureAccess.Domain.Models.TBIGSADB01.TBG" +
        "SecureAccess")]
    [System.SerializableAttribute()]
    public partial class vwUserMenuNew : ARSystemFrontEnd.SecureAccessService.BaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ApplicationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FaIconField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MenuField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> MenuIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MenuParentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> MenuParentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MenuStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SortField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TokenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UpdatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> UpdatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ApplicationID {
            get {
                return this.ApplicationIDField;
            }
            set {
                if ((this.ApplicationIDField.Equals(value) != true)) {
                    this.ApplicationIDField = value;
                    this.RaisePropertyChanged("ApplicationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FaIcon {
            get {
                return this.FaIconField;
            }
            set {
                if ((object.ReferenceEquals(this.FaIconField, value) != true)) {
                    this.FaIconField = value;
                    this.RaisePropertyChanged("FaIcon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Menu {
            get {
                return this.MenuField;
            }
            set {
                if ((object.ReferenceEquals(this.MenuField, value) != true)) {
                    this.MenuField = value;
                    this.RaisePropertyChanged("Menu");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> MenuID {
            get {
                return this.MenuIDField;
            }
            set {
                if ((this.MenuIDField.Equals(value) != true)) {
                    this.MenuIDField = value;
                    this.RaisePropertyChanged("MenuID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MenuParent {
            get {
                return this.MenuParentField;
            }
            set {
                if ((object.ReferenceEquals(this.MenuParentField, value) != true)) {
                    this.MenuParentField = value;
                    this.RaisePropertyChanged("MenuParent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> MenuParentID {
            get {
                return this.MenuParentIDField;
            }
            set {
                if ((this.MenuParentIDField.Equals(value) != true)) {
                    this.MenuParentIDField = value;
                    this.RaisePropertyChanged("MenuParentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MenuStatus {
            get {
                return this.MenuStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.MenuStatusField, value) != true)) {
                    this.MenuStatusField = value;
                    this.RaisePropertyChanged("MenuStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Sort {
            get {
                return this.SortField;
            }
            set {
                if ((this.SortField.Equals(value) != true)) {
                    this.SortField = value;
                    this.RaisePropertyChanged("Sort");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Token {
            get {
                return this.TokenField;
            }
            set {
                if ((object.ReferenceEquals(this.TokenField, value) != true)) {
                    this.TokenField = value;
                    this.RaisePropertyChanged("Token");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UpdatedBy {
            get {
                return this.UpdatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.UpdatedByField, value) != true)) {
                    this.UpdatedByField = value;
                    this.RaisePropertyChanged("UpdatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UpdatedDate {
            get {
                return this.UpdatedDateField;
            }
            set {
                if ((this.UpdatedDateField.Equals(value) != true)) {
                    this.UpdatedDateField = value;
                    this.RaisePropertyChanged("UpdatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Url {
            get {
                return this.UrlField;
            }
            set {
                if ((object.ReferenceEquals(this.UrlField, value) != true)) {
                    this.UrlField = value;
                    this.RaisePropertyChanged("Url");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIDField, value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="vwUserVendorMenuNew", Namespace="http://schemas.datacontract.org/2004/07/SecureAccess.Domain.Models.TBIGSADB01.TBG" +
        "SecureAccess")]
    [System.SerializableAttribute()]
    public partial class vwUserVendorMenuNew : ARSystemFrontEnd.SecureAccessService.BaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ApplicationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FaIconField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MenuField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> MenuIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MenuParentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> MenuParentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SortField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TokenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ApplicationID {
            get {
                return this.ApplicationIDField;
            }
            set {
                if ((this.ApplicationIDField.Equals(value) != true)) {
                    this.ApplicationIDField = value;
                    this.RaisePropertyChanged("ApplicationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FaIcon {
            get {
                return this.FaIconField;
            }
            set {
                if ((object.ReferenceEquals(this.FaIconField, value) != true)) {
                    this.FaIconField = value;
                    this.RaisePropertyChanged("FaIcon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Menu {
            get {
                return this.MenuField;
            }
            set {
                if ((object.ReferenceEquals(this.MenuField, value) != true)) {
                    this.MenuField = value;
                    this.RaisePropertyChanged("Menu");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> MenuID {
            get {
                return this.MenuIDField;
            }
            set {
                if ((this.MenuIDField.Equals(value) != true)) {
                    this.MenuIDField = value;
                    this.RaisePropertyChanged("MenuID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MenuParent {
            get {
                return this.MenuParentField;
            }
            set {
                if ((object.ReferenceEquals(this.MenuParentField, value) != true)) {
                    this.MenuParentField = value;
                    this.RaisePropertyChanged("MenuParent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> MenuParentID {
            get {
                return this.MenuParentIDField;
            }
            set {
                if ((this.MenuParentIDField.Equals(value) != true)) {
                    this.MenuParentIDField = value;
                    this.RaisePropertyChanged("MenuParentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Sort {
            get {
                return this.SortField;
            }
            set {
                if ((this.SortField.Equals(value) != true)) {
                    this.SortField = value;
                    this.RaisePropertyChanged("Sort");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Token {
            get {
                return this.TokenField;
            }
            set {
                if ((object.ReferenceEquals(this.TokenField, value) != true)) {
                    this.TokenField = value;
                    this.RaisePropertyChanged("Token");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Url {
            get {
                return this.UrlField;
            }
            set {
                if ((object.ReferenceEquals(this.UrlField, value) != true)) {
                    this.UrlField = value;
                    this.RaisePropertyChanged("Url");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIDField, value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="vwUserCustomerMenuNew", Namespace="http://schemas.datacontract.org/2004/07/SecureAccess.Domain.Models.TBIGSADB01.TBG" +
        "SecureAccess")]
    [System.SerializableAttribute()]
    public partial class vwUserCustomerMenuNew : ARSystemFrontEnd.SecureAccessService.BaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ApplicationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FaIconField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MenuField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> MenuIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MenuParentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> MenuParentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SortField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TokenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ApplicationID {
            get {
                return this.ApplicationIDField;
            }
            set {
                if ((this.ApplicationIDField.Equals(value) != true)) {
                    this.ApplicationIDField = value;
                    this.RaisePropertyChanged("ApplicationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FaIcon {
            get {
                return this.FaIconField;
            }
            set {
                if ((object.ReferenceEquals(this.FaIconField, value) != true)) {
                    this.FaIconField = value;
                    this.RaisePropertyChanged("FaIcon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Menu {
            get {
                return this.MenuField;
            }
            set {
                if ((object.ReferenceEquals(this.MenuField, value) != true)) {
                    this.MenuField = value;
                    this.RaisePropertyChanged("Menu");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> MenuID {
            get {
                return this.MenuIDField;
            }
            set {
                if ((this.MenuIDField.Equals(value) != true)) {
                    this.MenuIDField = value;
                    this.RaisePropertyChanged("MenuID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MenuParent {
            get {
                return this.MenuParentField;
            }
            set {
                if ((object.ReferenceEquals(this.MenuParentField, value) != true)) {
                    this.MenuParentField = value;
                    this.RaisePropertyChanged("MenuParent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> MenuParentID {
            get {
                return this.MenuParentIDField;
            }
            set {
                if ((this.MenuParentIDField.Equals(value) != true)) {
                    this.MenuParentIDField = value;
                    this.RaisePropertyChanged("MenuParentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Sort {
            get {
                return this.SortField;
            }
            set {
                if ((this.SortField.Equals(value) != true)) {
                    this.SortField = value;
                    this.RaisePropertyChanged("Sort");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Token {
            get {
                return this.TokenField;
            }
            set {
                if ((object.ReferenceEquals(this.TokenField, value) != true)) {
                    this.TokenField = value;
                    this.RaisePropertyChanged("Token");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Url {
            get {
                return this.UrlField;
            }
            set {
                if ((object.ReferenceEquals(this.UrlField, value) != true)) {
                    this.UrlField = value;
                    this.RaisePropertyChanged("Url");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIDField, value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="trxAuditTrail", Namespace="http://schemas.datacontract.org/2004/07/SecureAccess.Domain.Models.TBIGSADB01.TBG" +
        "SecureAccess")]
    [System.SerializableAttribute()]
    public partial class trxAuditTrail : ARSystemFrontEnd.SecureAccessService.BaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ApplicationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HitByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime HitDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MethodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PayLoadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UrlField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ApplicationID {
            get {
                return this.ApplicationIDField;
            }
            set {
                if ((this.ApplicationIDField.Equals(value) != true)) {
                    this.ApplicationIDField = value;
                    this.RaisePropertyChanged("ApplicationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HitBy {
            get {
                return this.HitByField;
            }
            set {
                if ((object.ReferenceEquals(this.HitByField, value) != true)) {
                    this.HitByField = value;
                    this.RaisePropertyChanged("HitBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime HitDate {
            get {
                return this.HitDateField;
            }
            set {
                if ((this.HitDateField.Equals(value) != true)) {
                    this.HitDateField = value;
                    this.RaisePropertyChanged("HitDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Method {
            get {
                return this.MethodField;
            }
            set {
                if ((object.ReferenceEquals(this.MethodField, value) != true)) {
                    this.MethodField = value;
                    this.RaisePropertyChanged("Method");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PayLoad {
            get {
                return this.PayLoadField;
            }
            set {
                if ((object.ReferenceEquals(this.PayLoadField, value) != true)) {
                    this.PayLoadField = value;
                    this.RaisePropertyChanged("PayLoad");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Url {
            get {
                return this.UrlField;
            }
            set {
                if ((object.ReferenceEquals(this.UrlField, value) != true)) {
                    this.UrlField = value;
                    this.RaisePropertyChanged("Url");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="vwUserTaskToDoNew", Namespace="http://schemas.datacontract.org/2004/07/SecureAccess.Domain.Models.TBIGSADB01.TBG" +
        "SecureAccess")]
    [System.SerializableAttribute()]
    public partial class vwUserTaskToDoNew : ARSystemFrontEnd.SecureAccessService.BaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ActionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ApplicationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConnectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExecStoredProcedureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaskToDoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TaskToDoIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TokenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long trxTokenIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ActionID {
            get {
                return this.ActionIDField;
            }
            set {
                if ((this.ActionIDField.Equals(value) != true)) {
                    this.ActionIDField = value;
                    this.RaisePropertyChanged("ActionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ApplicationID {
            get {
                return this.ApplicationIDField;
            }
            set {
                if ((this.ApplicationIDField.Equals(value) != true)) {
                    this.ApplicationIDField = value;
                    this.RaisePropertyChanged("ApplicationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Connection {
            get {
                return this.ConnectionField;
            }
            set {
                if ((object.ReferenceEquals(this.ConnectionField, value) != true)) {
                    this.ConnectionField = value;
                    this.RaisePropertyChanged("Connection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExecStoredProcedure {
            get {
                return this.ExecStoredProcedureField;
            }
            set {
                if ((object.ReferenceEquals(this.ExecStoredProcedureField, value) != true)) {
                    this.ExecStoredProcedureField = value;
                    this.RaisePropertyChanged("ExecStoredProcedure");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaskToDo {
            get {
                return this.TaskToDoField;
            }
            set {
                if ((object.ReferenceEquals(this.TaskToDoField, value) != true)) {
                    this.TaskToDoField = value;
                    this.RaisePropertyChanged("TaskToDo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TaskToDoID {
            get {
                return this.TaskToDoIDField;
            }
            set {
                if ((this.TaskToDoIDField.Equals(value) != true)) {
                    this.TaskToDoIDField = value;
                    this.RaisePropertyChanged("TaskToDoID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Token {
            get {
                return this.TokenField;
            }
            set {
                if ((object.ReferenceEquals(this.TokenField, value) != true)) {
                    this.TokenField = value;
                    this.RaisePropertyChanged("Token");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Url {
            get {
                return this.UrlField;
            }
            set {
                if ((object.ReferenceEquals(this.UrlField, value) != true)) {
                    this.UrlField = value;
                    this.RaisePropertyChanged("Url");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIDField, value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long trxTokenID {
            get {
                return this.trxTokenIDField;
            }
            set {
                if ((this.trxTokenIDField.Equals(value) != true)) {
                    this.trxTokenIDField = value;
                    this.RaisePropertyChanged("trxTokenID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="mstAuditTrailModule", Namespace="http://schemas.datacontract.org/2004/07/SecureAccess.Domain.Models.TBIGSADB01.TBG" +
        "SecureAccess")]
    [System.SerializableAttribute()]
    public partial class mstAuditTrailModule : ARSystemFrontEnd.SecureAccessService.BaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ApplicationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModuleField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ApplicationID {
            get {
                return this.ApplicationIDField;
            }
            set {
                if ((this.ApplicationIDField.Equals(value) != true)) {
                    this.ApplicationIDField = value;
                    this.RaisePropertyChanged("ApplicationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Module {
            get {
                return this.ModuleField;
            }
            set {
                if ((object.ReferenceEquals(this.ModuleField, value) != true)) {
                    this.ModuleField = value;
                    this.RaisePropertyChanged("Module");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="idxRoleDashboard", Namespace="http://schemas.datacontract.org/2004/07/SecureAccess.Domain.Models.TBIGSADB01.TBG" +
        "SecureAccess")]
    [System.SerializableAttribute()]
    public partial class idxRoleDashboard : ARSystemFrontEnd.SecureAccessService.BaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DashboardIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RoleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long idxRoleDashboardIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DashboardID {
            get {
                return this.DashboardIDField;
            }
            set {
                if ((this.DashboardIDField.Equals(value) != true)) {
                    this.DashboardIDField = value;
                    this.RaisePropertyChanged("DashboardID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RoleID {
            get {
                return this.RoleIDField;
            }
            set {
                if ((this.RoleIDField.Equals(value) != true)) {
                    this.RoleIDField = value;
                    this.RaisePropertyChanged("RoleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long idxRoleDashboardID {
            get {
                return this.idxRoleDashboardIDField;
            }
            set {
                if ((this.idxRoleDashboardIDField.Equals(value) != true)) {
                    this.idxRoleDashboardIDField = value;
                    this.RaisePropertyChanged("idxRoleDashboardID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="idxRoleActionNew", Namespace="http://schemas.datacontract.org/2004/07/SecureAccess.Domain.Models.TBIGSADB01.TBG" +
        "SecureAccess")]
    [System.SerializableAttribute()]
    public partial class idxRoleActionNew : ARSystemFrontEnd.SecureAccessService.BaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ActionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RoleIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ActionID {
            get {
                return this.ActionIDField;
            }
            set {
                if ((this.ActionIDField.Equals(value) != true)) {
                    this.ActionIDField = value;
                    this.RaisePropertyChanged("ActionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RoleID {
            get {
                return this.RoleIDField;
            }
            set {
                if ((this.RoleIDField.Equals(value) != true)) {
                    this.RoleIDField = value;
                    this.RaisePropertyChanged("RoleID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="idxRoleMenu", Namespace="http://schemas.datacontract.org/2004/07/SecureAccess.Domain.Models.TBIGSADB01.TBG" +
        "SecureAccess")]
    [System.SerializableAttribute()]
    public partial class idxRoleMenu : ARSystemFrontEnd.SecureAccessService.BaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MenuIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RoleIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MenuID {
            get {
                return this.MenuIDField;
            }
            set {
                if ((this.MenuIDField.Equals(value) != true)) {
                    this.MenuIDField = value;
                    this.RaisePropertyChanged("MenuID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RoleID {
            get {
                return this.RoleIDField;
            }
            set {
                if ((this.RoleIDField.Equals(value) != true)) {
                    this.RoleIDField = value;
                    this.RaisePropertyChanged("RoleID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="idxRoleTaskToDoNew", Namespace="http://schemas.datacontract.org/2004/07/SecureAccess.Domain.Models.TBIGSADB01.TBG" +
        "SecureAccess")]
    [System.SerializableAttribute()]
    public partial class idxRoleTaskToDoNew : ARSystemFrontEnd.SecureAccessService.BaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RoleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TaskToDoIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RoleID {
            get {
                return this.RoleIDField;
            }
            set {
                if ((this.RoleIDField.Equals(value) != true)) {
                    this.RoleIDField = value;
                    this.RaisePropertyChanged("RoleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TaskToDoID {
            get {
                return this.TaskToDoIDField;
            }
            set {
                if ((this.TaskToDoIDField.Equals(value) != true)) {
                    this.TaskToDoIDField = value;
                    this.RaisePropertyChanged("TaskToDoID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="vwDashboard", Namespace="http://schemas.datacontract.org/2004/07/SecureAccess.Domain.Models.TBIGSADB01.TBG" +
        "SecureAccess")]
    [System.SerializableAttribute()]
    public partial class vwDashboard : ARSystemFrontEnd.SecureAccessService.BaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DashboardDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DashboardIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DashboardIconField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DashboardNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DashboardURLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DirectorateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DirectorateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsActiveField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryField, value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CategoryID {
            get {
                return this.CategoryIDField;
            }
            set {
                if ((this.CategoryIDField.Equals(value) != true)) {
                    this.CategoryIDField = value;
                    this.RaisePropertyChanged("CategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DashboardDescription {
            get {
                return this.DashboardDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DashboardDescriptionField, value) != true)) {
                    this.DashboardDescriptionField = value;
                    this.RaisePropertyChanged("DashboardDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DashboardID {
            get {
                return this.DashboardIDField;
            }
            set {
                if ((this.DashboardIDField.Equals(value) != true)) {
                    this.DashboardIDField = value;
                    this.RaisePropertyChanged("DashboardID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DashboardIcon {
            get {
                return this.DashboardIconField;
            }
            set {
                if ((object.ReferenceEquals(this.DashboardIconField, value) != true)) {
                    this.DashboardIconField = value;
                    this.RaisePropertyChanged("DashboardIcon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DashboardName {
            get {
                return this.DashboardNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DashboardNameField, value) != true)) {
                    this.DashboardNameField = value;
                    this.RaisePropertyChanged("DashboardName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DashboardURL {
            get {
                return this.DashboardURLField;
            }
            set {
                if ((object.ReferenceEquals(this.DashboardURLField, value) != true)) {
                    this.DashboardURLField = value;
                    this.RaisePropertyChanged("DashboardURL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DirectorateID {
            get {
                return this.DirectorateIDField;
            }
            set {
                if ((this.DirectorateIDField.Equals(value) != true)) {
                    this.DirectorateIDField = value;
                    this.RaisePropertyChanged("DirectorateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DirectorateName {
            get {
                return this.DirectorateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DirectorateNameField, value) != true)) {
                    this.DirectorateNameField = value;
                    this.RaisePropertyChanged("DirectorateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="mstDashboardCategory", Namespace="http://schemas.datacontract.org/2004/07/SecureAccess.Domain.Models.TBIGSADB01.TBG" +
        "SecureAccess")]
    [System.SerializableAttribute()]
    public partial class mstDashboardCategory : ARSystemFrontEnd.SecureAccessService.BaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DashboardCategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DashboardCategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UpdatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> UpdatedDateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DashboardCategory {
            get {
                return this.DashboardCategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.DashboardCategoryField, value) != true)) {
                    this.DashboardCategoryField = value;
                    this.RaisePropertyChanged("DashboardCategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DashboardCategoryID {
            get {
                return this.DashboardCategoryIDField;
            }
            set {
                if ((this.DashboardCategoryIDField.Equals(value) != true)) {
                    this.DashboardCategoryIDField = value;
                    this.RaisePropertyChanged("DashboardCategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UpdatedBy {
            get {
                return this.UpdatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.UpdatedByField, value) != true)) {
                    this.UpdatedByField = value;
                    this.RaisePropertyChanged("UpdatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UpdatedDate {
            get {
                return this.UpdatedDateField;
            }
            set {
                if ((this.UpdatedDateField.Equals(value) != true)) {
                    this.UpdatedDateField = value;
                    this.RaisePropertyChanged("UpdatedDate");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="mstDirectorate", Namespace="http://schemas.datacontract.org/2004/07/SecureAccess.Domain.Models.TBIGSADB01.TBG" +
        "SecureAccess")]
    [System.SerializableAttribute()]
    public partial class mstDirectorate : ARSystemFrontEnd.SecureAccessService.BaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DirectorateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DirectorateNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DirectorateID {
            get {
                return this.DirectorateIDField;
            }
            set {
                if ((this.DirectorateIDField.Equals(value) != true)) {
                    this.DirectorateIDField = value;
                    this.RaisePropertyChanged("DirectorateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DirectorateName {
            get {
                return this.DirectorateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DirectorateNameField, value) != true)) {
                    this.DirectorateNameField = value;
                    this.RaisePropertyChanged("DirectorateName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="mstDashboard", Namespace="http://schemas.datacontract.org/2004/07/SecureAccess.Domain.Models.TBIGSADB01.TBG" +
        "SecureAccess")]
    [System.SerializableAttribute()]
    public partial class mstDashboard : ARSystemFrontEnd.SecureAccessService.BaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ApplicationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DashboardCategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DashboardDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DashboardIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DashboardIconField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DashboardNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DashboardURLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DirectorateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UpdatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> UpdatedDateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ApplicationID {
            get {
                return this.ApplicationIDField;
            }
            set {
                if ((this.ApplicationIDField.Equals(value) != true)) {
                    this.ApplicationIDField = value;
                    this.RaisePropertyChanged("ApplicationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DashboardCategoryID {
            get {
                return this.DashboardCategoryIDField;
            }
            set {
                if ((this.DashboardCategoryIDField.Equals(value) != true)) {
                    this.DashboardCategoryIDField = value;
                    this.RaisePropertyChanged("DashboardCategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DashboardDescription {
            get {
                return this.DashboardDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DashboardDescriptionField, value) != true)) {
                    this.DashboardDescriptionField = value;
                    this.RaisePropertyChanged("DashboardDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DashboardID {
            get {
                return this.DashboardIDField;
            }
            set {
                if ((this.DashboardIDField.Equals(value) != true)) {
                    this.DashboardIDField = value;
                    this.RaisePropertyChanged("DashboardID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DashboardIcon {
            get {
                return this.DashboardIconField;
            }
            set {
                if ((object.ReferenceEquals(this.DashboardIconField, value) != true)) {
                    this.DashboardIconField = value;
                    this.RaisePropertyChanged("DashboardIcon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DashboardName {
            get {
                return this.DashboardNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DashboardNameField, value) != true)) {
                    this.DashboardNameField = value;
                    this.RaisePropertyChanged("DashboardName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DashboardURL {
            get {
                return this.DashboardURLField;
            }
            set {
                if ((object.ReferenceEquals(this.DashboardURLField, value) != true)) {
                    this.DashboardURLField = value;
                    this.RaisePropertyChanged("DashboardURL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DirectorateID {
            get {
                return this.DirectorateIDField;
            }
            set {
                if ((this.DirectorateIDField.Equals(value) != true)) {
                    this.DirectorateIDField = value;
                    this.RaisePropertyChanged("DirectorateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UpdatedBy {
            get {
                return this.UpdatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.UpdatedByField, value) != true)) {
                    this.UpdatedByField = value;
                    this.RaisePropertyChanged("UpdatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UpdatedDate {
            get {
                return this.UpdatedDateField;
            }
            set {
                if ((this.UpdatedDateField.Equals(value) != true)) {
                    this.UpdatedDateField = value;
                    this.RaisePropertyChanged("UpdatedDate");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="mstActionNew", Namespace="http://schemas.datacontract.org/2004/07/SecureAccess.Domain.Models.TBIGSADB01.TBG" +
        "SecureAccess")]
    [System.SerializableAttribute()]
    public partial class mstActionNew : ARSystemFrontEnd.SecureAccessService.BaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ActionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActionTokenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsMenuField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MenuIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UpdatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> UpdatedDateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Action {
            get {
                return this.ActionField;
            }
            set {
                if ((object.ReferenceEquals(this.ActionField, value) != true)) {
                    this.ActionField = value;
                    this.RaisePropertyChanged("Action");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ActionID {
            get {
                return this.ActionIDField;
            }
            set {
                if ((this.ActionIDField.Equals(value) != true)) {
                    this.ActionIDField = value;
                    this.RaisePropertyChanged("ActionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ActionToken {
            get {
                return this.ActionTokenField;
            }
            set {
                if ((object.ReferenceEquals(this.ActionTokenField, value) != true)) {
                    this.ActionTokenField = value;
                    this.RaisePropertyChanged("ActionToken");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsMenu {
            get {
                return this.IsMenuField;
            }
            set {
                if ((this.IsMenuField.Equals(value) != true)) {
                    this.IsMenuField = value;
                    this.RaisePropertyChanged("IsMenu");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MenuID {
            get {
                return this.MenuIDField;
            }
            set {
                if ((this.MenuIDField.Equals(value) != true)) {
                    this.MenuIDField = value;
                    this.RaisePropertyChanged("MenuID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UpdatedBy {
            get {
                return this.UpdatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.UpdatedByField, value) != true)) {
                    this.UpdatedByField = value;
                    this.RaisePropertyChanged("UpdatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UpdatedDate {
            get {
                return this.UpdatedDateField;
            }
            set {
                if ((this.UpdatedDateField.Equals(value) != true)) {
                    this.UpdatedDateField = value;
                    this.RaisePropertyChanged("UpdatedDate");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="mstMenuNew", Namespace="http://schemas.datacontract.org/2004/07/SecureAccess.Domain.Models.TBIGSADB01.TBG" +
        "SecureAccess")]
    [System.SerializableAttribute()]
    public partial class mstMenuNew : ARSystemFrontEnd.SecureAccessService.BaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ApplicationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IconField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MenuField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MenuIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MenuParentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SortField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UpdatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> UpdatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UrlField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ApplicationID {
            get {
                return this.ApplicationIDField;
            }
            set {
                if ((this.ApplicationIDField.Equals(value) != true)) {
                    this.ApplicationIDField = value;
                    this.RaisePropertyChanged("ApplicationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Icon {
            get {
                return this.IconField;
            }
            set {
                if ((object.ReferenceEquals(this.IconField, value) != true)) {
                    this.IconField = value;
                    this.RaisePropertyChanged("Icon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Menu {
            get {
                return this.MenuField;
            }
            set {
                if ((object.ReferenceEquals(this.MenuField, value) != true)) {
                    this.MenuField = value;
                    this.RaisePropertyChanged("Menu");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MenuID {
            get {
                return this.MenuIDField;
            }
            set {
                if ((this.MenuIDField.Equals(value) != true)) {
                    this.MenuIDField = value;
                    this.RaisePropertyChanged("MenuID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MenuParentID {
            get {
                return this.MenuParentIDField;
            }
            set {
                if ((this.MenuParentIDField.Equals(value) != true)) {
                    this.MenuParentIDField = value;
                    this.RaisePropertyChanged("MenuParentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Sort {
            get {
                return this.SortField;
            }
            set {
                if ((this.SortField.Equals(value) != true)) {
                    this.SortField = value;
                    this.RaisePropertyChanged("Sort");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UpdatedBy {
            get {
                return this.UpdatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.UpdatedByField, value) != true)) {
                    this.UpdatedByField = value;
                    this.RaisePropertyChanged("UpdatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UpdatedDate {
            get {
                return this.UpdatedDateField;
            }
            set {
                if ((this.UpdatedDateField.Equals(value) != true)) {
                    this.UpdatedDateField = value;
                    this.RaisePropertyChanged("UpdatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Url {
            get {
                return this.UrlField;
            }
            set {
                if ((object.ReferenceEquals(this.UrlField, value) != true)) {
                    this.UrlField = value;
                    this.RaisePropertyChanged("Url");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="vwRoleMenuNew", Namespace="http://schemas.datacontract.org/2004/07/SecureAccess.Domain.Models.TBIGSADB01.TBG" +
        "SecureAccess")]
    [System.SerializableAttribute()]
    public partial class vwRoleMenuNew : ARSystemFrontEnd.SecureAccessService.BaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApplicationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ApplicationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IconField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MenuField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MenuIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MenuParentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MenuParentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RoleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RootMenuField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SortField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UrlField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Application {
            get {
                return this.ApplicationField;
            }
            set {
                if ((object.ReferenceEquals(this.ApplicationField, value) != true)) {
                    this.ApplicationField = value;
                    this.RaisePropertyChanged("Application");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ApplicationID {
            get {
                return this.ApplicationIDField;
            }
            set {
                if ((this.ApplicationIDField.Equals(value) != true)) {
                    this.ApplicationIDField = value;
                    this.RaisePropertyChanged("ApplicationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Icon {
            get {
                return this.IconField;
            }
            set {
                if ((object.ReferenceEquals(this.IconField, value) != true)) {
                    this.IconField = value;
                    this.RaisePropertyChanged("Icon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Menu {
            get {
                return this.MenuField;
            }
            set {
                if ((object.ReferenceEquals(this.MenuField, value) != true)) {
                    this.MenuField = value;
                    this.RaisePropertyChanged("Menu");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MenuID {
            get {
                return this.MenuIDField;
            }
            set {
                if ((this.MenuIDField.Equals(value) != true)) {
                    this.MenuIDField = value;
                    this.RaisePropertyChanged("MenuID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MenuParent {
            get {
                return this.MenuParentField;
            }
            set {
                if ((object.ReferenceEquals(this.MenuParentField, value) != true)) {
                    this.MenuParentField = value;
                    this.RaisePropertyChanged("MenuParent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MenuParentID {
            get {
                return this.MenuParentIDField;
            }
            set {
                if ((this.MenuParentIDField.Equals(value) != true)) {
                    this.MenuParentIDField = value;
                    this.RaisePropertyChanged("MenuParentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Role {
            get {
                return this.RoleField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleField, value) != true)) {
                    this.RoleField = value;
                    this.RaisePropertyChanged("Role");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RoleID {
            get {
                return this.RoleIDField;
            }
            set {
                if ((this.RoleIDField.Equals(value) != true)) {
                    this.RoleIDField = value;
                    this.RaisePropertyChanged("RoleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RootMenu {
            get {
                return this.RootMenuField;
            }
            set {
                if ((object.ReferenceEquals(this.RootMenuField, value) != true)) {
                    this.RootMenuField = value;
                    this.RaisePropertyChanged("RootMenu");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Sort {
            get {
                return this.SortField;
            }
            set {
                if ((this.SortField.Equals(value) != true)) {
                    this.SortField = value;
                    this.RaisePropertyChanged("Sort");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Url {
            get {
                return this.UrlField;
            }
            set {
                if ((object.ReferenceEquals(this.UrlField, value) != true)) {
                    this.UrlField = value;
                    this.RaisePropertyChanged("Url");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="vwRoleActionNew", Namespace="http://schemas.datacontract.org/2004/07/SecureAccess.Domain.Models.TBIGSADB01.TBG" +
        "SecureAccess")]
    [System.SerializableAttribute()]
    public partial class vwRoleActionNew : ARSystemFrontEnd.SecureAccessService.BaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ActionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActionTokenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ApplicationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsMenuField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MenuField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> MenuIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RoleIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Action {
            get {
                return this.ActionField;
            }
            set {
                if ((object.ReferenceEquals(this.ActionField, value) != true)) {
                    this.ActionField = value;
                    this.RaisePropertyChanged("Action");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ActionID {
            get {
                return this.ActionIDField;
            }
            set {
                if ((this.ActionIDField.Equals(value) != true)) {
                    this.ActionIDField = value;
                    this.RaisePropertyChanged("ActionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ActionToken {
            get {
                return this.ActionTokenField;
            }
            set {
                if ((object.ReferenceEquals(this.ActionTokenField, value) != true)) {
                    this.ActionTokenField = value;
                    this.RaisePropertyChanged("ActionToken");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ApplicationID {
            get {
                return this.ApplicationIDField;
            }
            set {
                if ((this.ApplicationIDField.Equals(value) != true)) {
                    this.ApplicationIDField = value;
                    this.RaisePropertyChanged("ApplicationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsMenu {
            get {
                return this.IsMenuField;
            }
            set {
                if ((this.IsMenuField.Equals(value) != true)) {
                    this.IsMenuField = value;
                    this.RaisePropertyChanged("IsMenu");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Menu {
            get {
                return this.MenuField;
            }
            set {
                if ((object.ReferenceEquals(this.MenuField, value) != true)) {
                    this.MenuField = value;
                    this.RaisePropertyChanged("Menu");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> MenuID {
            get {
                return this.MenuIDField;
            }
            set {
                if ((this.MenuIDField.Equals(value) != true)) {
                    this.MenuIDField = value;
                    this.RaisePropertyChanged("MenuID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Role {
            get {
                return this.RoleField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleField, value) != true)) {
                    this.RoleField = value;
                    this.RaisePropertyChanged("Role");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RoleID {
            get {
                return this.RoleIDField;
            }
            set {
                if ((this.RoleIDField.Equals(value) != true)) {
                    this.RoleIDField = value;
                    this.RaisePropertyChanged("RoleID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="mstTaskToDoNew", Namespace="http://schemas.datacontract.org/2004/07/SecureAccess.Domain.Models.TBIGSADB01.TBG" +
        "SecureAccess")]
    [System.SerializableAttribute()]
    public partial class mstTaskToDoNew : ARSystemFrontEnd.SecureAccessService.BaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ActionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ApplicationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConnectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExecStoredProcedureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaskToDoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TaskToDoIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UpdatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> UpdatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UrlField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ActionID {
            get {
                return this.ActionIDField;
            }
            set {
                if ((this.ActionIDField.Equals(value) != true)) {
                    this.ActionIDField = value;
                    this.RaisePropertyChanged("ActionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ApplicationID {
            get {
                return this.ApplicationIDField;
            }
            set {
                if ((this.ApplicationIDField.Equals(value) != true)) {
                    this.ApplicationIDField = value;
                    this.RaisePropertyChanged("ApplicationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Connection {
            get {
                return this.ConnectionField;
            }
            set {
                if ((object.ReferenceEquals(this.ConnectionField, value) != true)) {
                    this.ConnectionField = value;
                    this.RaisePropertyChanged("Connection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExecStoredProcedure {
            get {
                return this.ExecStoredProcedureField;
            }
            set {
                if ((object.ReferenceEquals(this.ExecStoredProcedureField, value) != true)) {
                    this.ExecStoredProcedureField = value;
                    this.RaisePropertyChanged("ExecStoredProcedure");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaskToDo {
            get {
                return this.TaskToDoField;
            }
            set {
                if ((object.ReferenceEquals(this.TaskToDoField, value) != true)) {
                    this.TaskToDoField = value;
                    this.RaisePropertyChanged("TaskToDo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TaskToDoID {
            get {
                return this.TaskToDoIDField;
            }
            set {
                if ((this.TaskToDoIDField.Equals(value) != true)) {
                    this.TaskToDoIDField = value;
                    this.RaisePropertyChanged("TaskToDoID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UpdatedBy {
            get {
                return this.UpdatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.UpdatedByField, value) != true)) {
                    this.UpdatedByField = value;
                    this.RaisePropertyChanged("UpdatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UpdatedDate {
            get {
                return this.UpdatedDateField;
            }
            set {
                if ((this.UpdatedDateField.Equals(value) != true)) {
                    this.UpdatedDateField = value;
                    this.RaisePropertyChanged("UpdatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Url {
            get {
                return this.UrlField;
            }
            set {
                if ((object.ReferenceEquals(this.UrlField, value) != true)) {
                    this.UrlField = value;
                    this.RaisePropertyChanged("Url");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="vwRoleTaskToDoNew", Namespace="http://schemas.datacontract.org/2004/07/SecureAccess.Domain.Models.TBIGSADB01.TBG" +
        "SecureAccess")]
    [System.SerializableAttribute()]
    public partial class vwRoleTaskToDoNew : ARSystemFrontEnd.SecureAccessService.BaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ActionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ApplicationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConnectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExecStoredProcedureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaskToDoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TaskToDoIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UpdatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> UpdatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int mstRoleIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ActionID {
            get {
                return this.ActionIDField;
            }
            set {
                if ((this.ActionIDField.Equals(value) != true)) {
                    this.ActionIDField = value;
                    this.RaisePropertyChanged("ActionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ApplicationID {
            get {
                return this.ApplicationIDField;
            }
            set {
                if ((this.ApplicationIDField.Equals(value) != true)) {
                    this.ApplicationIDField = value;
                    this.RaisePropertyChanged("ApplicationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Connection {
            get {
                return this.ConnectionField;
            }
            set {
                if ((object.ReferenceEquals(this.ConnectionField, value) != true)) {
                    this.ConnectionField = value;
                    this.RaisePropertyChanged("Connection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExecStoredProcedure {
            get {
                return this.ExecStoredProcedureField;
            }
            set {
                if ((object.ReferenceEquals(this.ExecStoredProcedureField, value) != true)) {
                    this.ExecStoredProcedureField = value;
                    this.RaisePropertyChanged("ExecStoredProcedure");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Role {
            get {
                return this.RoleField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleField, value) != true)) {
                    this.RoleField = value;
                    this.RaisePropertyChanged("Role");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaskToDo {
            get {
                return this.TaskToDoField;
            }
            set {
                if ((object.ReferenceEquals(this.TaskToDoField, value) != true)) {
                    this.TaskToDoField = value;
                    this.RaisePropertyChanged("TaskToDo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TaskToDoID {
            get {
                return this.TaskToDoIDField;
            }
            set {
                if ((this.TaskToDoIDField.Equals(value) != true)) {
                    this.TaskToDoIDField = value;
                    this.RaisePropertyChanged("TaskToDoID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UpdatedBy {
            get {
                return this.UpdatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.UpdatedByField, value) != true)) {
                    this.UpdatedByField = value;
                    this.RaisePropertyChanged("UpdatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UpdatedDate {
            get {
                return this.UpdatedDateField;
            }
            set {
                if ((this.UpdatedDateField.Equals(value) != true)) {
                    this.UpdatedDateField = value;
                    this.RaisePropertyChanged("UpdatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Url {
            get {
                return this.UrlField;
            }
            set {
                if ((object.ReferenceEquals(this.UrlField, value) != true)) {
                    this.UrlField = value;
                    this.RaisePropertyChanged("Url");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int mstRoleID {
            get {
                return this.mstRoleIDField;
            }
            set {
                if ((this.mstRoleIDField.Equals(value) != true)) {
                    this.mstRoleIDField = value;
                    this.RaisePropertyChanged("mstRoleID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SyncStagingMstEmployee", Namespace="http://schemas.datacontract.org/2004/07/SecureAccess.Domain.Models.TBIGSYSDB01.TB" +
        "GMDM")]
    [System.SerializableAttribute()]
    public partial class SyncStagingMstEmployee : ARSystemFrontEnd.SecureAccessService.BaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DepartmentCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DirectorateCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DivisionCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstLayerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool GenderCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JobsTitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JobsTitleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime JoinDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LevelPositionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LevelPositionNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifieDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PositionCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PositionNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReligionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReportCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ResignDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SecondLayerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusResignField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime SyncDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WorkLocationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WorkLocationNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime birthdateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string birthplaceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string departmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string directorateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string divisionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> effectiveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string emailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string emp_noField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string employ_codeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string full_nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string grade_codeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string grade_nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string identity_noField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string maritalStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool maritalStatusIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> married_dateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string married_placeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string phoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string photoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string photo_pathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string religionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string taxnoField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyId {
            get {
                return this.CompanyIdField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyIdField, value) != true)) {
                    this.CompanyIdField = value;
                    this.RaisePropertyChanged("CompanyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyName {
            get {
                return this.CompanyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyNameField, value) != true)) {
                    this.CompanyNameField = value;
                    this.RaisePropertyChanged("CompanyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DepartmentCode {
            get {
                return this.DepartmentCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.DepartmentCodeField, value) != true)) {
                    this.DepartmentCodeField = value;
                    this.RaisePropertyChanged("DepartmentCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DirectorateCode {
            get {
                return this.DirectorateCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.DirectorateCodeField, value) != true)) {
                    this.DirectorateCodeField = value;
                    this.RaisePropertyChanged("DirectorateCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DivisionCode {
            get {
                return this.DivisionCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.DivisionCodeField, value) != true)) {
                    this.DivisionCodeField = value;
                    this.RaisePropertyChanged("DivisionCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstLayer {
            get {
                return this.FirstLayerField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstLayerField, value) != true)) {
                    this.FirstLayerField = value;
                    this.RaisePropertyChanged("FirstLayer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Gender {
            get {
                return this.GenderField;
            }
            set {
                if ((object.ReferenceEquals(this.GenderField, value) != true)) {
                    this.GenderField = value;
                    this.RaisePropertyChanged("Gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool GenderCode {
            get {
                return this.GenderCodeField;
            }
            set {
                if ((this.GenderCodeField.Equals(value) != true)) {
                    this.GenderCodeField = value;
                    this.RaisePropertyChanged("GenderCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JobsTitle {
            get {
                return this.JobsTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.JobsTitleField, value) != true)) {
                    this.JobsTitleField = value;
                    this.RaisePropertyChanged("JobsTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JobsTitleID {
            get {
                return this.JobsTitleIDField;
            }
            set {
                if ((object.ReferenceEquals(this.JobsTitleIDField, value) != true)) {
                    this.JobsTitleIDField = value;
                    this.RaisePropertyChanged("JobsTitleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime JoinDate {
            get {
                return this.JoinDateField;
            }
            set {
                if ((this.JoinDateField.Equals(value) != true)) {
                    this.JoinDateField = value;
                    this.RaisePropertyChanged("JoinDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LevelPositionId {
            get {
                return this.LevelPositionIdField;
            }
            set {
                if ((object.ReferenceEquals(this.LevelPositionIdField, value) != true)) {
                    this.LevelPositionIdField = value;
                    this.RaisePropertyChanged("LevelPositionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LevelPositionName {
            get {
                return this.LevelPositionNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LevelPositionNameField, value) != true)) {
                    this.LevelPositionNameField = value;
                    this.RaisePropertyChanged("LevelPositionName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifieDate {
            get {
                return this.ModifieDateField;
            }
            set {
                if ((this.ModifieDateField.Equals(value) != true)) {
                    this.ModifieDateField = value;
                    this.RaisePropertyChanged("ModifieDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PositionCode {
            get {
                return this.PositionCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PositionCodeField, value) != true)) {
                    this.PositionCodeField = value;
                    this.RaisePropertyChanged("PositionCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PositionName {
            get {
                return this.PositionNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PositionNameField, value) != true)) {
                    this.PositionNameField = value;
                    this.RaisePropertyChanged("PositionName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReligionId {
            get {
                return this.ReligionIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ReligionIdField, value) != true)) {
                    this.ReligionIdField = value;
                    this.RaisePropertyChanged("ReligionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReportCode {
            get {
                return this.ReportCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ReportCodeField, value) != true)) {
                    this.ReportCodeField = value;
                    this.RaisePropertyChanged("ReportCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ResignDate {
            get {
                return this.ResignDateField;
            }
            set {
                if ((this.ResignDateField.Equals(value) != true)) {
                    this.ResignDateField = value;
                    this.RaisePropertyChanged("ResignDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecondLayer {
            get {
                return this.SecondLayerField;
            }
            set {
                if ((object.ReferenceEquals(this.SecondLayerField, value) != true)) {
                    this.SecondLayerField = value;
                    this.RaisePropertyChanged("SecondLayer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusResign {
            get {
                return this.StatusResignField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusResignField, value) != true)) {
                    this.StatusResignField = value;
                    this.RaisePropertyChanged("StatusResign");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime SyncDate {
            get {
                return this.SyncDateField;
            }
            set {
                if ((this.SyncDateField.Equals(value) != true)) {
                    this.SyncDateField = value;
                    this.RaisePropertyChanged("SyncDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WorkLocationId {
            get {
                return this.WorkLocationIdField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkLocationIdField, value) != true)) {
                    this.WorkLocationIdField = value;
                    this.RaisePropertyChanged("WorkLocationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WorkLocationName {
            get {
                return this.WorkLocationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkLocationNameField, value) != true)) {
                    this.WorkLocationNameField = value;
                    this.RaisePropertyChanged("WorkLocationName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime birthdate {
            get {
                return this.birthdateField;
            }
            set {
                if ((this.birthdateField.Equals(value) != true)) {
                    this.birthdateField = value;
                    this.RaisePropertyChanged("birthdate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string birthplace {
            get {
                return this.birthplaceField;
            }
            set {
                if ((object.ReferenceEquals(this.birthplaceField, value) != true)) {
                    this.birthplaceField = value;
                    this.RaisePropertyChanged("birthplace");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string department {
            get {
                return this.departmentField;
            }
            set {
                if ((object.ReferenceEquals(this.departmentField, value) != true)) {
                    this.departmentField = value;
                    this.RaisePropertyChanged("department");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string directorate {
            get {
                return this.directorateField;
            }
            set {
                if ((object.ReferenceEquals(this.directorateField, value) != true)) {
                    this.directorateField = value;
                    this.RaisePropertyChanged("directorate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string division {
            get {
                return this.divisionField;
            }
            set {
                if ((object.ReferenceEquals(this.divisionField, value) != true)) {
                    this.divisionField = value;
                    this.RaisePropertyChanged("division");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> effectiveDate {
            get {
                return this.effectiveDateField;
            }
            set {
                if ((this.effectiveDateField.Equals(value) != true)) {
                    this.effectiveDateField = value;
                    this.RaisePropertyChanged("effectiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string email {
            get {
                return this.emailField;
            }
            set {
                if ((object.ReferenceEquals(this.emailField, value) != true)) {
                    this.emailField = value;
                    this.RaisePropertyChanged("email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string emp_no {
            get {
                return this.emp_noField;
            }
            set {
                if ((object.ReferenceEquals(this.emp_noField, value) != true)) {
                    this.emp_noField = value;
                    this.RaisePropertyChanged("emp_no");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string employ_code {
            get {
                return this.employ_codeField;
            }
            set {
                if ((object.ReferenceEquals(this.employ_codeField, value) != true)) {
                    this.employ_codeField = value;
                    this.RaisePropertyChanged("employ_code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string full_name {
            get {
                return this.full_nameField;
            }
            set {
                if ((object.ReferenceEquals(this.full_nameField, value) != true)) {
                    this.full_nameField = value;
                    this.RaisePropertyChanged("full_name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string grade_code {
            get {
                return this.grade_codeField;
            }
            set {
                if ((object.ReferenceEquals(this.grade_codeField, value) != true)) {
                    this.grade_codeField = value;
                    this.RaisePropertyChanged("grade_code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string grade_name {
            get {
                return this.grade_nameField;
            }
            set {
                if ((object.ReferenceEquals(this.grade_nameField, value) != true)) {
                    this.grade_nameField = value;
                    this.RaisePropertyChanged("grade_name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string identity_no {
            get {
                return this.identity_noField;
            }
            set {
                if ((object.ReferenceEquals(this.identity_noField, value) != true)) {
                    this.identity_noField = value;
                    this.RaisePropertyChanged("identity_no");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string maritalStatus {
            get {
                return this.maritalStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.maritalStatusField, value) != true)) {
                    this.maritalStatusField = value;
                    this.RaisePropertyChanged("maritalStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool maritalStatusId {
            get {
                return this.maritalStatusIdField;
            }
            set {
                if ((this.maritalStatusIdField.Equals(value) != true)) {
                    this.maritalStatusIdField = value;
                    this.RaisePropertyChanged("maritalStatusId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> married_date {
            get {
                return this.married_dateField;
            }
            set {
                if ((this.married_dateField.Equals(value) != true)) {
                    this.married_dateField = value;
                    this.RaisePropertyChanged("married_date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string married_place {
            get {
                return this.married_placeField;
            }
            set {
                if ((object.ReferenceEquals(this.married_placeField, value) != true)) {
                    this.married_placeField = value;
                    this.RaisePropertyChanged("married_place");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string phone {
            get {
                return this.phoneField;
            }
            set {
                if ((object.ReferenceEquals(this.phoneField, value) != true)) {
                    this.phoneField = value;
                    this.RaisePropertyChanged("phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string photo {
            get {
                return this.photoField;
            }
            set {
                if ((object.ReferenceEquals(this.photoField, value) != true)) {
                    this.photoField = value;
                    this.RaisePropertyChanged("photo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string photo_path {
            get {
                return this.photo_pathField;
            }
            set {
                if ((object.ReferenceEquals(this.photo_pathField, value) != true)) {
                    this.photo_pathField = value;
                    this.RaisePropertyChanged("photo_path");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string religion {
            get {
                return this.religionField;
            }
            set {
                if ((object.ReferenceEquals(this.religionField, value) != true)) {
                    this.religionField = value;
                    this.RaisePropertyChanged("religion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string taxno {
            get {
                return this.taxnoField;
            }
            set {
                if ((object.ReferenceEquals(this.taxnoField, value) != true)) {
                    this.taxnoField = value;
                    this.RaisePropertyChanged("taxno");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="vmUpdateAuthorization", Namespace="http://schemas.datacontract.org/2004/07/SecureAccess.Domain.Models.ViewModels.Mas" +
        "ter.Authorization")]
    [System.SerializableAttribute()]
    public partial class vmUpdateAuthorization : ARSystemFrontEnd.SecureAccessService.BaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ApplicationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ARSystemFrontEnd.SecureAccessService.idxRoleActionNew[] RoleActionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RoleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ARSystemFrontEnd.SecureAccessService.idxRoleMenu[] RoleMenusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ARSystemFrontEnd.SecureAccessService.idxRoleTaskToDoNew[] RoleTaskToDosField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ApplicationID {
            get {
                return this.ApplicationIDField;
            }
            set {
                if ((this.ApplicationIDField.Equals(value) != true)) {
                    this.ApplicationIDField = value;
                    this.RaisePropertyChanged("ApplicationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ARSystemFrontEnd.SecureAccessService.idxRoleActionNew[] RoleActions {
            get {
                return this.RoleActionsField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleActionsField, value) != true)) {
                    this.RoleActionsField = value;
                    this.RaisePropertyChanged("RoleActions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RoleID {
            get {
                return this.RoleIDField;
            }
            set {
                if ((this.RoleIDField.Equals(value) != true)) {
                    this.RoleIDField = value;
                    this.RaisePropertyChanged("RoleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ARSystemFrontEnd.SecureAccessService.idxRoleMenu[] RoleMenus {
            get {
                return this.RoleMenusField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleMenusField, value) != true)) {
                    this.RoleMenusField = value;
                    this.RaisePropertyChanged("RoleMenus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ARSystemFrontEnd.SecureAccessService.idxRoleTaskToDoNew[] RoleTaskToDos {
            get {
                return this.RoleTaskToDosField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleTaskToDosField, value) != true)) {
                    this.RoleTaskToDosField = value;
                    this.RaisePropertyChanged("RoleTaskToDos");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="idxRoleJobTitle", Namespace="http://schemas.datacontract.org/2004/07/SecureAccess.Domain.Models.TBIGSYSDB01.TB" +
        "GSecureAccess")]
    [System.SerializableAttribute()]
    public partial class idxRoleJobTitle : ARSystemFrontEnd.SecureAccessService.BaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JobTitleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int mstRoleIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JobTitleID {
            get {
                return this.JobTitleIDField;
            }
            set {
                if ((object.ReferenceEquals(this.JobTitleIDField, value) != true)) {
                    this.JobTitleIDField = value;
                    this.RaisePropertyChanged("JobTitleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int mstRoleID {
            get {
                return this.mstRoleIDField;
            }
            set {
                if ((this.mstRoleIDField.Equals(value) != true)) {
                    this.mstRoleIDField = value;
                    this.RaisePropertyChanged("mstRoleID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="vmConsoleDashoard", Namespace="http://schemas.datacontract.org/2004/07/SecureAccess.Domain.Models")]
    [System.SerializableAttribute()]
    public partial class vmConsoleDashoard : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ARSystemFrontEnd.SecureAccessService.vwConsoleScheduler[] ActiveSchedulersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ARSystemFrontEnd.SecureAccessService.vwConsoleScheduler[] InactiveSchedulersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ARSystemFrontEnd.SecureAccessService.vwConsoleWeeklyStats[] vwConsoleWeeklyStatsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ARSystemFrontEnd.SecureAccessService.vwConsoleScheduler[] ActiveSchedulers {
            get {
                return this.ActiveSchedulersField;
            }
            set {
                if ((object.ReferenceEquals(this.ActiveSchedulersField, value) != true)) {
                    this.ActiveSchedulersField = value;
                    this.RaisePropertyChanged("ActiveSchedulers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ARSystemFrontEnd.SecureAccessService.vwConsoleScheduler[] InactiveSchedulers {
            get {
                return this.InactiveSchedulersField;
            }
            set {
                if ((object.ReferenceEquals(this.InactiveSchedulersField, value) != true)) {
                    this.InactiveSchedulersField = value;
                    this.RaisePropertyChanged("InactiveSchedulers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ARSystemFrontEnd.SecureAccessService.vwConsoleWeeklyStats[] vwConsoleWeeklyStats {
            get {
                return this.vwConsoleWeeklyStatsField;
            }
            set {
                if ((object.ReferenceEquals(this.vwConsoleWeeklyStatsField, value) != true)) {
                    this.vwConsoleWeeklyStatsField = value;
                    this.RaisePropertyChanged("vwConsoleWeeklyStats");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="vmAuditTrail", Namespace="http://schemas.datacontract.org/2004/07/SecureAccess.Domain.Models.ViewModels.Aud" +
        "itTrail")]
    [System.SerializableAttribute()]
    public partial class vmAuditTrail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ApplicationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MethodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PayLoadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UrlField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ApplicationID {
            get {
                return this.ApplicationIDField;
            }
            set {
                if ((this.ApplicationIDField.Equals(value) != true)) {
                    this.ApplicationIDField = value;
                    this.RaisePropertyChanged("ApplicationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Method {
            get {
                return this.MethodField;
            }
            set {
                if ((object.ReferenceEquals(this.MethodField, value) != true)) {
                    this.MethodField = value;
                    this.RaisePropertyChanged("Method");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PayLoad {
            get {
                return this.PayLoadField;
            }
            set {
                if ((object.ReferenceEquals(this.PayLoadField, value) != true)) {
                    this.PayLoadField = value;
                    this.RaisePropertyChanged("PayLoad");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Url {
            get {
                return this.UrlField;
            }
            set {
                if ((object.ReferenceEquals(this.UrlField, value) != true)) {
                    this.UrlField = value;
                    this.RaisePropertyChanged("Url");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DatatableAjaxModel", Namespace="http://schemas.datacontract.org/2004/07/SecureAccess.Domain.Models.ViewModels.Dat" +
        "atable")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ARSystemFrontEnd.SecureAccessService.dtMenuFilter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ARSystemFrontEnd.SecureAccessService.dtTaskToDoFilter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ARSystemFrontEnd.SecureAccessService.dtAccessHistoryFilter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ARSystemFrontEnd.SecureAccessService.dtLoginHistoryFilter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ARSystemFrontEnd.SecureAccessService.dtActionHistoryFilter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ARSystemFrontEnd.SecureAccessService.dtActionFilter))]
    public partial class DatatableAjaxModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ARSystemFrontEnd.SecureAccessService.DatatableColumn[] columnsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int drawField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int lengthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ARSystemFrontEnd.SecureAccessService.DatatableOrder[] orderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ARSystemFrontEnd.SecureAccessService.DatatableSearch searchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int startField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ARSystemFrontEnd.SecureAccessService.DatatableColumn[] columns {
            get {
                return this.columnsField;
            }
            set {
                if ((object.ReferenceEquals(this.columnsField, value) != true)) {
                    this.columnsField = value;
                    this.RaisePropertyChanged("columns");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int draw {
            get {
                return this.drawField;
            }
            set {
                if ((this.drawField.Equals(value) != true)) {
                    this.drawField = value;
                    this.RaisePropertyChanged("draw");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int length {
            get {
                return this.lengthField;
            }
            set {
                if ((this.lengthField.Equals(value) != true)) {
                    this.lengthField = value;
                    this.RaisePropertyChanged("length");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ARSystemFrontEnd.SecureAccessService.DatatableOrder[] order {
            get {
                return this.orderField;
            }
            set {
                if ((object.ReferenceEquals(this.orderField, value) != true)) {
                    this.orderField = value;
                    this.RaisePropertyChanged("order");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ARSystemFrontEnd.SecureAccessService.DatatableSearch search {
            get {
                return this.searchField;
            }
            set {
                if ((object.ReferenceEquals(this.searchField, value) != true)) {
                    this.searchField = value;
                    this.RaisePropertyChanged("search");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int start {
            get {
                return this.startField;
            }
            set {
                if ((this.startField.Equals(value) != true)) {
                    this.startField = value;
                    this.RaisePropertyChanged("start");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DatatableSearch", Namespace="http://schemas.datacontract.org/2004/07/SecureAccess.Domain.Models.ViewModels.Dat" +
        "atable")]
    [System.SerializableAttribute()]
    public partial class DatatableSearch : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string regexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string valueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string regex {
            get {
                return this.regexField;
            }
            set {
                if ((object.ReferenceEquals(this.regexField, value) != true)) {
                    this.regexField = value;
                    this.RaisePropertyChanged("regex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string value {
            get {
                return this.valueField;
            }
            set {
                if ((object.ReferenceEquals(this.valueField, value) != true)) {
                    this.valueField = value;
                    this.RaisePropertyChanged("value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="dtMenuFilter", Namespace="http://schemas.datacontract.org/2004/07/SecureAccess.Domain.Models.ViewModels.Men" +
        "u")]
    [System.SerializableAttribute()]
    public partial class dtMenuFilter : ARSystemFrontEnd.SecureAccessService.DatatableAjaxModel {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ApplicationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MenuField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MenuParentField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ApplicationID {
            get {
                return this.ApplicationIDField;
            }
            set {
                if ((this.ApplicationIDField.Equals(value) != true)) {
                    this.ApplicationIDField = value;
                    this.RaisePropertyChanged("ApplicationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Menu {
            get {
                return this.MenuField;
            }
            set {
                if ((object.ReferenceEquals(this.MenuField, value) != true)) {
                    this.MenuField = value;
                    this.RaisePropertyChanged("Menu");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MenuParent {
            get {
                return this.MenuParentField;
            }
            set {
                if ((object.ReferenceEquals(this.MenuParentField, value) != true)) {
                    this.MenuParentField = value;
                    this.RaisePropertyChanged("MenuParent");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="dtTaskToDoFilter", Namespace="http://schemas.datacontract.org/2004/07/SecureAccess.Domain.Models.ViewModels.Tas" +
        "kToDo")]
    [System.SerializableAttribute()]
    public partial class dtTaskToDoFilter : ARSystemFrontEnd.SecureAccessService.DatatableAjaxModel {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ApplicationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MenuIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaskToDoField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ApplicationID {
            get {
                return this.ApplicationIDField;
            }
            set {
                if ((this.ApplicationIDField.Equals(value) != true)) {
                    this.ApplicationIDField = value;
                    this.RaisePropertyChanged("ApplicationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MenuID {
            get {
                return this.MenuIDField;
            }
            set {
                if ((this.MenuIDField.Equals(value) != true)) {
                    this.MenuIDField = value;
                    this.RaisePropertyChanged("MenuID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaskToDo {
            get {
                return this.TaskToDoField;
            }
            set {
                if ((object.ReferenceEquals(this.TaskToDoField, value) != true)) {
                    this.TaskToDoField = value;
                    this.RaisePropertyChanged("TaskToDo");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="dtAccessHistoryFilter", Namespace="http://schemas.datacontract.org/2004/07/SecureAccess.Domain.Models.ViewModels.His" +
        "tory")]
    [System.SerializableAttribute()]
    public partial class dtAccessHistoryFilter : ARSystemFrontEnd.SecureAccessService.DatatableAjaxModel {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ApplicationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EndLoginDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> StartLoginDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ApplicationID {
            get {
                return this.ApplicationIDField;
            }
            set {
                if ((this.ApplicationIDField.Equals(value) != true)) {
                    this.ApplicationIDField = value;
                    this.RaisePropertyChanged("ApplicationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EndLoginDate {
            get {
                return this.EndLoginDateField;
            }
            set {
                if ((this.EndLoginDateField.Equals(value) != true)) {
                    this.EndLoginDateField = value;
                    this.RaisePropertyChanged("EndLoginDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> StartLoginDate {
            get {
                return this.StartLoginDateField;
            }
            set {
                if ((this.StartLoginDateField.Equals(value) != true)) {
                    this.StartLoginDateField = value;
                    this.RaisePropertyChanged("StartLoginDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Url {
            get {
                return this.UrlField;
            }
            set {
                if ((object.ReferenceEquals(this.UrlField, value) != true)) {
                    this.UrlField = value;
                    this.RaisePropertyChanged("Url");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIDField, value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="dtLoginHistoryFilter", Namespace="http://schemas.datacontract.org/2004/07/SecureAccess.Domain.Models.ViewModels.His" +
        "tory")]
    [System.SerializableAttribute()]
    public partial class dtLoginHistoryFilter : ARSystemFrontEnd.SecureAccessService.DatatableAjaxModel {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ApplicationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EndLoginDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> StartLoginDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ApplicationID {
            get {
                return this.ApplicationIDField;
            }
            set {
                if ((this.ApplicationIDField.Equals(value) != true)) {
                    this.ApplicationIDField = value;
                    this.RaisePropertyChanged("ApplicationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EndLoginDate {
            get {
                return this.EndLoginDateField;
            }
            set {
                if ((this.EndLoginDateField.Equals(value) != true)) {
                    this.EndLoginDateField = value;
                    this.RaisePropertyChanged("EndLoginDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> StartLoginDate {
            get {
                return this.StartLoginDateField;
            }
            set {
                if ((this.StartLoginDateField.Equals(value) != true)) {
                    this.StartLoginDateField = value;
                    this.RaisePropertyChanged("StartLoginDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIDField, value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="dtActionHistoryFilter", Namespace="http://schemas.datacontract.org/2004/07/SecureAccess.Domain.Models.ViewModels.His" +
        "tory")]
    [System.SerializableAttribute()]
    public partial class dtActionHistoryFilter : ARSystemFrontEnd.SecureAccessService.DatatableAjaxModel {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ApplicationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EndPeriodDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ModuleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> StartPeriodDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ApplicationID {
            get {
                return this.ApplicationIDField;
            }
            set {
                if ((this.ApplicationIDField.Equals(value) != true)) {
                    this.ApplicationIDField = value;
                    this.RaisePropertyChanged("ApplicationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EndPeriodDate {
            get {
                return this.EndPeriodDateField;
            }
            set {
                if ((this.EndPeriodDateField.Equals(value) != true)) {
                    this.EndPeriodDateField = value;
                    this.RaisePropertyChanged("EndPeriodDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ModuleID {
            get {
                return this.ModuleIDField;
            }
            set {
                if ((this.ModuleIDField.Equals(value) != true)) {
                    this.ModuleIDField = value;
                    this.RaisePropertyChanged("ModuleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> StartPeriodDate {
            get {
                return this.StartPeriodDateField;
            }
            set {
                if ((this.StartPeriodDateField.Equals(value) != true)) {
                    this.StartPeriodDateField = value;
                    this.RaisePropertyChanged("StartPeriodDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIDField, value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="dtActionFilter", Namespace="http://schemas.datacontract.org/2004/07/SecureAccess.Domain.Models.ViewModels.Act" +
        "ion")]
    [System.SerializableAttribute()]
    public partial class dtActionFilter : ARSystemFrontEnd.SecureAccessService.DatatableAjaxModel {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ApplicationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MenuIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Action {
            get {
                return this.ActionField;
            }
            set {
                if ((object.ReferenceEquals(this.ActionField, value) != true)) {
                    this.ActionField = value;
                    this.RaisePropertyChanged("Action");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ApplicationID {
            get {
                return this.ApplicationIDField;
            }
            set {
                if ((this.ApplicationIDField.Equals(value) != true)) {
                    this.ApplicationIDField = value;
                    this.RaisePropertyChanged("ApplicationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MenuID {
            get {
                return this.MenuIDField;
            }
            set {
                if ((this.MenuIDField.Equals(value) != true)) {
                    this.MenuIDField = value;
                    this.RaisePropertyChanged("MenuID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DatatableColumn", Namespace="http://schemas.datacontract.org/2004/07/SecureAccess.Domain.Models.ViewModels.Dat" +
        "atable")]
    [System.SerializableAttribute()]
    public partial class DatatableColumn : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string dataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool orderableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ARSystemFrontEnd.SecureAccessService.DatatableSearch searchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool searchableField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string data {
            get {
                return this.dataField;
            }
            set {
                if ((object.ReferenceEquals(this.dataField, value) != true)) {
                    this.dataField = value;
                    this.RaisePropertyChanged("data");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool orderable {
            get {
                return this.orderableField;
            }
            set {
                if ((this.orderableField.Equals(value) != true)) {
                    this.orderableField = value;
                    this.RaisePropertyChanged("orderable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ARSystemFrontEnd.SecureAccessService.DatatableSearch search {
            get {
                return this.searchField;
            }
            set {
                if ((object.ReferenceEquals(this.searchField, value) != true)) {
                    this.searchField = value;
                    this.RaisePropertyChanged("search");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool searchable {
            get {
                return this.searchableField;
            }
            set {
                if ((this.searchableField.Equals(value) != true)) {
                    this.searchableField = value;
                    this.RaisePropertyChanged("searchable");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DatatableOrder", Namespace="http://schemas.datacontract.org/2004/07/SecureAccess.Domain.Models.ViewModels.Dat" +
        "atable")]
    [System.SerializableAttribute()]
    public partial class DatatableOrder : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int columnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string dirField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int column {
            get {
                return this.columnField;
            }
            set {
                if ((this.columnField.Equals(value) != true)) {
                    this.columnField = value;
                    this.RaisePropertyChanged("column");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string dir {
            get {
                return this.dirField;
            }
            set {
                if ((object.ReferenceEquals(this.dirField, value) != true)) {
                    this.dirField = value;
                    this.RaisePropertyChanged("dir");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SecureAccessService.IAccessService")]
    public interface IAccessService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccessService/GetApplicationToList", ReplyAction="http://tempuri.org/IAccessService/GetApplicationToListResponse")]
        ARSystemFrontEnd.SecureAccessService.mstApplication[] GetApplicationToList(string strToken, string strApplication, int intIsActive, string strOrderBy, int intRowSkip, int intPageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccessService/GetApplicationToList", ReplyAction="http://tempuri.org/IAccessService/GetApplicationToListResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstApplication[]> GetApplicationToListAsync(string strToken, string strApplication, int intIsActive, string strOrderBy, int intRowSkip, int intPageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccessService/GetSingleApplication", ReplyAction="http://tempuri.org/IAccessService/GetSingleApplicationResponse")]
        ARSystemFrontEnd.SecureAccessService.mstApplication GetSingleApplication(string token, int applicationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccessService/GetSingleApplication", ReplyAction="http://tempuri.org/IAccessService/GetSingleApplicationResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstApplication> GetSingleApplicationAsync(string token, int applicationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccessService/GetBannerToListFilteredByTitle", ReplyAction="http://tempuri.org/IAccessService/GetBannerToListFilteredByTitleResponse")]
        ARSystemFrontEnd.SecureAccessService.mstLoginBanner[] GetBannerToListFilteredByTitle(string strToken, string strTitle, bool isActive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccessService/GetBannerToListFilteredByTitle", ReplyAction="http://tempuri.org/IAccessService/GetBannerToListFilteredByTitleResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstLoginBanner[]> GetBannerToListFilteredByTitleAsync(string strToken, string strTitle, bool isActive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccessService/GetBannerToList", ReplyAction="http://tempuri.org/IAccessService/GetBannerToListResponse")]
        ARSystemFrontEnd.SecureAccessService.mstLoginBanner[] GetBannerToList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccessService/GetBannerToList", ReplyAction="http://tempuri.org/IAccessService/GetBannerToListResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstLoginBanner[]> GetBannerToListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccessService/GetBannerPageToList", ReplyAction="http://tempuri.org/IAccessService/GetBannerPageToListResponse")]
        ARSystemFrontEnd.SecureAccessService.mstLoginBanner[] GetBannerPageToList(string strToken, string strTitle, bool isActive, string strOrderBy, int intRowSkip, int intPageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccessService/GetBannerPageToList", ReplyAction="http://tempuri.org/IAccessService/GetBannerPageToListResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstLoginBanner[]> GetBannerPageToListAsync(string strToken, string strTitle, bool isActive, string strOrderBy, int intRowSkip, int intPageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccessService/GetExistBanner", ReplyAction="http://tempuri.org/IAccessService/GetExistBannerResponse")]
        bool GetExistBanner(string strTitle, bool update);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccessService/GetExistBanner", ReplyAction="http://tempuri.org/IAccessService/GetExistBannerResponse")]
        System.Threading.Tasks.Task<bool> GetExistBannerAsync(string strTitle, bool update);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccessService/GetSingleBanner", ReplyAction="http://tempuri.org/IAccessService/GetSingleBannerResponse")]
        ARSystemFrontEnd.SecureAccessService.mstLoginBanner GetSingleBanner(string strToken, int intBannerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccessService/GetSingleBanner", ReplyAction="http://tempuri.org/IAccessService/GetSingleBannerResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstLoginBanner> GetSingleBannerAsync(string strToken, int intBannerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccessService/CreateBanner", ReplyAction="http://tempuri.org/IAccessService/CreateBannerResponse")]
        ARSystemFrontEnd.SecureAccessService.mstLoginBanner CreateBanner(string strToken, ARSystemFrontEnd.SecureAccessService.mstLoginBanner Banner);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccessService/CreateBanner", ReplyAction="http://tempuri.org/IAccessService/CreateBannerResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstLoginBanner> CreateBannerAsync(string strToken, ARSystemFrontEnd.SecureAccessService.mstLoginBanner Banner);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccessService/UpdateBanner", ReplyAction="http://tempuri.org/IAccessService/UpdateBannerResponse")]
        ARSystemFrontEnd.SecureAccessService.mstLoginBanner UpdateBanner(string strToken, int intBannerID, ARSystemFrontEnd.SecureAccessService.mstLoginBanner Banner);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccessService/UpdateBanner", ReplyAction="http://tempuri.org/IAccessService/UpdateBannerResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstLoginBanner> UpdateBannerAsync(string strToken, int intBannerID, ARSystemFrontEnd.SecureAccessService.mstLoginBanner Banner);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccessService/GetMenuToListFilteredByUser", ReplyAction="http://tempuri.org/IAccessService/GetMenuToListFilteredByUserResponse")]
        ARSystemFrontEnd.SecureAccessService.vwUserMenu[] GetMenuToListFilteredByUser(string strToken, int intApplicationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccessService/GetMenuToListFilteredByUser", ReplyAction="http://tempuri.org/IAccessService/GetMenuToListFilteredByUserResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vwUserMenu[]> GetMenuToListFilteredByUserAsync(string strToken, int intApplicationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccessService/GetMenuToListFilteredByUserVendor", ReplyAction="http://tempuri.org/IAccessService/GetMenuToListFilteredByUserVendorResponse")]
        ARSystemFrontEnd.SecureAccessService.vwUserVendorMenu[] GetMenuToListFilteredByUserVendor(string strToken, int intApplicationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccessService/GetMenuToListFilteredByUserVendor", ReplyAction="http://tempuri.org/IAccessService/GetMenuToListFilteredByUserVendorResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vwUserVendorMenu[]> GetMenuToListFilteredByUserVendorAsync(string strToken, int intApplicationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccessService/GetHomeDashboardToListFilteredByUser", ReplyAction="http://tempuri.org/IAccessService/GetHomeDashboardToListFilteredByUserResponse")]
        ARSystemFrontEnd.SecureAccessService.vwUserHomeDashboard[] GetHomeDashboardToListFilteredByUser(string strToken, int intApplicationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccessService/GetHomeDashboardToListFilteredByUser", ReplyAction="http://tempuri.org/IAccessService/GetHomeDashboardToListFilteredByUserResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vwUserHomeDashboard[]> GetHomeDashboardToListFilteredByUserAsync(string strToken, int intApplicationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccessService/GetHomeDashboardToListFilteredByRole", ReplyAction="http://tempuri.org/IAccessService/GetHomeDashboardToListFilteredByRoleResponse")]
        ARSystemFrontEnd.SecureAccessService.vwRoleHomeDashboard[] GetHomeDashboardToListFilteredByRole(string strToken, int intApplicationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccessService/GetHomeDashboardToListFilteredByRole", ReplyAction="http://tempuri.org/IAccessService/GetHomeDashboardToListFilteredByRoleResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vwRoleHomeDashboard[]> GetHomeDashboardToListFilteredByRoleAsync(string strToken, int intApplicationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccessService/CreateUserHomeDashboard", ReplyAction="http://tempuri.org/IAccessService/CreateUserHomeDashboardResponse")]
        ARSystemFrontEnd.SecureAccessService.vmUserHomeDashboard CreateUserHomeDashboard(string strToken, ARSystemFrontEnd.SecureAccessService.vmUserHomeDashboard userHomeDashboard);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccessService/CreateUserHomeDashboard", ReplyAction="http://tempuri.org/IAccessService/CreateUserHomeDashboardResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vmUserHomeDashboard> CreateUserHomeDashboardAsync(string strToken, ARSystemFrontEnd.SecureAccessService.vmUserHomeDashboard userHomeDashboard);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccessService/CreateMenu", ReplyAction="http://tempuri.org/IAccessService/CreateMenuResponse")]
        ARSystemFrontEnd.SecureAccessService.mstMenu CreateMenu(string strToken, ARSystemFrontEnd.SecureAccessService.mstMenu menu);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccessService/CreateMenu", ReplyAction="http://tempuri.org/IAccessService/CreateMenuResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstMenu> CreateMenuAsync(string strToken, ARSystemFrontEnd.SecureAccessService.mstMenu menu);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccessService/UpdateMenu", ReplyAction="http://tempuri.org/IAccessService/UpdateMenuResponse")]
        ARSystemFrontEnd.SecureAccessService.mstMenu UpdateMenu(string strToken, int intMenuID, ARSystemFrontEnd.SecureAccessService.mstMenu menu);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccessService/UpdateMenu", ReplyAction="http://tempuri.org/IAccessService/UpdateMenuResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstMenu> UpdateMenuAsync(string strToken, int intMenuID, ARSystemFrontEnd.SecureAccessService.mstMenu menu);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccessService/UpdateMenuApplyFromOtherRole", ReplyAction="http://tempuri.org/IAccessService/UpdateMenuApplyFromOtherRoleResponse")]
        ARSystemFrontEnd.SecureAccessService.mstMenu UpdateMenuApplyFromOtherRole(string strToken, int intApplicationID, int intRoleID, int intRoleIDSource);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccessService/UpdateMenuApplyFromOtherRole", ReplyAction="http://tempuri.org/IAccessService/UpdateMenuApplyFromOtherRoleResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstMenu> UpdateMenuApplyFromOtherRoleAsync(string strToken, int intApplicationID, int intRoleID, int intRoleIDSource);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccessService/DeleteMenu", ReplyAction="http://tempuri.org/IAccessService/DeleteMenuResponse")]
        ARSystemFrontEnd.SecureAccessService.mstMenu DeleteMenu(string strToken, int intMenuID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccessService/DeleteMenu", ReplyAction="http://tempuri.org/IAccessService/DeleteMenuResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstMenu> DeleteMenuAsync(string strToken, int intMenuID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccessService/GetIconCount", ReplyAction="http://tempuri.org/IAccessService/GetIconCountResponse")]
        int GetIconCount(string strToken, string strSearch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccessService/GetIconCount", ReplyAction="http://tempuri.org/IAccessService/GetIconCountResponse")]
        System.Threading.Tasks.Task<int> GetIconCountAsync(string strToken, string strSearch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccessService/GetIconToList", ReplyAction="http://tempuri.org/IAccessService/GetIconToListResponse")]
        ARSystemFrontEnd.SecureAccessService.mstIcon[] GetIconToList(string strToken, string strSearch, string strOrderBy, int intRowSkip, int intPageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccessService/GetIconToList", ReplyAction="http://tempuri.org/IAccessService/GetIconToListResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstIcon[]> GetIconToListAsync(string strToken, string strSearch, string strOrderBy, int intRowSkip, int intPageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccessService/GetTaskToDoToListFilteredByUser", ReplyAction="http://tempuri.org/IAccessService/GetTaskToDoToListFilteredByUserResponse")]
        ARSystemFrontEnd.SecureAccessService.vwUserTaskToDo[] GetTaskToDoToListFilteredByUser(string strToken, int intApplicationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccessService/GetTaskToDoToListFilteredByUser", ReplyAction="http://tempuri.org/IAccessService/GetTaskToDoToListFilteredByUserResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vwUserTaskToDo[]> GetTaskToDoToListFilteredByUserAsync(string strToken, int intApplicationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccessService/GetNotificationListFilteredByUser", ReplyAction="http://tempuri.org/IAccessService/GetNotificationListFilteredByUserResponse")]
        ARSystemFrontEnd.SecureAccessService.vwUserNotification[] GetNotificationListFilteredByUser(string strToken, int intApplicationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccessService/GetNotificationListFilteredByUser", ReplyAction="http://tempuri.org/IAccessService/GetNotificationListFilteredByUserResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vwUserNotification[]> GetNotificationListFilteredByUserAsync(string strToken, int intApplicationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccessService/GetConsoleCount", ReplyAction="http://tempuri.org/IAccessService/GetConsoleCountResponse")]
        int GetConsoleCount(string strToken, string strConsole, int intIsActive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccessService/GetConsoleCount", ReplyAction="http://tempuri.org/IAccessService/GetConsoleCountResponse")]
        System.Threading.Tasks.Task<int> GetConsoleCountAsync(string strToken, string strConsole, int intIsActive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccessService/GetConsoleToList", ReplyAction="http://tempuri.org/IAccessService/GetConsoleToListResponse")]
        ARSystemFrontEnd.SecureAccessService.vwConsoleScheduler[] GetConsoleToList(string strToken, string strConsole, int intIsActive, string strOrderBy, int intRowSkip, int intPageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccessService/GetConsoleToList", ReplyAction="http://tempuri.org/IAccessService/GetConsoleToListResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vwConsoleScheduler[]> GetConsoleToListAsync(string strToken, string strConsole, int intIsActive, string strOrderBy, int intRowSkip, int intPageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccessService/GetConsoleLogCount", ReplyAction="http://tempuri.org/IAccessService/GetConsoleLogCountResponse")]
        int GetConsoleLogCount(string strToken, int intScheduleID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccessService/GetConsoleLogCount", ReplyAction="http://tempuri.org/IAccessService/GetConsoleLogCountResponse")]
        System.Threading.Tasks.Task<int> GetConsoleLogCountAsync(string strToken, int intScheduleID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccessService/GetConsoleLogToList", ReplyAction="http://tempuri.org/IAccessService/GetConsoleLogToListResponse")]
        ARSystemFrontEnd.SecureAccessService.LogSchedule[] GetConsoleLogToList(string strToken, int intScheduleID, string strOrderBy, int intRowSkip, int intPageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccessService/GetConsoleLogToList", ReplyAction="http://tempuri.org/IAccessService/GetConsoleLogToListResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.LogSchedule[]> GetConsoleLogToListAsync(string strToken, int intScheduleID, string strOrderBy, int intRowSkip, int intPageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccessService/CreateConsole", ReplyAction="http://tempuri.org/IAccessService/CreateConsoleResponse")]
        ARSystemFrontEnd.SecureAccessService.vmCreateConsole CreateConsole(string strToken, ARSystemFrontEnd.SecureAccessService.vmCreateConsole data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccessService/CreateConsole", ReplyAction="http://tempuri.org/IAccessService/CreateConsoleResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vmCreateConsole> CreateConsoleAsync(string strToken, ARSystemFrontEnd.SecureAccessService.vmCreateConsole data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccessService/GetConsoleWeeklyStats", ReplyAction="http://tempuri.org/IAccessService/GetConsoleWeeklyStatsResponse")]
        ARSystemFrontEnd.SecureAccessService.vmConsoleDashoard GetConsoleWeeklyStats(string strToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccessService/GetConsoleWeeklyStats", ReplyAction="http://tempuri.org/IAccessService/GetConsoleWeeklyStatsResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vmConsoleDashoard> GetConsoleWeeklyStatsAsync(string strToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccessService/GetMenuToListFilteredByUserCustomer", ReplyAction="http://tempuri.org/IAccessService/GetMenuToListFilteredByUserCustomerResponse")]
        ARSystemFrontEnd.SecureAccessService.vwUserCustomerMenu[] GetMenuToListFilteredByUserCustomer(string strToken, int intApplicationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccessService/GetMenuToListFilteredByUserCustomer", ReplyAction="http://tempuri.org/IAccessService/GetMenuToListFilteredByUserCustomerResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vwUserCustomerMenu[]> GetMenuToListFilteredByUserCustomerAsync(string strToken, int intApplicationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccessService/CreateHitLog", ReplyAction="http://tempuri.org/IAccessService/CreateHitLogResponse")]
        ARSystemFrontEnd.SecureAccessService.trxHitCounter CreateHitLog(string strToken, int applicationID, string strURL);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccessService/CreateHitLog", ReplyAction="http://tempuri.org/IAccessService/CreateHitLogResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.trxHitCounter> CreateHitLogAsync(string strToken, int applicationID, string strURL);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccessService/GetHitLogList", ReplyAction="http://tempuri.org/IAccessService/GetHitLogListResponse")]
        ARSystemFrontEnd.SecureAccessService.vwHitCounter[] GetHitLogList(string strToken, int applicationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccessService/GetHitLogList", ReplyAction="http://tempuri.org/IAccessService/GetHitLogListResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vwHitCounter[]> GetHitLogListAsync(string strToken, int applicationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccessService/GetHitLogOverviewList", ReplyAction="http://tempuri.org/IAccessService/GetHitLogOverviewListResponse")]
        ARSystemFrontEnd.SecureAccessService.vwHitCounterOverview[] GetHitLogOverviewList(string strToken, int applicationID, int year);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccessService/GetHitLogOverviewList", ReplyAction="http://tempuri.org/IAccessService/GetHitLogOverviewListResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vwHitCounterOverview[]> GetHitLogOverviewListAsync(string strToken, int applicationID, int year);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccessService/GetHitLogPercentage", ReplyAction="http://tempuri.org/IAccessService/GetHitLogPercentageResponse")]
        ARSystemFrontEnd.SecureAccessService.vmHitCounterPercentage[] GetHitLogPercentage(string strToken, int applicationID, int year);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccessService/GetHitLogPercentage", ReplyAction="http://tempuri.org/IAccessService/GetHitLogPercentageResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vmHitCounterPercentage[]> GetHitLogPercentageAsync(string strToken, int applicationID, int year);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccessService/GetNonUtilizedPage", ReplyAction="http://tempuri.org/IAccessService/GetNonUtilizedPageResponse")]
        ARSystemFrontEnd.SecureAccessService.vwHitCounterNonUtilized[] GetNonUtilizedPage(string strToken, int applicationID, int year);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccessService/GetNonUtilizedPage", ReplyAction="http://tempuri.org/IAccessService/GetNonUtilizedPageResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vwHitCounterNonUtilized[]> GetNonUtilizedPageAsync(string strToken, int applicationID, int year);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccessService/GetPageList", ReplyAction="http://tempuri.org/IAccessService/GetPageListResponse")]
        ARSystemFrontEnd.SecureAccessService.vwHitCounterPageList[] GetPageList(string strToken, ARSystemFrontEnd.SecureAccessService.vwHitCounterPageList data, string strOrderBy, int intRowSkip, int intPageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccessService/GetPageList", ReplyAction="http://tempuri.org/IAccessService/GetPageListResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vwHitCounterPageList[]> GetPageListAsync(string strToken, ARSystemFrontEnd.SecureAccessService.vwHitCounterPageList data, string strOrderBy, int intRowSkip, int intPageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccessService/GetPageCount", ReplyAction="http://tempuri.org/IAccessService/GetPageCountResponse")]
        int GetPageCount(string strToken, ARSystemFrontEnd.SecureAccessService.vwHitCounterPageList data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccessService/GetPageCount", ReplyAction="http://tempuri.org/IAccessService/GetPageCountResponse")]
        System.Threading.Tasks.Task<int> GetPageCountAsync(string strToken, ARSystemFrontEnd.SecureAccessService.vwHitCounterPageList data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccessService/GetListUserAction", ReplyAction="http://tempuri.org/IAccessService/GetListUserActionResponse")]
        ARSystemFrontEnd.SecureAccessService.vwUserActionList[] GetListUserAction(string strToken, string ActionToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccessService/GetListUserAction", ReplyAction="http://tempuri.org/IAccessService/GetListUserActionResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vwUserActionList[]> GetListUserActionAsync(string strToken, string ActionToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccessService/GetMenuToListFilteredByUserNew", ReplyAction="http://tempuri.org/IAccessService/GetMenuToListFilteredByUserNewResponse")]
        ARSystemFrontEnd.SecureAccessService.vwUserMenuNew[] GetMenuToListFilteredByUserNew(string token, int applicationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccessService/GetMenuToListFilteredByUserNew", ReplyAction="http://tempuri.org/IAccessService/GetMenuToListFilteredByUserNewResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vwUserMenuNew[]> GetMenuToListFilteredByUserNewAsync(string token, int applicationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccessService/GetMenuToListFilteredByUserVendorNew", ReplyAction="http://tempuri.org/IAccessService/GetMenuToListFilteredByUserVendorNewResponse")]
        ARSystemFrontEnd.SecureAccessService.vwUserVendorMenuNew[] GetMenuToListFilteredByUserVendorNew(string token, int applicationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccessService/GetMenuToListFilteredByUserVendorNew", ReplyAction="http://tempuri.org/IAccessService/GetMenuToListFilteredByUserVendorNewResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vwUserVendorMenuNew[]> GetMenuToListFilteredByUserVendorNewAsync(string token, int applicationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccessService/GetMenuToListFilteredByUserCustomerNew", ReplyAction="http://tempuri.org/IAccessService/GetMenuToListFilteredByUserCustomerNewResponse")]
        ARSystemFrontEnd.SecureAccessService.vwUserCustomerMenuNew[] GetMenuToListFilteredByUserCustomerNew(string token, int applicationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccessService/GetMenuToListFilteredByUserCustomerNew", ReplyAction="http://tempuri.org/IAccessService/GetMenuToListFilteredByUserCustomerNewResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vwUserCustomerMenuNew[]> GetMenuToListFilteredByUserCustomerNewAsync(string token, int applicationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccessService/GetUrlList", ReplyAction="http://tempuri.org/IAccessService/GetUrlListResponse")]
        ARSystemFrontEnd.SecureAccessService.vwHitCounterPageList[] GetUrlList(string strToken, int ApplicationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccessService/GetUrlList", ReplyAction="http://tempuri.org/IAccessService/GetUrlListResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vwHitCounterPageList[]> GetUrlListAsync(string strToken, int ApplicationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccessService/CreateAuditTrail", ReplyAction="http://tempuri.org/IAccessService/CreateAuditTrailResponse")]
        ARSystemFrontEnd.SecureAccessService.trxAuditTrail CreateAuditTrail(string strToken, ARSystemFrontEnd.SecureAccessService.vmAuditTrail auditTrail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccessService/CreateAuditTrail", ReplyAction="http://tempuri.org/IAccessService/CreateAuditTrailResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.trxAuditTrail> CreateAuditTrailAsync(string strToken, ARSystemFrontEnd.SecureAccessService.vmAuditTrail auditTrail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccessService/GetTaskToDoToListFilteredByUserNew", ReplyAction="http://tempuri.org/IAccessService/GetTaskToDoToListFilteredByUserNewResponse")]
        ARSystemFrontEnd.SecureAccessService.vwUserTaskToDoNew[] GetTaskToDoToListFilteredByUserNew(string strToken, int intApplicationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccessService/GetTaskToDoToListFilteredByUserNew", ReplyAction="http://tempuri.org/IAccessService/GetTaskToDoToListFilteredByUserNewResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vwUserTaskToDoNew[]> GetTaskToDoToListFilteredByUserNewAsync(string strToken, int intApplicationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccessService/GetAuditTrailModuleList", ReplyAction="http://tempuri.org/IAccessService/GetAuditTrailModuleListResponse")]
        ARSystemFrontEnd.SecureAccessService.mstAuditTrailModule[] GetAuditTrailModuleList(string strToken, int intApplicationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccessService/GetAuditTrailModuleList", ReplyAction="http://tempuri.org/IAccessService/GetAuditTrailModuleListResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstAuditTrailModule[]> GetAuditTrailModuleListAsync(string strToken, int intApplicationID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAccessServiceChannel : ARSystemFrontEnd.SecureAccessService.IAccessService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AccessServiceClient : System.ServiceModel.ClientBase<ARSystemFrontEnd.SecureAccessService.IAccessService>, ARSystemFrontEnd.SecureAccessService.IAccessService {
        
        public AccessServiceClient() {
        }
        
        public AccessServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AccessServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AccessServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AccessServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ARSystemFrontEnd.SecureAccessService.mstApplication[] GetApplicationToList(string strToken, string strApplication, int intIsActive, string strOrderBy, int intRowSkip, int intPageSize) {
            return base.Channel.GetApplicationToList(strToken, strApplication, intIsActive, strOrderBy, intRowSkip, intPageSize);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstApplication[]> GetApplicationToListAsync(string strToken, string strApplication, int intIsActive, string strOrderBy, int intRowSkip, int intPageSize) {
            return base.Channel.GetApplicationToListAsync(strToken, strApplication, intIsActive, strOrderBy, intRowSkip, intPageSize);
        }
        
        public ARSystemFrontEnd.SecureAccessService.mstApplication GetSingleApplication(string token, int applicationID) {
            return base.Channel.GetSingleApplication(token, applicationID);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstApplication> GetSingleApplicationAsync(string token, int applicationID) {
            return base.Channel.GetSingleApplicationAsync(token, applicationID);
        }
        
        public ARSystemFrontEnd.SecureAccessService.mstLoginBanner[] GetBannerToListFilteredByTitle(string strToken, string strTitle, bool isActive) {
            return base.Channel.GetBannerToListFilteredByTitle(strToken, strTitle, isActive);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstLoginBanner[]> GetBannerToListFilteredByTitleAsync(string strToken, string strTitle, bool isActive) {
            return base.Channel.GetBannerToListFilteredByTitleAsync(strToken, strTitle, isActive);
        }
        
        public ARSystemFrontEnd.SecureAccessService.mstLoginBanner[] GetBannerToList() {
            return base.Channel.GetBannerToList();
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstLoginBanner[]> GetBannerToListAsync() {
            return base.Channel.GetBannerToListAsync();
        }
        
        public ARSystemFrontEnd.SecureAccessService.mstLoginBanner[] GetBannerPageToList(string strToken, string strTitle, bool isActive, string strOrderBy, int intRowSkip, int intPageSize) {
            return base.Channel.GetBannerPageToList(strToken, strTitle, isActive, strOrderBy, intRowSkip, intPageSize);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstLoginBanner[]> GetBannerPageToListAsync(string strToken, string strTitle, bool isActive, string strOrderBy, int intRowSkip, int intPageSize) {
            return base.Channel.GetBannerPageToListAsync(strToken, strTitle, isActive, strOrderBy, intRowSkip, intPageSize);
        }
        
        public bool GetExistBanner(string strTitle, bool update) {
            return base.Channel.GetExistBanner(strTitle, update);
        }
        
        public System.Threading.Tasks.Task<bool> GetExistBannerAsync(string strTitle, bool update) {
            return base.Channel.GetExistBannerAsync(strTitle, update);
        }
        
        public ARSystemFrontEnd.SecureAccessService.mstLoginBanner GetSingleBanner(string strToken, int intBannerID) {
            return base.Channel.GetSingleBanner(strToken, intBannerID);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstLoginBanner> GetSingleBannerAsync(string strToken, int intBannerID) {
            return base.Channel.GetSingleBannerAsync(strToken, intBannerID);
        }
        
        public ARSystemFrontEnd.SecureAccessService.mstLoginBanner CreateBanner(string strToken, ARSystemFrontEnd.SecureAccessService.mstLoginBanner Banner) {
            return base.Channel.CreateBanner(strToken, Banner);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstLoginBanner> CreateBannerAsync(string strToken, ARSystemFrontEnd.SecureAccessService.mstLoginBanner Banner) {
            return base.Channel.CreateBannerAsync(strToken, Banner);
        }
        
        public ARSystemFrontEnd.SecureAccessService.mstLoginBanner UpdateBanner(string strToken, int intBannerID, ARSystemFrontEnd.SecureAccessService.mstLoginBanner Banner) {
            return base.Channel.UpdateBanner(strToken, intBannerID, Banner);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstLoginBanner> UpdateBannerAsync(string strToken, int intBannerID, ARSystemFrontEnd.SecureAccessService.mstLoginBanner Banner) {
            return base.Channel.UpdateBannerAsync(strToken, intBannerID, Banner);
        }
        
        public ARSystemFrontEnd.SecureAccessService.vwUserMenu[] GetMenuToListFilteredByUser(string strToken, int intApplicationID) {
            return base.Channel.GetMenuToListFilteredByUser(strToken, intApplicationID);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vwUserMenu[]> GetMenuToListFilteredByUserAsync(string strToken, int intApplicationID) {
            return base.Channel.GetMenuToListFilteredByUserAsync(strToken, intApplicationID);
        }
        
        public ARSystemFrontEnd.SecureAccessService.vwUserVendorMenu[] GetMenuToListFilteredByUserVendor(string strToken, int intApplicationID) {
            return base.Channel.GetMenuToListFilteredByUserVendor(strToken, intApplicationID);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vwUserVendorMenu[]> GetMenuToListFilteredByUserVendorAsync(string strToken, int intApplicationID) {
            return base.Channel.GetMenuToListFilteredByUserVendorAsync(strToken, intApplicationID);
        }
        
        public ARSystemFrontEnd.SecureAccessService.vwUserHomeDashboard[] GetHomeDashboardToListFilteredByUser(string strToken, int intApplicationID) {
            return base.Channel.GetHomeDashboardToListFilteredByUser(strToken, intApplicationID);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vwUserHomeDashboard[]> GetHomeDashboardToListFilteredByUserAsync(string strToken, int intApplicationID) {
            return base.Channel.GetHomeDashboardToListFilteredByUserAsync(strToken, intApplicationID);
        }
        
        public ARSystemFrontEnd.SecureAccessService.vwRoleHomeDashboard[] GetHomeDashboardToListFilteredByRole(string strToken, int intApplicationID) {
            return base.Channel.GetHomeDashboardToListFilteredByRole(strToken, intApplicationID);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vwRoleHomeDashboard[]> GetHomeDashboardToListFilteredByRoleAsync(string strToken, int intApplicationID) {
            return base.Channel.GetHomeDashboardToListFilteredByRoleAsync(strToken, intApplicationID);
        }
        
        public ARSystemFrontEnd.SecureAccessService.vmUserHomeDashboard CreateUserHomeDashboard(string strToken, ARSystemFrontEnd.SecureAccessService.vmUserHomeDashboard userHomeDashboard) {
            return base.Channel.CreateUserHomeDashboard(strToken, userHomeDashboard);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vmUserHomeDashboard> CreateUserHomeDashboardAsync(string strToken, ARSystemFrontEnd.SecureAccessService.vmUserHomeDashboard userHomeDashboard) {
            return base.Channel.CreateUserHomeDashboardAsync(strToken, userHomeDashboard);
        }
        
        public ARSystemFrontEnd.SecureAccessService.mstMenu CreateMenu(string strToken, ARSystemFrontEnd.SecureAccessService.mstMenu menu) {
            return base.Channel.CreateMenu(strToken, menu);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstMenu> CreateMenuAsync(string strToken, ARSystemFrontEnd.SecureAccessService.mstMenu menu) {
            return base.Channel.CreateMenuAsync(strToken, menu);
        }
        
        public ARSystemFrontEnd.SecureAccessService.mstMenu UpdateMenu(string strToken, int intMenuID, ARSystemFrontEnd.SecureAccessService.mstMenu menu) {
            return base.Channel.UpdateMenu(strToken, intMenuID, menu);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstMenu> UpdateMenuAsync(string strToken, int intMenuID, ARSystemFrontEnd.SecureAccessService.mstMenu menu) {
            return base.Channel.UpdateMenuAsync(strToken, intMenuID, menu);
        }
        
        public ARSystemFrontEnd.SecureAccessService.mstMenu UpdateMenuApplyFromOtherRole(string strToken, int intApplicationID, int intRoleID, int intRoleIDSource) {
            return base.Channel.UpdateMenuApplyFromOtherRole(strToken, intApplicationID, intRoleID, intRoleIDSource);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstMenu> UpdateMenuApplyFromOtherRoleAsync(string strToken, int intApplicationID, int intRoleID, int intRoleIDSource) {
            return base.Channel.UpdateMenuApplyFromOtherRoleAsync(strToken, intApplicationID, intRoleID, intRoleIDSource);
        }
        
        public ARSystemFrontEnd.SecureAccessService.mstMenu DeleteMenu(string strToken, int intMenuID) {
            return base.Channel.DeleteMenu(strToken, intMenuID);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstMenu> DeleteMenuAsync(string strToken, int intMenuID) {
            return base.Channel.DeleteMenuAsync(strToken, intMenuID);
        }
        
        public int GetIconCount(string strToken, string strSearch) {
            return base.Channel.GetIconCount(strToken, strSearch);
        }
        
        public System.Threading.Tasks.Task<int> GetIconCountAsync(string strToken, string strSearch) {
            return base.Channel.GetIconCountAsync(strToken, strSearch);
        }
        
        public ARSystemFrontEnd.SecureAccessService.mstIcon[] GetIconToList(string strToken, string strSearch, string strOrderBy, int intRowSkip, int intPageSize) {
            return base.Channel.GetIconToList(strToken, strSearch, strOrderBy, intRowSkip, intPageSize);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstIcon[]> GetIconToListAsync(string strToken, string strSearch, string strOrderBy, int intRowSkip, int intPageSize) {
            return base.Channel.GetIconToListAsync(strToken, strSearch, strOrderBy, intRowSkip, intPageSize);
        }
        
        public ARSystemFrontEnd.SecureAccessService.vwUserTaskToDo[] GetTaskToDoToListFilteredByUser(string strToken, int intApplicationID) {
            return base.Channel.GetTaskToDoToListFilteredByUser(strToken, intApplicationID);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vwUserTaskToDo[]> GetTaskToDoToListFilteredByUserAsync(string strToken, int intApplicationID) {
            return base.Channel.GetTaskToDoToListFilteredByUserAsync(strToken, intApplicationID);
        }
        
        public ARSystemFrontEnd.SecureAccessService.vwUserNotification[] GetNotificationListFilteredByUser(string strToken, int intApplicationID) {
            return base.Channel.GetNotificationListFilteredByUser(strToken, intApplicationID);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vwUserNotification[]> GetNotificationListFilteredByUserAsync(string strToken, int intApplicationID) {
            return base.Channel.GetNotificationListFilteredByUserAsync(strToken, intApplicationID);
        }
        
        public int GetConsoleCount(string strToken, string strConsole, int intIsActive) {
            return base.Channel.GetConsoleCount(strToken, strConsole, intIsActive);
        }
        
        public System.Threading.Tasks.Task<int> GetConsoleCountAsync(string strToken, string strConsole, int intIsActive) {
            return base.Channel.GetConsoleCountAsync(strToken, strConsole, intIsActive);
        }
        
        public ARSystemFrontEnd.SecureAccessService.vwConsoleScheduler[] GetConsoleToList(string strToken, string strConsole, int intIsActive, string strOrderBy, int intRowSkip, int intPageSize) {
            return base.Channel.GetConsoleToList(strToken, strConsole, intIsActive, strOrderBy, intRowSkip, intPageSize);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vwConsoleScheduler[]> GetConsoleToListAsync(string strToken, string strConsole, int intIsActive, string strOrderBy, int intRowSkip, int intPageSize) {
            return base.Channel.GetConsoleToListAsync(strToken, strConsole, intIsActive, strOrderBy, intRowSkip, intPageSize);
        }
        
        public int GetConsoleLogCount(string strToken, int intScheduleID) {
            return base.Channel.GetConsoleLogCount(strToken, intScheduleID);
        }
        
        public System.Threading.Tasks.Task<int> GetConsoleLogCountAsync(string strToken, int intScheduleID) {
            return base.Channel.GetConsoleLogCountAsync(strToken, intScheduleID);
        }
        
        public ARSystemFrontEnd.SecureAccessService.LogSchedule[] GetConsoleLogToList(string strToken, int intScheduleID, string strOrderBy, int intRowSkip, int intPageSize) {
            return base.Channel.GetConsoleLogToList(strToken, intScheduleID, strOrderBy, intRowSkip, intPageSize);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.LogSchedule[]> GetConsoleLogToListAsync(string strToken, int intScheduleID, string strOrderBy, int intRowSkip, int intPageSize) {
            return base.Channel.GetConsoleLogToListAsync(strToken, intScheduleID, strOrderBy, intRowSkip, intPageSize);
        }
        
        public ARSystemFrontEnd.SecureAccessService.vmCreateConsole CreateConsole(string strToken, ARSystemFrontEnd.SecureAccessService.vmCreateConsole data) {
            return base.Channel.CreateConsole(strToken, data);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vmCreateConsole> CreateConsoleAsync(string strToken, ARSystemFrontEnd.SecureAccessService.vmCreateConsole data) {
            return base.Channel.CreateConsoleAsync(strToken, data);
        }
        
        public ARSystemFrontEnd.SecureAccessService.vmConsoleDashoard GetConsoleWeeklyStats(string strToken) {
            return base.Channel.GetConsoleWeeklyStats(strToken);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vmConsoleDashoard> GetConsoleWeeklyStatsAsync(string strToken) {
            return base.Channel.GetConsoleWeeklyStatsAsync(strToken);
        }
        
        public ARSystemFrontEnd.SecureAccessService.vwUserCustomerMenu[] GetMenuToListFilteredByUserCustomer(string strToken, int intApplicationID) {
            return base.Channel.GetMenuToListFilteredByUserCustomer(strToken, intApplicationID);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vwUserCustomerMenu[]> GetMenuToListFilteredByUserCustomerAsync(string strToken, int intApplicationID) {
            return base.Channel.GetMenuToListFilteredByUserCustomerAsync(strToken, intApplicationID);
        }
        
        public ARSystemFrontEnd.SecureAccessService.trxHitCounter CreateHitLog(string strToken, int applicationID, string strURL) {
            return base.Channel.CreateHitLog(strToken, applicationID, strURL);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.trxHitCounter> CreateHitLogAsync(string strToken, int applicationID, string strURL) {
            return base.Channel.CreateHitLogAsync(strToken, applicationID, strURL);
        }
        
        public ARSystemFrontEnd.SecureAccessService.vwHitCounter[] GetHitLogList(string strToken, int applicationID) {
            return base.Channel.GetHitLogList(strToken, applicationID);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vwHitCounter[]> GetHitLogListAsync(string strToken, int applicationID) {
            return base.Channel.GetHitLogListAsync(strToken, applicationID);
        }
        
        public ARSystemFrontEnd.SecureAccessService.vwHitCounterOverview[] GetHitLogOverviewList(string strToken, int applicationID, int year) {
            return base.Channel.GetHitLogOverviewList(strToken, applicationID, year);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vwHitCounterOverview[]> GetHitLogOverviewListAsync(string strToken, int applicationID, int year) {
            return base.Channel.GetHitLogOverviewListAsync(strToken, applicationID, year);
        }
        
        public ARSystemFrontEnd.SecureAccessService.vmHitCounterPercentage[] GetHitLogPercentage(string strToken, int applicationID, int year) {
            return base.Channel.GetHitLogPercentage(strToken, applicationID, year);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vmHitCounterPercentage[]> GetHitLogPercentageAsync(string strToken, int applicationID, int year) {
            return base.Channel.GetHitLogPercentageAsync(strToken, applicationID, year);
        }
        
        public ARSystemFrontEnd.SecureAccessService.vwHitCounterNonUtilized[] GetNonUtilizedPage(string strToken, int applicationID, int year) {
            return base.Channel.GetNonUtilizedPage(strToken, applicationID, year);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vwHitCounterNonUtilized[]> GetNonUtilizedPageAsync(string strToken, int applicationID, int year) {
            return base.Channel.GetNonUtilizedPageAsync(strToken, applicationID, year);
        }
        
        public ARSystemFrontEnd.SecureAccessService.vwHitCounterPageList[] GetPageList(string strToken, ARSystemFrontEnd.SecureAccessService.vwHitCounterPageList data, string strOrderBy, int intRowSkip, int intPageSize) {
            return base.Channel.GetPageList(strToken, data, strOrderBy, intRowSkip, intPageSize);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vwHitCounterPageList[]> GetPageListAsync(string strToken, ARSystemFrontEnd.SecureAccessService.vwHitCounterPageList data, string strOrderBy, int intRowSkip, int intPageSize) {
            return base.Channel.GetPageListAsync(strToken, data, strOrderBy, intRowSkip, intPageSize);
        }
        
        public int GetPageCount(string strToken, ARSystemFrontEnd.SecureAccessService.vwHitCounterPageList data) {
            return base.Channel.GetPageCount(strToken, data);
        }
        
        public System.Threading.Tasks.Task<int> GetPageCountAsync(string strToken, ARSystemFrontEnd.SecureAccessService.vwHitCounterPageList data) {
            return base.Channel.GetPageCountAsync(strToken, data);
        }
        
        public ARSystemFrontEnd.SecureAccessService.vwUserActionList[] GetListUserAction(string strToken, string ActionToken) {
            return base.Channel.GetListUserAction(strToken, ActionToken);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vwUserActionList[]> GetListUserActionAsync(string strToken, string ActionToken) {
            return base.Channel.GetListUserActionAsync(strToken, ActionToken);
        }
        
        public ARSystemFrontEnd.SecureAccessService.vwUserMenuNew[] GetMenuToListFilteredByUserNew(string token, int applicationID) {
            return base.Channel.GetMenuToListFilteredByUserNew(token, applicationID);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vwUserMenuNew[]> GetMenuToListFilteredByUserNewAsync(string token, int applicationID) {
            return base.Channel.GetMenuToListFilteredByUserNewAsync(token, applicationID);
        }
        
        public ARSystemFrontEnd.SecureAccessService.vwUserVendorMenuNew[] GetMenuToListFilteredByUserVendorNew(string token, int applicationID) {
            return base.Channel.GetMenuToListFilteredByUserVendorNew(token, applicationID);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vwUserVendorMenuNew[]> GetMenuToListFilteredByUserVendorNewAsync(string token, int applicationID) {
            return base.Channel.GetMenuToListFilteredByUserVendorNewAsync(token, applicationID);
        }
        
        public ARSystemFrontEnd.SecureAccessService.vwUserCustomerMenuNew[] GetMenuToListFilteredByUserCustomerNew(string token, int applicationID) {
            return base.Channel.GetMenuToListFilteredByUserCustomerNew(token, applicationID);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vwUserCustomerMenuNew[]> GetMenuToListFilteredByUserCustomerNewAsync(string token, int applicationID) {
            return base.Channel.GetMenuToListFilteredByUserCustomerNewAsync(token, applicationID);
        }
        
        public ARSystemFrontEnd.SecureAccessService.vwHitCounterPageList[] GetUrlList(string strToken, int ApplicationID) {
            return base.Channel.GetUrlList(strToken, ApplicationID);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vwHitCounterPageList[]> GetUrlListAsync(string strToken, int ApplicationID) {
            return base.Channel.GetUrlListAsync(strToken, ApplicationID);
        }
        
        public ARSystemFrontEnd.SecureAccessService.trxAuditTrail CreateAuditTrail(string strToken, ARSystemFrontEnd.SecureAccessService.vmAuditTrail auditTrail) {
            return base.Channel.CreateAuditTrail(strToken, auditTrail);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.trxAuditTrail> CreateAuditTrailAsync(string strToken, ARSystemFrontEnd.SecureAccessService.vmAuditTrail auditTrail) {
            return base.Channel.CreateAuditTrailAsync(strToken, auditTrail);
        }
        
        public ARSystemFrontEnd.SecureAccessService.vwUserTaskToDoNew[] GetTaskToDoToListFilteredByUserNew(string strToken, int intApplicationID) {
            return base.Channel.GetTaskToDoToListFilteredByUserNew(strToken, intApplicationID);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vwUserTaskToDoNew[]> GetTaskToDoToListFilteredByUserNewAsync(string strToken, int intApplicationID) {
            return base.Channel.GetTaskToDoToListFilteredByUserNewAsync(strToken, intApplicationID);
        }
        
        public ARSystemFrontEnd.SecureAccessService.mstAuditTrailModule[] GetAuditTrailModuleList(string strToken, int intApplicationID) {
            return base.Channel.GetAuditTrailModuleList(strToken, intApplicationID);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstAuditTrailModule[]> GetAuditTrailModuleListAsync(string strToken, int intApplicationID) {
            return base.Channel.GetAuditTrailModuleListAsync(strToken, intApplicationID);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SecureAccessService.IRoleService")]
    public interface IRoleService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoleService/GetRoleCount", ReplyAction="http://tempuri.org/IRoleService/GetRoleCountResponse")]
        int GetRoleCount(string strToken, string strRole, int intIsActive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoleService/GetRoleCount", ReplyAction="http://tempuri.org/IRoleService/GetRoleCountResponse")]
        System.Threading.Tasks.Task<int> GetRoleCountAsync(string strToken, string strRole, int intIsActive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoleService/GetRoleToList", ReplyAction="http://tempuri.org/IRoleService/GetRoleToListResponse")]
        ARSystemFrontEnd.SecureAccessService.mstRole[] GetRoleToList(string strToken, string strRole, int intIsActive, string strOrderBy, int intRowSkip, int intPageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoleService/GetRoleToList", ReplyAction="http://tempuri.org/IRoleService/GetRoleToListResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstRole[]> GetRoleToListAsync(string strToken, string strRole, int intIsActive, string strOrderBy, int intRowSkip, int intPageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoleService/GetRoleListByBulkyRoleID", ReplyAction="http://tempuri.org/IRoleService/GetRoleListByBulkyRoleIDResponse")]
        ARSystemFrontEnd.SecureAccessService.mstRole[] GetRoleListByBulkyRoleID(string strToken, string strRoleID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoleService/GetRoleListByBulkyRoleID", ReplyAction="http://tempuri.org/IRoleService/GetRoleListByBulkyRoleIDResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstRole[]> GetRoleListByBulkyRoleIDAsync(string strToken, string strRoleID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoleService/GetMappingRoleToAction", ReplyAction="http://tempuri.org/IRoleService/GetMappingRoleToActionResponse")]
        ARSystemFrontEnd.SecureAccessService.vwRoleAction[] GetMappingRoleToAction(string strToken, int intApplicationID, int intRoleID, int intIsMenu, string strOrderBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoleService/GetMappingRoleToAction", ReplyAction="http://tempuri.org/IRoleService/GetMappingRoleToActionResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vwRoleAction[]> GetMappingRoleToActionAsync(string strToken, int intApplicationID, int intRoleID, int intIsMenu, string strOrderBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoleService/GetMappingRoleToMenu", ReplyAction="http://tempuri.org/IRoleService/GetMappingRoleToMenuResponse")]
        ARSystemFrontEnd.SecureAccessService.vwRoleMenu[] GetMappingRoleToMenu(string strToken, int intApplicationID, int intRoleID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoleService/GetMappingRoleToMenu", ReplyAction="http://tempuri.org/IRoleService/GetMappingRoleToMenuResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vwRoleMenu[]> GetMappingRoleToMenuAsync(string strToken, int intApplicationID, int intRoleID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoleService/GetActionAvailabilityForRole", ReplyAction="http://tempuri.org/IRoleService/GetActionAvailabilityForRoleResponse")]
        ARSystemFrontEnd.SecureAccessService.vmMappingUserAction[] GetActionAvailabilityForRole(string strToken, int intApplicationID, int intRoleID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoleService/GetActionAvailabilityForRole", ReplyAction="http://tempuri.org/IRoleService/GetActionAvailabilityForRoleResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vmMappingUserAction[]> GetActionAvailabilityForRoleAsync(string strToken, int intApplicationID, int intRoleID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoleService/GetHomeDashboardAvailabilityForRole", ReplyAction="http://tempuri.org/IRoleService/GetHomeDashboardAvailabilityForRoleResponse")]
        ARSystemFrontEnd.SecureAccessService.vmMappingUserHomeDashboard[] GetHomeDashboardAvailabilityForRole(string strToken, int intApplicationID, int intRoleID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoleService/GetHomeDashboardAvailabilityForRole", ReplyAction="http://tempuri.org/IRoleService/GetHomeDashboardAvailabilityForRoleResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vmMappingUserHomeDashboard[]> GetHomeDashboardAvailabilityForRoleAsync(string strToken, int intApplicationID, int intRoleID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoleService/GetDashboardAvailabilityForRole", ReplyAction="http://tempuri.org/IRoleService/GetDashboardAvailabilityForRoleResponse")]
        ARSystemFrontEnd.SecureAccessService.vmMappingUserHomeDashboard[] GetDashboardAvailabilityForRole(string strToken, int intApplicationID, int intRoleID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoleService/GetDashboardAvailabilityForRole", ReplyAction="http://tempuri.org/IRoleService/GetDashboardAvailabilityForRoleResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vmMappingUserHomeDashboard[]> GetDashboardAvailabilityForRoleAsync(string strToken, int intApplicationID, int intRoleID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoleService/GetTaskToDoAvailabilityForRole", ReplyAction="http://tempuri.org/IRoleService/GetTaskToDoAvailabilityForRoleResponse")]
        ARSystemFrontEnd.SecureAccessService.vmMappingUserTaskToDo[] GetTaskToDoAvailabilityForRole(string strToken, int intApplicationID, int intRoleID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoleService/GetTaskToDoAvailabilityForRole", ReplyAction="http://tempuri.org/IRoleService/GetTaskToDoAvailabilityForRoleResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vmMappingUserTaskToDo[]> GetTaskToDoAvailabilityForRoleAsync(string strToken, int intApplicationID, int intRoleID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoleService/GetJobTitleAvailabilityForRole", ReplyAction="http://tempuri.org/IRoleService/GetJobTitleAvailabilityForRoleResponse")]
        ARSystemFrontEnd.SecureAccessService.vmMappingUserJobTitle[] GetJobTitleAvailabilityForRole(string strToken, int intRoleID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoleService/GetJobTitleAvailabilityForRole", ReplyAction="http://tempuri.org/IRoleService/GetJobTitleAvailabilityForRoleResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vmMappingUserJobTitle[]> GetJobTitleAvailabilityForRoleAsync(string strToken, int intRoleID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoleService/CreateRole", ReplyAction="http://tempuri.org/IRoleService/CreateRoleResponse")]
        ARSystemFrontEnd.SecureAccessService.mstRole CreateRole(string strToken, ARSystemFrontEnd.SecureAccessService.mstRole role);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoleService/CreateRole", ReplyAction="http://tempuri.org/IRoleService/CreateRoleResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstRole> CreateRoleAsync(string strToken, ARSystemFrontEnd.SecureAccessService.mstRole role);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoleService/UpdateRole", ReplyAction="http://tempuri.org/IRoleService/UpdateRoleResponse")]
        ARSystemFrontEnd.SecureAccessService.mstRole UpdateRole(string strToken, int intRoleID, ARSystemFrontEnd.SecureAccessService.mstRole role);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoleService/UpdateRole", ReplyAction="http://tempuri.org/IRoleService/UpdateRoleResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstRole> UpdateRoleAsync(string strToken, int intRoleID, ARSystemFrontEnd.SecureAccessService.mstRole role);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoleService/UpdateRoleAuthorizeAction", ReplyAction="http://tempuri.org/IRoleService/UpdateRoleAuthorizeActionResponse")]
        ARSystemFrontEnd.SecureAccessService.mstRole UpdateRoleAuthorizeAction(string strToken, int intApplicationID, int roleID, ARSystemFrontEnd.SecureAccessService.idxRoleAction[] roleActions);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoleService/UpdateRoleAuthorizeAction", ReplyAction="http://tempuri.org/IRoleService/UpdateRoleAuthorizeActionResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstRole> UpdateRoleAuthorizeActionAsync(string strToken, int intApplicationID, int roleID, ARSystemFrontEnd.SecureAccessService.idxRoleAction[] roleActions);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoleService/UpdateRoleAuthorizeHomeDashboard", ReplyAction="http://tempuri.org/IRoleService/UpdateRoleAuthorizeHomeDashboardResponse")]
        ARSystemFrontEnd.SecureAccessService.mstRole UpdateRoleAuthorizeHomeDashboard(string strToken, int intApplicationID, int intRoleID, ARSystemFrontEnd.SecureAccessService.idxRoleHomeDashboard[] roleDashboards);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoleService/UpdateRoleAuthorizeHomeDashboard", ReplyAction="http://tempuri.org/IRoleService/UpdateRoleAuthorizeHomeDashboardResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstRole> UpdateRoleAuthorizeHomeDashboardAsync(string strToken, int intApplicationID, int intRoleID, ARSystemFrontEnd.SecureAccessService.idxRoleHomeDashboard[] roleDashboards);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoleService/UpdateRoleAuthorizeTaskToDo", ReplyAction="http://tempuri.org/IRoleService/UpdateRoleAuthorizeTaskToDoResponse")]
        ARSystemFrontEnd.SecureAccessService.mstRole UpdateRoleAuthorizeTaskToDo(string strToken, int intApplicationID, int intRoleID, ARSystemFrontEnd.SecureAccessService.idxRoleTaskToDo[] roleTaskToDos);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoleService/UpdateRoleAuthorizeTaskToDo", ReplyAction="http://tempuri.org/IRoleService/UpdateRoleAuthorizeTaskToDoResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstRole> UpdateRoleAuthorizeTaskToDoAsync(string strToken, int intApplicationID, int intRoleID, ARSystemFrontEnd.SecureAccessService.idxRoleTaskToDo[] roleTaskToDos);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoleService/UpdateRoleAuthorizeDashboard", ReplyAction="http://tempuri.org/IRoleService/UpdateRoleAuthorizeDashboardResponse")]
        ARSystemFrontEnd.SecureAccessService.mstRole UpdateRoleAuthorizeDashboard(string strToken, int intApplicationID, int intRoleID, ARSystemFrontEnd.SecureAccessService.idxRoleDashboard[] roleDashboards);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoleService/UpdateRoleAuthorizeDashboard", ReplyAction="http://tempuri.org/IRoleService/UpdateRoleAuthorizeDashboardResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstRole> UpdateRoleAuthorizeDashboardAsync(string strToken, int intApplicationID, int intRoleID, ARSystemFrontEnd.SecureAccessService.idxRoleDashboard[] roleDashboards);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoleService/UpdateRoleAuthorizeJobTitle", ReplyAction="http://tempuri.org/IRoleService/UpdateRoleAuthorizeJobTitleResponse")]
        ARSystemFrontEnd.SecureAccessService.mstRole UpdateRoleAuthorizeJobTitle(string strToken, int intRoleID, ARSystemFrontEnd.SecureAccessService.idxRoleJobTitle[] roleJobTitles);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoleService/UpdateRoleAuthorizeJobTitle", ReplyAction="http://tempuri.org/IRoleService/UpdateRoleAuthorizeJobTitleResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstRole> UpdateRoleAuthorizeJobTitleAsync(string strToken, int intRoleID, ARSystemFrontEnd.SecureAccessService.idxRoleJobTitle[] roleJobTitles);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoleService/UpdateRoleAuthorization", ReplyAction="http://tempuri.org/IRoleService/UpdateRoleAuthorizationResponse")]
        ARSystemFrontEnd.SecureAccessService.vmUpdateAuthorization UpdateRoleAuthorization(string token, ARSystemFrontEnd.SecureAccessService.vmUpdateAuthorization roleAuthorization);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoleService/UpdateRoleAuthorization", ReplyAction="http://tempuri.org/IRoleService/UpdateRoleAuthorizationResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vmUpdateAuthorization> UpdateRoleAuthorizationAsync(string token, ARSystemFrontEnd.SecureAccessService.vmUpdateAuthorization roleAuthorization);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoleService/GetActionAvailabilityForDynamicDataRole", ReplyAction="http://tempuri.org/IRoleService/GetActionAvailabilityForDynamicDataRoleResponse")]
        ARSystemFrontEnd.SecureAccessService.vmMappingUserAction[] GetActionAvailabilityForDynamicDataRole(string strToken, string Application, int intRoleID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoleService/GetActionAvailabilityForDynamicDataRole", ReplyAction="http://tempuri.org/IRoleService/GetActionAvailabilityForDynamicDataRoleResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vmMappingUserAction[]> GetActionAvailabilityForDynamicDataRoleAsync(string strToken, string Application, int intRoleID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoleService/GetApplicationRootMobileToList", ReplyAction="http://tempuri.org/IRoleService/GetApplicationRootMobileToListResponse")]
        ARSystemFrontEnd.SecureAccessService.mstRootDashboardMobile[] GetApplicationRootMobileToList(string strToken, string strNameRoot);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoleService/GetApplicationRootMobileToList", ReplyAction="http://tempuri.org/IRoleService/GetApplicationRootMobileToListResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstRootDashboardMobile[]> GetApplicationRootMobileToListAsync(string strToken, string strNameRoot);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoleService/GetActionAvailabilityForDynamicDashboardRole", ReplyAction="http://tempuri.org/IRoleService/GetActionAvailabilityForDynamicDashboardRoleRespo" +
            "nse")]
        ARSystemFrontEnd.SecureAccessService.vmMappingUserAction[] GetActionAvailabilityForDynamicDashboardRole(string strToken, string Application, int intRoleID, int rootID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoleService/GetActionAvailabilityForDynamicDashboardRole", ReplyAction="http://tempuri.org/IRoleService/GetActionAvailabilityForDynamicDashboardRoleRespo" +
            "nse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vmMappingUserAction[]> GetActionAvailabilityForDynamicDashboardRoleAsync(string strToken, string Application, int intRoleID, int rootID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoleService/UpdateRoleAuthorizeDynamicData", ReplyAction="http://tempuri.org/IRoleService/UpdateRoleAuthorizeDynamicDataResponse")]
        ARSystemFrontEnd.SecureAccessService.mstRole UpdateRoleAuthorizeDynamicData(string strToken, string Application, int roleID, ARSystemFrontEnd.SecureAccessService.idxRoleDynamicData[] roleActions);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoleService/UpdateRoleAuthorizeDynamicData", ReplyAction="http://tempuri.org/IRoleService/UpdateRoleAuthorizeDynamicDataResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstRole> UpdateRoleAuthorizeDynamicDataAsync(string strToken, string Application, int roleID, ARSystemFrontEnd.SecureAccessService.idxRoleDynamicData[] roleActions);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoleService/UpdateRoleAuthorizeDynamicDashboard", ReplyAction="http://tempuri.org/IRoleService/UpdateRoleAuthorizeDynamicDashboardResponse")]
        ARSystemFrontEnd.SecureAccessService.mstRole UpdateRoleAuthorizeDynamicDashboard(string strToken, string Application, int intRoleID, int rootID, ARSystemFrontEnd.SecureAccessService.idxRoleDynamicDashboard[] roleActions);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoleService/UpdateRoleAuthorizeDynamicDashboard", ReplyAction="http://tempuri.org/IRoleService/UpdateRoleAuthorizeDynamicDashboardResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstRole> UpdateRoleAuthorizeDynamicDashboardAsync(string strToken, string Application, int intRoleID, int rootID, ARSystemFrontEnd.SecureAccessService.idxRoleDynamicDashboard[] roleActions);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRoleServiceChannel : ARSystemFrontEnd.SecureAccessService.IRoleService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RoleServiceClient : System.ServiceModel.ClientBase<ARSystemFrontEnd.SecureAccessService.IRoleService>, ARSystemFrontEnd.SecureAccessService.IRoleService {
        
        public RoleServiceClient() {
        }
        
        public RoleServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RoleServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RoleServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RoleServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int GetRoleCount(string strToken, string strRole, int intIsActive) {
            return base.Channel.GetRoleCount(strToken, strRole, intIsActive);
        }
        
        public System.Threading.Tasks.Task<int> GetRoleCountAsync(string strToken, string strRole, int intIsActive) {
            return base.Channel.GetRoleCountAsync(strToken, strRole, intIsActive);
        }
        
        public ARSystemFrontEnd.SecureAccessService.mstRole[] GetRoleToList(string strToken, string strRole, int intIsActive, string strOrderBy, int intRowSkip, int intPageSize) {
            return base.Channel.GetRoleToList(strToken, strRole, intIsActive, strOrderBy, intRowSkip, intPageSize);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstRole[]> GetRoleToListAsync(string strToken, string strRole, int intIsActive, string strOrderBy, int intRowSkip, int intPageSize) {
            return base.Channel.GetRoleToListAsync(strToken, strRole, intIsActive, strOrderBy, intRowSkip, intPageSize);
        }
        
        public ARSystemFrontEnd.SecureAccessService.mstRole[] GetRoleListByBulkyRoleID(string strToken, string strRoleID) {
            return base.Channel.GetRoleListByBulkyRoleID(strToken, strRoleID);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstRole[]> GetRoleListByBulkyRoleIDAsync(string strToken, string strRoleID) {
            return base.Channel.GetRoleListByBulkyRoleIDAsync(strToken, strRoleID);
        }
        
        public ARSystemFrontEnd.SecureAccessService.vwRoleAction[] GetMappingRoleToAction(string strToken, int intApplicationID, int intRoleID, int intIsMenu, string strOrderBy) {
            return base.Channel.GetMappingRoleToAction(strToken, intApplicationID, intRoleID, intIsMenu, strOrderBy);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vwRoleAction[]> GetMappingRoleToActionAsync(string strToken, int intApplicationID, int intRoleID, int intIsMenu, string strOrderBy) {
            return base.Channel.GetMappingRoleToActionAsync(strToken, intApplicationID, intRoleID, intIsMenu, strOrderBy);
        }
        
        public ARSystemFrontEnd.SecureAccessService.vwRoleMenu[] GetMappingRoleToMenu(string strToken, int intApplicationID, int intRoleID) {
            return base.Channel.GetMappingRoleToMenu(strToken, intApplicationID, intRoleID);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vwRoleMenu[]> GetMappingRoleToMenuAsync(string strToken, int intApplicationID, int intRoleID) {
            return base.Channel.GetMappingRoleToMenuAsync(strToken, intApplicationID, intRoleID);
        }
        
        public ARSystemFrontEnd.SecureAccessService.vmMappingUserAction[] GetActionAvailabilityForRole(string strToken, int intApplicationID, int intRoleID) {
            return base.Channel.GetActionAvailabilityForRole(strToken, intApplicationID, intRoleID);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vmMappingUserAction[]> GetActionAvailabilityForRoleAsync(string strToken, int intApplicationID, int intRoleID) {
            return base.Channel.GetActionAvailabilityForRoleAsync(strToken, intApplicationID, intRoleID);
        }
        
        public ARSystemFrontEnd.SecureAccessService.vmMappingUserHomeDashboard[] GetHomeDashboardAvailabilityForRole(string strToken, int intApplicationID, int intRoleID) {
            return base.Channel.GetHomeDashboardAvailabilityForRole(strToken, intApplicationID, intRoleID);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vmMappingUserHomeDashboard[]> GetHomeDashboardAvailabilityForRoleAsync(string strToken, int intApplicationID, int intRoleID) {
            return base.Channel.GetHomeDashboardAvailabilityForRoleAsync(strToken, intApplicationID, intRoleID);
        }
        
        public ARSystemFrontEnd.SecureAccessService.vmMappingUserHomeDashboard[] GetDashboardAvailabilityForRole(string strToken, int intApplicationID, int intRoleID) {
            return base.Channel.GetDashboardAvailabilityForRole(strToken, intApplicationID, intRoleID);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vmMappingUserHomeDashboard[]> GetDashboardAvailabilityForRoleAsync(string strToken, int intApplicationID, int intRoleID) {
            return base.Channel.GetDashboardAvailabilityForRoleAsync(strToken, intApplicationID, intRoleID);
        }
        
        public ARSystemFrontEnd.SecureAccessService.vmMappingUserTaskToDo[] GetTaskToDoAvailabilityForRole(string strToken, int intApplicationID, int intRoleID) {
            return base.Channel.GetTaskToDoAvailabilityForRole(strToken, intApplicationID, intRoleID);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vmMappingUserTaskToDo[]> GetTaskToDoAvailabilityForRoleAsync(string strToken, int intApplicationID, int intRoleID) {
            return base.Channel.GetTaskToDoAvailabilityForRoleAsync(strToken, intApplicationID, intRoleID);
        }
        
        public ARSystemFrontEnd.SecureAccessService.vmMappingUserJobTitle[] GetJobTitleAvailabilityForRole(string strToken, int intRoleID) {
            return base.Channel.GetJobTitleAvailabilityForRole(strToken, intRoleID);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vmMappingUserJobTitle[]> GetJobTitleAvailabilityForRoleAsync(string strToken, int intRoleID) {
            return base.Channel.GetJobTitleAvailabilityForRoleAsync(strToken, intRoleID);
        }
        
        public ARSystemFrontEnd.SecureAccessService.mstRole CreateRole(string strToken, ARSystemFrontEnd.SecureAccessService.mstRole role) {
            return base.Channel.CreateRole(strToken, role);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstRole> CreateRoleAsync(string strToken, ARSystemFrontEnd.SecureAccessService.mstRole role) {
            return base.Channel.CreateRoleAsync(strToken, role);
        }
        
        public ARSystemFrontEnd.SecureAccessService.mstRole UpdateRole(string strToken, int intRoleID, ARSystemFrontEnd.SecureAccessService.mstRole role) {
            return base.Channel.UpdateRole(strToken, intRoleID, role);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstRole> UpdateRoleAsync(string strToken, int intRoleID, ARSystemFrontEnd.SecureAccessService.mstRole role) {
            return base.Channel.UpdateRoleAsync(strToken, intRoleID, role);
        }
        
        public ARSystemFrontEnd.SecureAccessService.mstRole UpdateRoleAuthorizeAction(string strToken, int intApplicationID, int roleID, ARSystemFrontEnd.SecureAccessService.idxRoleAction[] roleActions) {
            return base.Channel.UpdateRoleAuthorizeAction(strToken, intApplicationID, roleID, roleActions);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstRole> UpdateRoleAuthorizeActionAsync(string strToken, int intApplicationID, int roleID, ARSystemFrontEnd.SecureAccessService.idxRoleAction[] roleActions) {
            return base.Channel.UpdateRoleAuthorizeActionAsync(strToken, intApplicationID, roleID, roleActions);
        }
        
        public ARSystemFrontEnd.SecureAccessService.mstRole UpdateRoleAuthorizeHomeDashboard(string strToken, int intApplicationID, int intRoleID, ARSystemFrontEnd.SecureAccessService.idxRoleHomeDashboard[] roleDashboards) {
            return base.Channel.UpdateRoleAuthorizeHomeDashboard(strToken, intApplicationID, intRoleID, roleDashboards);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstRole> UpdateRoleAuthorizeHomeDashboardAsync(string strToken, int intApplicationID, int intRoleID, ARSystemFrontEnd.SecureAccessService.idxRoleHomeDashboard[] roleDashboards) {
            return base.Channel.UpdateRoleAuthorizeHomeDashboardAsync(strToken, intApplicationID, intRoleID, roleDashboards);
        }
        
        public ARSystemFrontEnd.SecureAccessService.mstRole UpdateRoleAuthorizeTaskToDo(string strToken, int intApplicationID, int intRoleID, ARSystemFrontEnd.SecureAccessService.idxRoleTaskToDo[] roleTaskToDos) {
            return base.Channel.UpdateRoleAuthorizeTaskToDo(strToken, intApplicationID, intRoleID, roleTaskToDos);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstRole> UpdateRoleAuthorizeTaskToDoAsync(string strToken, int intApplicationID, int intRoleID, ARSystemFrontEnd.SecureAccessService.idxRoleTaskToDo[] roleTaskToDos) {
            return base.Channel.UpdateRoleAuthorizeTaskToDoAsync(strToken, intApplicationID, intRoleID, roleTaskToDos);
        }
        
        public ARSystemFrontEnd.SecureAccessService.mstRole UpdateRoleAuthorizeDashboard(string strToken, int intApplicationID, int intRoleID, ARSystemFrontEnd.SecureAccessService.idxRoleDashboard[] roleDashboards) {
            return base.Channel.UpdateRoleAuthorizeDashboard(strToken, intApplicationID, intRoleID, roleDashboards);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstRole> UpdateRoleAuthorizeDashboardAsync(string strToken, int intApplicationID, int intRoleID, ARSystemFrontEnd.SecureAccessService.idxRoleDashboard[] roleDashboards) {
            return base.Channel.UpdateRoleAuthorizeDashboardAsync(strToken, intApplicationID, intRoleID, roleDashboards);
        }
        
        public ARSystemFrontEnd.SecureAccessService.mstRole UpdateRoleAuthorizeJobTitle(string strToken, int intRoleID, ARSystemFrontEnd.SecureAccessService.idxRoleJobTitle[] roleJobTitles) {
            return base.Channel.UpdateRoleAuthorizeJobTitle(strToken, intRoleID, roleJobTitles);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstRole> UpdateRoleAuthorizeJobTitleAsync(string strToken, int intRoleID, ARSystemFrontEnd.SecureAccessService.idxRoleJobTitle[] roleJobTitles) {
            return base.Channel.UpdateRoleAuthorizeJobTitleAsync(strToken, intRoleID, roleJobTitles);
        }
        
        public ARSystemFrontEnd.SecureAccessService.vmUpdateAuthorization UpdateRoleAuthorization(string token, ARSystemFrontEnd.SecureAccessService.vmUpdateAuthorization roleAuthorization) {
            return base.Channel.UpdateRoleAuthorization(token, roleAuthorization);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vmUpdateAuthorization> UpdateRoleAuthorizationAsync(string token, ARSystemFrontEnd.SecureAccessService.vmUpdateAuthorization roleAuthorization) {
            return base.Channel.UpdateRoleAuthorizationAsync(token, roleAuthorization);
        }
        
        public ARSystemFrontEnd.SecureAccessService.vmMappingUserAction[] GetActionAvailabilityForDynamicDataRole(string strToken, string Application, int intRoleID) {
            return base.Channel.GetActionAvailabilityForDynamicDataRole(strToken, Application, intRoleID);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vmMappingUserAction[]> GetActionAvailabilityForDynamicDataRoleAsync(string strToken, string Application, int intRoleID) {
            return base.Channel.GetActionAvailabilityForDynamicDataRoleAsync(strToken, Application, intRoleID);
        }
        
        public ARSystemFrontEnd.SecureAccessService.mstRootDashboardMobile[] GetApplicationRootMobileToList(string strToken, string strNameRoot) {
            return base.Channel.GetApplicationRootMobileToList(strToken, strNameRoot);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstRootDashboardMobile[]> GetApplicationRootMobileToListAsync(string strToken, string strNameRoot) {
            return base.Channel.GetApplicationRootMobileToListAsync(strToken, strNameRoot);
        }
        
        public ARSystemFrontEnd.SecureAccessService.vmMappingUserAction[] GetActionAvailabilityForDynamicDashboardRole(string strToken, string Application, int intRoleID, int rootID) {
            return base.Channel.GetActionAvailabilityForDynamicDashboardRole(strToken, Application, intRoleID, rootID);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vmMappingUserAction[]> GetActionAvailabilityForDynamicDashboardRoleAsync(string strToken, string Application, int intRoleID, int rootID) {
            return base.Channel.GetActionAvailabilityForDynamicDashboardRoleAsync(strToken, Application, intRoleID, rootID);
        }
        
        public ARSystemFrontEnd.SecureAccessService.mstRole UpdateRoleAuthorizeDynamicData(string strToken, string Application, int roleID, ARSystemFrontEnd.SecureAccessService.idxRoleDynamicData[] roleActions) {
            return base.Channel.UpdateRoleAuthorizeDynamicData(strToken, Application, roleID, roleActions);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstRole> UpdateRoleAuthorizeDynamicDataAsync(string strToken, string Application, int roleID, ARSystemFrontEnd.SecureAccessService.idxRoleDynamicData[] roleActions) {
            return base.Channel.UpdateRoleAuthorizeDynamicDataAsync(strToken, Application, roleID, roleActions);
        }
        
        public ARSystemFrontEnd.SecureAccessService.mstRole UpdateRoleAuthorizeDynamicDashboard(string strToken, string Application, int intRoleID, int rootID, ARSystemFrontEnd.SecureAccessService.idxRoleDynamicDashboard[] roleActions) {
            return base.Channel.UpdateRoleAuthorizeDynamicDashboard(strToken, Application, intRoleID, rootID, roleActions);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstRole> UpdateRoleAuthorizeDynamicDashboardAsync(string strToken, string Application, int intRoleID, int rootID, ARSystemFrontEnd.SecureAccessService.idxRoleDynamicDashboard[] roleActions) {
            return base.Channel.UpdateRoleAuthorizeDynamicDashboardAsync(strToken, Application, intRoleID, rootID, roleActions);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SecureAccessService.IUserService")]
    public interface IUserService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/Login", ReplyAction="http://tempuri.org/IUserService/LoginResponse")]
        ARSystemFrontEnd.SecureAccessService.vmUserLogin Login([System.ServiceModel.MessageParameterAttribute(Name="login")] ARSystemFrontEnd.SecureAccessService.vmLogin login1);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/Login", ReplyAction="http://tempuri.org/IUserService/LoginResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vmUserLogin> LoginAsync(ARSystemFrontEnd.SecureAccessService.vmLogin login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/LoginValidation", ReplyAction="http://tempuri.org/IUserService/LoginValidationResponse")]
        ARSystemFrontEnd.SecureAccessService.vmUserLogin LoginValidation(ARSystemFrontEnd.SecureAccessService.vmLogin login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/LoginValidation", ReplyAction="http://tempuri.org/IUserService/LoginValidationResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vmUserLogin> LoginValidationAsync(ARSystemFrontEnd.SecureAccessService.vmLogin login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/CheckUserToken", ReplyAction="http://tempuri.org/IUserService/CheckUserTokenResponse")]
        ARSystemFrontEnd.SecureAccessService.vmUserCredential CheckUserToken(string strToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/CheckUserToken", ReplyAction="http://tempuri.org/IUserService/CheckUserTokenResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vmUserCredential> CheckUserTokenAsync(string strToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/CheckUserAccess", ReplyAction="http://tempuri.org/IUserService/CheckUserAccessResponse")]
        bool CheckUserAccess(string strToken, string strActionToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/CheckUserAccess", ReplyAction="http://tempuri.org/IUserService/CheckUserAccessResponse")]
        System.Threading.Tasks.Task<bool> CheckUserAccessAsync(string strToken, string strActionToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/CheckExternalToken", ReplyAction="http://tempuri.org/IUserService/CheckExternalTokenResponse")]
        bool CheckExternalToken(string strApplication, string strToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/CheckExternalToken", ReplyAction="http://tempuri.org/IUserService/CheckExternalTokenResponse")]
        System.Threading.Tasks.Task<bool> CheckExternalTokenAsync(string strApplication, string strToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/Logout", ReplyAction="http://tempuri.org/IUserService/LogoutResponse")]
        void Logout(string strToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/Logout", ReplyAction="http://tempuri.org/IUserService/LogoutResponse")]
        System.Threading.Tasks.Task LogoutAsync(string strToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/ForceLogout", ReplyAction="http://tempuri.org/IUserService/ForceLogoutResponse")]
        ARSystemFrontEnd.SecureAccessService.mstUser ForceLogout(string strToken, string strUserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/ForceLogout", ReplyAction="http://tempuri.org/IUserService/ForceLogoutResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstUser> ForceLogoutAsync(string strToken, string strUserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/CheckUserAccessNew", ReplyAction="http://tempuri.org/IUserService/CheckUserAccessNewResponse")]
        bool CheckUserAccessNew(string strToken, string actionToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/CheckUserAccessNew", ReplyAction="http://tempuri.org/IUserService/CheckUserAccessNewResponse")]
        System.Threading.Tasks.Task<bool> CheckUserAccessNewAsync(string strToken, string actionToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUserCount", ReplyAction="http://tempuri.org/IUserService/GetUserCountResponse")]
        int GetUserCount(string strToken, string strUserID, string strFullName, int intRoleID, string strHCISPosition, string strPhoneNumber, string strEmail, string strRegion, int intIsActive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUserCount", ReplyAction="http://tempuri.org/IUserService/GetUserCountResponse")]
        System.Threading.Tasks.Task<int> GetUserCountAsync(string strToken, string strUserID, string strFullName, int intRoleID, string strHCISPosition, string strPhoneNumber, string strEmail, string strRegion, int intIsActive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUserToList", ReplyAction="http://tempuri.org/IUserService/GetUserToListResponse")]
        ARSystemFrontEnd.SecureAccessService.vwUser[] GetUserToList(string strToken, string strUserID, string strFullName, int intRoleID, string strHCISPosition, string strPhoneNumber, string strEmail, string strRegion, int intIsActive, string strOrderBy, int intRowSkip, int intPageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUserToList", ReplyAction="http://tempuri.org/IUserService/GetUserToListResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vwUser[]> GetUserToListAsync(string strToken, string strUserID, string strFullName, int intRoleID, string strHCISPosition, string strPhoneNumber, string strEmail, string strRegion, int intIsActive, string strOrderBy, int intRowSkip, int intPageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUserSingle", ReplyAction="http://tempuri.org/IUserService/GetUserSingleResponse")]
        ARSystemFrontEnd.SecureAccessService.mstUser GetUserSingle(string strToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUserSingle", ReplyAction="http://tempuri.org/IUserService/GetUserSingleResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstUser> GetUserSingleAsync(string strToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUserSingleByUserID", ReplyAction="http://tempuri.org/IUserService/GetUserSingleByUserIDResponse")]
        ARSystemFrontEnd.SecureAccessService.mstUser GetUserSingleByUserID(string strToken, string strUserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUserSingleByUserID", ReplyAction="http://tempuri.org/IUserService/GetUserSingleByUserIDResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstUser> GetUserSingleByUserIDAsync(string strToken, string strUserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UpdateUser", ReplyAction="http://tempuri.org/IUserService/UpdateUserResponse")]
        ARSystemFrontEnd.SecureAccessService.mstUser UpdateUser(string strToken, string strUserID, string strNewPassword, ARSystemFrontEnd.SecureAccessService.mstUser user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UpdateUser", ReplyAction="http://tempuri.org/IUserService/UpdateUserResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstUser> UpdateUserAsync(string strToken, string strUserID, string strNewPassword, ARSystemFrontEnd.SecureAccessService.mstUser user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UpdatePassword", ReplyAction="http://tempuri.org/IUserService/UpdatePasswordResponse")]
        ARSystemFrontEnd.SecureAccessService.mstUser UpdatePassword(string strToken, string strOldPassword, string strNewPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UpdatePassword", ReplyAction="http://tempuri.org/IUserService/UpdatePasswordResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstUser> UpdatePasswordAsync(string strToken, string strOldPassword, string strNewPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUserJobTitle", ReplyAction="http://tempuri.org/IUserService/GetUserJobTitleResponse")]
        ARSystemFrontEnd.SecureAccessService.vmMappingUserJobTitle GetUserJobTitle(string strToken, string strUserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUserJobTitle", ReplyAction="http://tempuri.org/IUserService/GetUserJobTitleResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vmMappingUserJobTitle> GetUserJobTitleAsync(string strToken, string strUserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UpdateUserFromTBGSYS", ReplyAction="http://tempuri.org/IUserService/UpdateUserFromTBGSYSResponse")]
        string UpdateUserFromTBGSYS(string strToken, ARSystemFrontEnd.SecureAccessService.mstUser user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UpdateUserFromTBGSYS", ReplyAction="http://tempuri.org/IUserService/UpdateUserFromTBGSYSResponse")]
        System.Threading.Tasks.Task<string> UpdateUserFromTBGSYSAsync(string strToken, ARSystemFrontEnd.SecureAccessService.mstUser user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/InsertUserFromTBGSYS", ReplyAction="http://tempuri.org/IUserService/InsertUserFromTBGSYSResponse")]
        string InsertUserFromTBGSYS(string strToken, ARSystemFrontEnd.SecureAccessService.mstUser user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/InsertUserFromTBGSYS", ReplyAction="http://tempuri.org/IUserService/InsertUserFromTBGSYSResponse")]
        System.Threading.Tasks.Task<string> InsertUserFromTBGSYSAsync(string strToken, ARSystemFrontEnd.SecureAccessService.mstUser user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/OTPForceLogin", ReplyAction="http://tempuri.org/IUserService/OTPForceLoginResponse")]
        ARSystemFrontEnd.SecureAccessService.trxOTP OTPForceLogin(ARSystemFrontEnd.SecureAccessService.trxOTP data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/OTPForceLogin", ReplyAction="http://tempuri.org/IUserService/OTPForceLoginResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.trxOTP> OTPForceLoginAsync(ARSystemFrontEnd.SecureAccessService.trxOTP data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/OTPCConfirmForceLogin", ReplyAction="http://tempuri.org/IUserService/OTPCConfirmForceLoginResponse")]
        ARSystemFrontEnd.SecureAccessService.trxOTP OTPCConfirmForceLogin(ARSystemFrontEnd.SecureAccessService.trxOTP data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/OTPCConfirmForceLogin", ReplyAction="http://tempuri.org/IUserService/OTPCConfirmForceLoginResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.trxOTP> OTPCConfirmForceLoginAsync(ARSystemFrontEnd.SecureAccessService.trxOTP data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UpdatePasswordFromTBiGMobile", ReplyAction="http://tempuri.org/IUserService/UpdatePasswordFromTBiGMobileResponse")]
        string UpdatePasswordFromTBiGMobile(string strUserID, string strNewPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UpdatePasswordFromTBiGMobile", ReplyAction="http://tempuri.org/IUserService/UpdatePasswordFromTBiGMobileResponse")]
        System.Threading.Tasks.Task<string> UpdatePasswordFromTBiGMobileAsync(string strUserID, string strNewPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/ValidationCommondPasswordTBGSys", ReplyAction="http://tempuri.org/IUserService/ValidationCommondPasswordTBGSysResponse")]
        string ValidationCommondPasswordTBGSys(string strUserID, string strNewPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/ValidationCommondPasswordTBGSys", ReplyAction="http://tempuri.org/IUserService/ValidationCommondPasswordTBGSysResponse")]
        System.Threading.Tasks.Task<string> ValidationCommondPasswordTBGSysAsync(string strUserID, string strNewPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/LoginDefaultPassword", ReplyAction="http://tempuri.org/IUserService/LoginDefaultPasswordResponse")]
        string LoginDefaultPassword(string userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/LoginDefaultPassword", ReplyAction="http://tempuri.org/IUserService/LoginDefaultPasswordResponse")]
        System.Threading.Tasks.Task<string> LoginDefaultPasswordAsync(string userID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUserServiceChannel : ARSystemFrontEnd.SecureAccessService.IUserService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserServiceClient : System.ServiceModel.ClientBase<ARSystemFrontEnd.SecureAccessService.IUserService>, ARSystemFrontEnd.SecureAccessService.IUserService {
        
        public UserServiceClient() {
        }
        
        public UserServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UserServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ARSystemFrontEnd.SecureAccessService.vmUserLogin Login(ARSystemFrontEnd.SecureAccessService.vmLogin login1) {
            return base.Channel.Login(login1);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vmUserLogin> LoginAsync(ARSystemFrontEnd.SecureAccessService.vmLogin login) {
            return base.Channel.LoginAsync(login);
        }
        
        public ARSystemFrontEnd.SecureAccessService.vmUserLogin LoginValidation(ARSystemFrontEnd.SecureAccessService.vmLogin login) {
            return base.Channel.LoginValidation(login);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vmUserLogin> LoginValidationAsync(ARSystemFrontEnd.SecureAccessService.vmLogin login) {
            return base.Channel.LoginValidationAsync(login);
        }
        
        public ARSystemFrontEnd.SecureAccessService.vmUserCredential CheckUserToken(string strToken) {
            return base.Channel.CheckUserToken(strToken);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vmUserCredential> CheckUserTokenAsync(string strToken) {
            return base.Channel.CheckUserTokenAsync(strToken);
        }
        
        public bool CheckUserAccess(string strToken, string strActionToken) {
            return base.Channel.CheckUserAccess(strToken, strActionToken);
        }
        
        public System.Threading.Tasks.Task<bool> CheckUserAccessAsync(string strToken, string strActionToken) {
            return base.Channel.CheckUserAccessAsync(strToken, strActionToken);
        }
        
        public bool CheckExternalToken(string strApplication, string strToken) {
            return base.Channel.CheckExternalToken(strApplication, strToken);
        }
        
        public System.Threading.Tasks.Task<bool> CheckExternalTokenAsync(string strApplication, string strToken) {
            return base.Channel.CheckExternalTokenAsync(strApplication, strToken);
        }
        
        public void Logout(string strToken) {
            base.Channel.Logout(strToken);
        }
        
        public System.Threading.Tasks.Task LogoutAsync(string strToken) {
            return base.Channel.LogoutAsync(strToken);
        }
        
        public ARSystemFrontEnd.SecureAccessService.mstUser ForceLogout(string strToken, string strUserID) {
            return base.Channel.ForceLogout(strToken, strUserID);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstUser> ForceLogoutAsync(string strToken, string strUserID) {
            return base.Channel.ForceLogoutAsync(strToken, strUserID);
        }
        
        public bool CheckUserAccessNew(string strToken, string actionToken) {
            return base.Channel.CheckUserAccessNew(strToken, actionToken);
        }
        
        public System.Threading.Tasks.Task<bool> CheckUserAccessNewAsync(string strToken, string actionToken) {
            return base.Channel.CheckUserAccessNewAsync(strToken, actionToken);
        }
        
        public int GetUserCount(string strToken, string strUserID, string strFullName, int intRoleID, string strHCISPosition, string strPhoneNumber, string strEmail, string strRegion, int intIsActive) {
            return base.Channel.GetUserCount(strToken, strUserID, strFullName, intRoleID, strHCISPosition, strPhoneNumber, strEmail, strRegion, intIsActive);
        }
        
        public System.Threading.Tasks.Task<int> GetUserCountAsync(string strToken, string strUserID, string strFullName, int intRoleID, string strHCISPosition, string strPhoneNumber, string strEmail, string strRegion, int intIsActive) {
            return base.Channel.GetUserCountAsync(strToken, strUserID, strFullName, intRoleID, strHCISPosition, strPhoneNumber, strEmail, strRegion, intIsActive);
        }
        
        public ARSystemFrontEnd.SecureAccessService.vwUser[] GetUserToList(string strToken, string strUserID, string strFullName, int intRoleID, string strHCISPosition, string strPhoneNumber, string strEmail, string strRegion, int intIsActive, string strOrderBy, int intRowSkip, int intPageSize) {
            return base.Channel.GetUserToList(strToken, strUserID, strFullName, intRoleID, strHCISPosition, strPhoneNumber, strEmail, strRegion, intIsActive, strOrderBy, intRowSkip, intPageSize);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vwUser[]> GetUserToListAsync(string strToken, string strUserID, string strFullName, int intRoleID, string strHCISPosition, string strPhoneNumber, string strEmail, string strRegion, int intIsActive, string strOrderBy, int intRowSkip, int intPageSize) {
            return base.Channel.GetUserToListAsync(strToken, strUserID, strFullName, intRoleID, strHCISPosition, strPhoneNumber, strEmail, strRegion, intIsActive, strOrderBy, intRowSkip, intPageSize);
        }
        
        public ARSystemFrontEnd.SecureAccessService.mstUser GetUserSingle(string strToken) {
            return base.Channel.GetUserSingle(strToken);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstUser> GetUserSingleAsync(string strToken) {
            return base.Channel.GetUserSingleAsync(strToken);
        }
        
        public ARSystemFrontEnd.SecureAccessService.mstUser GetUserSingleByUserID(string strToken, string strUserID) {
            return base.Channel.GetUserSingleByUserID(strToken, strUserID);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstUser> GetUserSingleByUserIDAsync(string strToken, string strUserID) {
            return base.Channel.GetUserSingleByUserIDAsync(strToken, strUserID);
        }
        
        public ARSystemFrontEnd.SecureAccessService.mstUser UpdateUser(string strToken, string strUserID, string strNewPassword, ARSystemFrontEnd.SecureAccessService.mstUser user) {
            return base.Channel.UpdateUser(strToken, strUserID, strNewPassword, user);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstUser> UpdateUserAsync(string strToken, string strUserID, string strNewPassword, ARSystemFrontEnd.SecureAccessService.mstUser user) {
            return base.Channel.UpdateUserAsync(strToken, strUserID, strNewPassword, user);
        }
        
        public ARSystemFrontEnd.SecureAccessService.mstUser UpdatePassword(string strToken, string strOldPassword, string strNewPassword) {
            return base.Channel.UpdatePassword(strToken, strOldPassword, strNewPassword);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstUser> UpdatePasswordAsync(string strToken, string strOldPassword, string strNewPassword) {
            return base.Channel.UpdatePasswordAsync(strToken, strOldPassword, strNewPassword);
        }
        
        public ARSystemFrontEnd.SecureAccessService.vmMappingUserJobTitle GetUserJobTitle(string strToken, string strUserID) {
            return base.Channel.GetUserJobTitle(strToken, strUserID);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vmMappingUserJobTitle> GetUserJobTitleAsync(string strToken, string strUserID) {
            return base.Channel.GetUserJobTitleAsync(strToken, strUserID);
        }
        
        public string UpdateUserFromTBGSYS(string strToken, ARSystemFrontEnd.SecureAccessService.mstUser user) {
            return base.Channel.UpdateUserFromTBGSYS(strToken, user);
        }
        
        public System.Threading.Tasks.Task<string> UpdateUserFromTBGSYSAsync(string strToken, ARSystemFrontEnd.SecureAccessService.mstUser user) {
            return base.Channel.UpdateUserFromTBGSYSAsync(strToken, user);
        }
        
        public string InsertUserFromTBGSYS(string strToken, ARSystemFrontEnd.SecureAccessService.mstUser user) {
            return base.Channel.InsertUserFromTBGSYS(strToken, user);
        }
        
        public System.Threading.Tasks.Task<string> InsertUserFromTBGSYSAsync(string strToken, ARSystemFrontEnd.SecureAccessService.mstUser user) {
            return base.Channel.InsertUserFromTBGSYSAsync(strToken, user);
        }
        
        public ARSystemFrontEnd.SecureAccessService.trxOTP OTPForceLogin(ARSystemFrontEnd.SecureAccessService.trxOTP data) {
            return base.Channel.OTPForceLogin(data);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.trxOTP> OTPForceLoginAsync(ARSystemFrontEnd.SecureAccessService.trxOTP data) {
            return base.Channel.OTPForceLoginAsync(data);
        }
        
        public ARSystemFrontEnd.SecureAccessService.trxOTP OTPCConfirmForceLogin(ARSystemFrontEnd.SecureAccessService.trxOTP data) {
            return base.Channel.OTPCConfirmForceLogin(data);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.trxOTP> OTPCConfirmForceLoginAsync(ARSystemFrontEnd.SecureAccessService.trxOTP data) {
            return base.Channel.OTPCConfirmForceLoginAsync(data);
        }
        
        public string UpdatePasswordFromTBiGMobile(string strUserID, string strNewPassword) {
            return base.Channel.UpdatePasswordFromTBiGMobile(strUserID, strNewPassword);
        }
        
        public System.Threading.Tasks.Task<string> UpdatePasswordFromTBiGMobileAsync(string strUserID, string strNewPassword) {
            return base.Channel.UpdatePasswordFromTBiGMobileAsync(strUserID, strNewPassword);
        }
        
        public string ValidationCommondPasswordTBGSys(string strUserID, string strNewPassword) {
            return base.Channel.ValidationCommondPasswordTBGSys(strUserID, strNewPassword);
        }
        
        public System.Threading.Tasks.Task<string> ValidationCommondPasswordTBGSysAsync(string strUserID, string strNewPassword) {
            return base.Channel.ValidationCommondPasswordTBGSysAsync(strUserID, strNewPassword);
        }
        
        public string LoginDefaultPassword(string userID) {
            return base.Channel.LoginDefaultPassword(userID);
        }
        
        public System.Threading.Tasks.Task<string> LoginDefaultPasswordAsync(string userID) {
            return base.Channel.LoginDefaultPasswordAsync(userID);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SecureAccessService.IUserPrivilegeService")]
    public interface IUserPrivilegeService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserPrivilegeService/GetUserPrivilegeCount", ReplyAction="http://tempuri.org/IUserPrivilegeService/GetUserPrivilegeCountResponse")]
        int GetUserPrivilegeCount(string strToken, string strEmployeeID, string strFullName, string strResignDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserPrivilegeService/GetUserPrivilegeCount", ReplyAction="http://tempuri.org/IUserPrivilegeService/GetUserPrivilegeCountResponse")]
        System.Threading.Tasks.Task<int> GetUserPrivilegeCountAsync(string strToken, string strEmployeeID, string strFullName, string strResignDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserPrivilegeService/GetUserPrivilegeList", ReplyAction="http://tempuri.org/IUserPrivilegeService/GetUserPrivilegeListResponse")]
        ARSystemFrontEnd.SecureAccessService.SyncStagingMstEmployee[] GetUserPrivilegeList(string strToken, string strEmployeeID, string strFullName, string strResignDate, string strOrderBy, int intRowSkip, int intPageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserPrivilegeService/GetUserPrivilegeList", ReplyAction="http://tempuri.org/IUserPrivilegeService/GetUserPrivilegeListResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.SyncStagingMstEmployee[]> GetUserPrivilegeListAsync(string strToken, string strEmployeeID, string strFullName, string strResignDate, string strOrderBy, int intRowSkip, int intPageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserPrivilegeService/GetUserIDTBGSys", ReplyAction="http://tempuri.org/IUserPrivilegeService/GetUserIDTBGSysResponse")]
        ARSystemFrontEnd.SecureAccessService.vmUserPrivilege GetUserIDTBGSys(string strToken, string strEmployeeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserPrivilegeService/GetUserIDTBGSys", ReplyAction="http://tempuri.org/IUserPrivilegeService/GetUserIDTBGSysResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vmUserPrivilege> GetUserIDTBGSysAsync(string strToken, string strEmployeeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserPrivilegeService/GetSecurityUserStatus", ReplyAction="http://tempuri.org/IUserPrivilegeService/GetSecurityUserStatusResponse")]
        ARSystemFrontEnd.SecureAccessService.vmUserPrivilege GetSecurityUserStatus(string strToken, string strUserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserPrivilegeService/GetSecurityUserStatus", ReplyAction="http://tempuri.org/IUserPrivilegeService/GetSecurityUserStatusResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vmUserPrivilege> GetSecurityUserStatusAsync(string strToken, string strUserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserPrivilegeService/GetSecureAccessStatus", ReplyAction="http://tempuri.org/IUserPrivilegeService/GetSecureAccessStatusResponse")]
        ARSystemFrontEnd.SecureAccessService.vmUserPrivilege GetSecureAccessStatus(string strToken, string strUserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserPrivilegeService/GetSecureAccessStatus", ReplyAction="http://tempuri.org/IUserPrivilegeService/GetSecureAccessStatusResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vmUserPrivilege> GetSecureAccessStatusAsync(string strToken, string strUserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserPrivilegeService/GetEmailStatusFromLDAP", ReplyAction="http://tempuri.org/IUserPrivilegeService/GetEmailStatusFromLDAPResponse")]
        ARSystemFrontEnd.SecureAccessService.vmUserPrivilege GetEmailStatusFromLDAP(string strToken, string strUserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserPrivilegeService/GetEmailStatusFromLDAP", ReplyAction="http://tempuri.org/IUserPrivilegeService/GetEmailStatusFromLDAPResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vmUserPrivilege> GetEmailStatusFromLDAPAsync(string strToken, string strUserID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUserPrivilegeServiceChannel : ARSystemFrontEnd.SecureAccessService.IUserPrivilegeService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserPrivilegeServiceClient : System.ServiceModel.ClientBase<ARSystemFrontEnd.SecureAccessService.IUserPrivilegeService>, ARSystemFrontEnd.SecureAccessService.IUserPrivilegeService {
        
        public UserPrivilegeServiceClient() {
        }
        
        public UserPrivilegeServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UserPrivilegeServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserPrivilegeServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserPrivilegeServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int GetUserPrivilegeCount(string strToken, string strEmployeeID, string strFullName, string strResignDate) {
            return base.Channel.GetUserPrivilegeCount(strToken, strEmployeeID, strFullName, strResignDate);
        }
        
        public System.Threading.Tasks.Task<int> GetUserPrivilegeCountAsync(string strToken, string strEmployeeID, string strFullName, string strResignDate) {
            return base.Channel.GetUserPrivilegeCountAsync(strToken, strEmployeeID, strFullName, strResignDate);
        }
        
        public ARSystemFrontEnd.SecureAccessService.SyncStagingMstEmployee[] GetUserPrivilegeList(string strToken, string strEmployeeID, string strFullName, string strResignDate, string strOrderBy, int intRowSkip, int intPageSize) {
            return base.Channel.GetUserPrivilegeList(strToken, strEmployeeID, strFullName, strResignDate, strOrderBy, intRowSkip, intPageSize);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.SyncStagingMstEmployee[]> GetUserPrivilegeListAsync(string strToken, string strEmployeeID, string strFullName, string strResignDate, string strOrderBy, int intRowSkip, int intPageSize) {
            return base.Channel.GetUserPrivilegeListAsync(strToken, strEmployeeID, strFullName, strResignDate, strOrderBy, intRowSkip, intPageSize);
        }
        
        public ARSystemFrontEnd.SecureAccessService.vmUserPrivilege GetUserIDTBGSys(string strToken, string strEmployeeID) {
            return base.Channel.GetUserIDTBGSys(strToken, strEmployeeID);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vmUserPrivilege> GetUserIDTBGSysAsync(string strToken, string strEmployeeID) {
            return base.Channel.GetUserIDTBGSysAsync(strToken, strEmployeeID);
        }
        
        public ARSystemFrontEnd.SecureAccessService.vmUserPrivilege GetSecurityUserStatus(string strToken, string strUserID) {
            return base.Channel.GetSecurityUserStatus(strToken, strUserID);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vmUserPrivilege> GetSecurityUserStatusAsync(string strToken, string strUserID) {
            return base.Channel.GetSecurityUserStatusAsync(strToken, strUserID);
        }
        
        public ARSystemFrontEnd.SecureAccessService.vmUserPrivilege GetSecureAccessStatus(string strToken, string strUserID) {
            return base.Channel.GetSecureAccessStatus(strToken, strUserID);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vmUserPrivilege> GetSecureAccessStatusAsync(string strToken, string strUserID) {
            return base.Channel.GetSecureAccessStatusAsync(strToken, strUserID);
        }
        
        public ARSystemFrontEnd.SecureAccessService.vmUserPrivilege GetEmailStatusFromLDAP(string strToken, string strUserID) {
            return base.Channel.GetEmailStatusFromLDAP(strToken, strUserID);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vmUserPrivilege> GetEmailStatusFromLDAPAsync(string strToken, string strUserID) {
            return base.Channel.GetEmailStatusFromLDAPAsync(strToken, strUserID);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SecureAccessService.IUserVendorService")]
    public interface IUserVendorService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserVendorService/LoginVendor", ReplyAction="http://tempuri.org/IUserVendorService/LoginVendorResponse")]
        ARSystemFrontEnd.SecureAccessService.vmUserVendorLogin LoginVendor(ARSystemFrontEnd.SecureAccessService.vmLogin login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserVendorService/LoginVendor", ReplyAction="http://tempuri.org/IUserVendorService/LoginVendorResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vmUserVendorLogin> LoginVendorAsync(ARSystemFrontEnd.SecureAccessService.vmLogin login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserVendorService/LoginVendorValidation", ReplyAction="http://tempuri.org/IUserVendorService/LoginVendorValidationResponse")]
        ARSystemFrontEnd.SecureAccessService.vmUserVendorLogin LoginVendorValidation(ARSystemFrontEnd.SecureAccessService.vmLogin login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserVendorService/LoginVendorValidation", ReplyAction="http://tempuri.org/IUserVendorService/LoginVendorValidationResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vmUserVendorLogin> LoginVendorValidationAsync(ARSystemFrontEnd.SecureAccessService.vmLogin login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserVendorService/CheckUserVendorToken", ReplyAction="http://tempuri.org/IUserVendorService/CheckUserVendorTokenResponse")]
        ARSystemFrontEnd.SecureAccessService.vmUserCredential CheckUserVendorToken(string strToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserVendorService/CheckUserVendorToken", ReplyAction="http://tempuri.org/IUserVendorService/CheckUserVendorTokenResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vmUserCredential> CheckUserVendorTokenAsync(string strToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserVendorService/CheckUserVendorAccess", ReplyAction="http://tempuri.org/IUserVendorService/CheckUserVendorAccessResponse")]
        bool CheckUserVendorAccess(string strToken, string strActionToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserVendorService/CheckUserVendorAccess", ReplyAction="http://tempuri.org/IUserVendorService/CheckUserVendorAccessResponse")]
        System.Threading.Tasks.Task<bool> CheckUserVendorAccessAsync(string strToken, string strActionToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserVendorService/CheckExternalTokenVendor", ReplyAction="http://tempuri.org/IUserVendorService/CheckExternalTokenVendorResponse")]
        bool CheckExternalTokenVendor(string strApplication, string strToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserVendorService/CheckExternalTokenVendor", ReplyAction="http://tempuri.org/IUserVendorService/CheckExternalTokenVendorResponse")]
        System.Threading.Tasks.Task<bool> CheckExternalTokenVendorAsync(string strApplication, string strToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserVendorService/LogoutVendor", ReplyAction="http://tempuri.org/IUserVendorService/LogoutVendorResponse")]
        void LogoutVendor(string strToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserVendorService/LogoutVendor", ReplyAction="http://tempuri.org/IUserVendorService/LogoutVendorResponse")]
        System.Threading.Tasks.Task LogoutVendorAsync(string strToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserVendorService/ForceLogoutVendor", ReplyAction="http://tempuri.org/IUserVendorService/ForceLogoutVendorResponse")]
        ARSystemFrontEnd.SecureAccessService.mstUserVendor ForceLogoutVendor(string strToken, string strUserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserVendorService/ForceLogoutVendor", ReplyAction="http://tempuri.org/IUserVendorService/ForceLogoutVendorResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstUserVendor> ForceLogoutVendorAsync(string strToken, string strUserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserVendorService/CheckUserVendorAccessNew", ReplyAction="http://tempuri.org/IUserVendorService/CheckUserVendorAccessNewResponse")]
        bool CheckUserVendorAccessNew(string strToken, string actionToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserVendorService/CheckUserVendorAccessNew", ReplyAction="http://tempuri.org/IUserVendorService/CheckUserVendorAccessNewResponse")]
        System.Threading.Tasks.Task<bool> CheckUserVendorAccessNewAsync(string strToken, string actionToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserVendorService/GetUserVendorCount", ReplyAction="http://tempuri.org/IUserVendorService/GetUserVendorCountResponse")]
        int GetUserVendorCount(string strToken, string strUserID, string strFullName, int intRoleID, string strPhoneNumber, string strEmail, int intIsActive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserVendorService/GetUserVendorCount", ReplyAction="http://tempuri.org/IUserVendorService/GetUserVendorCountResponse")]
        System.Threading.Tasks.Task<int> GetUserVendorCountAsync(string strToken, string strUserID, string strFullName, int intRoleID, string strPhoneNumber, string strEmail, int intIsActive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserVendorService/GetUserVendorToList", ReplyAction="http://tempuri.org/IUserVendorService/GetUserVendorToListResponse")]
        ARSystemFrontEnd.SecureAccessService.vwUserVendor[] GetUserVendorToList(string strToken, string strUserID, string strFullName, int intRoleID, string strPhoneNumber, string strEmail, int intIsActive, string strOrderBy, int intRowSkip, int intPageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserVendorService/GetUserVendorToList", ReplyAction="http://tempuri.org/IUserVendorService/GetUserVendorToListResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vwUserVendor[]> GetUserVendorToListAsync(string strToken, string strUserID, string strFullName, int intRoleID, string strPhoneNumber, string strEmail, int intIsActive, string strOrderBy, int intRowSkip, int intPageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserVendorService/GetUserVendorSingle", ReplyAction="http://tempuri.org/IUserVendorService/GetUserVendorSingleResponse")]
        ARSystemFrontEnd.SecureAccessService.mstUserVendor GetUserVendorSingle(string strToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserVendorService/GetUserVendorSingle", ReplyAction="http://tempuri.org/IUserVendorService/GetUserVendorSingleResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstUserVendor> GetUserVendorSingleAsync(string strToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserVendorService/GetUserVendorByID", ReplyAction="http://tempuri.org/IUserVendorService/GetUserVendorByIDResponse")]
        ARSystemFrontEnd.SecureAccessService.mstUserVendor GetUserVendorByID(string UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserVendorService/GetUserVendorByID", ReplyAction="http://tempuri.org/IUserVendorService/GetUserVendorByIDResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstUserVendor> GetUserVendorByIDAsync(string UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserVendorService/UpdateUserVendor", ReplyAction="http://tempuri.org/IUserVendorService/UpdateUserVendorResponse")]
        ARSystemFrontEnd.SecureAccessService.mstUserVendor UpdateUserVendor(string strToken, string strUserID, string strNewPassword, ARSystemFrontEnd.SecureAccessService.mstUserVendor user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserVendorService/UpdateUserVendor", ReplyAction="http://tempuri.org/IUserVendorService/UpdateUserVendorResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstUserVendor> UpdateUserVendorAsync(string strToken, string strUserID, string strNewPassword, ARSystemFrontEnd.SecureAccessService.mstUserVendor user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserVendorService/UpdatePasswordVendor", ReplyAction="http://tempuri.org/IUserVendorService/UpdatePasswordVendorResponse")]
        ARSystemFrontEnd.SecureAccessService.mstUserVendor UpdatePasswordVendor(string strToken, string strOldPassword, string strNewPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserVendorService/UpdatePasswordVendor", ReplyAction="http://tempuri.org/IUserVendorService/UpdatePasswordVendorResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstUserVendor> UpdatePasswordVendorAsync(string strToken, string strOldPassword, string strNewPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserVendorService/GetVendor", ReplyAction="http://tempuri.org/IUserVendorService/GetVendorResponse")]
        ARSystemFrontEnd.SecureAccessService.mstVendor GetVendor(string vendorID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserVendorService/GetVendor", ReplyAction="http://tempuri.org/IUserVendorService/GetVendorResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstVendor> GetVendorAsync(string vendorID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserVendorService/GetVendorCount", ReplyAction="http://tempuri.org/IUserVendorService/GetVendorCountResponse")]
        int GetVendorCount(string strToken, string strVendorID, string strVendorName, string strVendorInitial, string strEmail, string strAddress1);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserVendorService/GetVendorCount", ReplyAction="http://tempuri.org/IUserVendorService/GetVendorCountResponse")]
        System.Threading.Tasks.Task<int> GetVendorCountAsync(string strToken, string strVendorID, string strVendorName, string strVendorInitial, string strEmail, string strAddress1);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserVendorService/GetVendorToList", ReplyAction="http://tempuri.org/IUserVendorService/GetVendorToListResponse")]
        ARSystemFrontEnd.SecureAccessService.mstVendor[] GetVendorToList(string strToken, string strVendorID, string strVendorName, string strVendorInitial, string strEmail, string strAddress1, string strOrderBy, int intRowSkip, int intPageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserVendorService/GetVendorToList", ReplyAction="http://tempuri.org/IUserVendorService/GetVendorToListResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstVendor[]> GetVendorToListAsync(string strToken, string strVendorID, string strVendorName, string strVendorInitial, string strEmail, string strAddress1, string strOrderBy, int intRowSkip, int intPageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserVendorService/UpdateUserVendorFromExt", ReplyAction="http://tempuri.org/IUserVendorService/UpdateUserVendorFromExtResponse")]
        string UpdateUserVendorFromExt(string strToken, ARSystemFrontEnd.SecureAccessService.mstUserVendor user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserVendorService/UpdateUserVendorFromExt", ReplyAction="http://tempuri.org/IUserVendorService/UpdateUserVendorFromExtResponse")]
        System.Threading.Tasks.Task<string> UpdateUserVendorFromExtAsync(string strToken, ARSystemFrontEnd.SecureAccessService.mstUserVendor user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserVendorService/InsertUserVendorFromExt", ReplyAction="http://tempuri.org/IUserVendorService/InsertUserVendorFromExtResponse")]
        string InsertUserVendorFromExt(string strToken, ARSystemFrontEnd.SecureAccessService.mstUserVendor user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserVendorService/InsertUserVendorFromExt", ReplyAction="http://tempuri.org/IUserVendorService/InsertUserVendorFromExtResponse")]
        System.Threading.Tasks.Task<string> InsertUserVendorFromExtAsync(string strToken, ARSystemFrontEnd.SecureAccessService.mstUserVendor user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserVendorService/UpdateVendorFromExt", ReplyAction="http://tempuri.org/IUserVendorService/UpdateVendorFromExtResponse")]
        string UpdateVendorFromExt(string strToken, ARSystemFrontEnd.SecureAccessService.mstVendor vendor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserVendorService/UpdateVendorFromExt", ReplyAction="http://tempuri.org/IUserVendorService/UpdateVendorFromExtResponse")]
        System.Threading.Tasks.Task<string> UpdateVendorFromExtAsync(string strToken, ARSystemFrontEnd.SecureAccessService.mstVendor vendor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserVendorService/InsertVendorFromExt", ReplyAction="http://tempuri.org/IUserVendorService/InsertVendorFromExtResponse")]
        string InsertVendorFromExt(string strToken, ARSystemFrontEnd.SecureAccessService.mstVendor vendor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserVendorService/InsertVendorFromExt", ReplyAction="http://tempuri.org/IUserVendorService/InsertVendorFromExtResponse")]
        System.Threading.Tasks.Task<string> InsertVendorFromExtAsync(string strToken, ARSystemFrontEnd.SecureAccessService.mstVendor vendor);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUserVendorServiceChannel : ARSystemFrontEnd.SecureAccessService.IUserVendorService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserVendorServiceClient : System.ServiceModel.ClientBase<ARSystemFrontEnd.SecureAccessService.IUserVendorService>, ARSystemFrontEnd.SecureAccessService.IUserVendorService {
        
        public UserVendorServiceClient() {
        }
        
        public UserVendorServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UserVendorServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserVendorServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserVendorServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ARSystemFrontEnd.SecureAccessService.vmUserVendorLogin LoginVendor(ARSystemFrontEnd.SecureAccessService.vmLogin login) {
            return base.Channel.LoginVendor(login);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vmUserVendorLogin> LoginVendorAsync(ARSystemFrontEnd.SecureAccessService.vmLogin login) {
            return base.Channel.LoginVendorAsync(login);
        }
        
        public ARSystemFrontEnd.SecureAccessService.vmUserVendorLogin LoginVendorValidation(ARSystemFrontEnd.SecureAccessService.vmLogin login) {
            return base.Channel.LoginVendorValidation(login);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vmUserVendorLogin> LoginVendorValidationAsync(ARSystemFrontEnd.SecureAccessService.vmLogin login) {
            return base.Channel.LoginVendorValidationAsync(login);
        }
        
        public ARSystemFrontEnd.SecureAccessService.vmUserCredential CheckUserVendorToken(string strToken) {
            return base.Channel.CheckUserVendorToken(strToken);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vmUserCredential> CheckUserVendorTokenAsync(string strToken) {
            return base.Channel.CheckUserVendorTokenAsync(strToken);
        }
        
        public bool CheckUserVendorAccess(string strToken, string strActionToken) {
            return base.Channel.CheckUserVendorAccess(strToken, strActionToken);
        }
        
        public System.Threading.Tasks.Task<bool> CheckUserVendorAccessAsync(string strToken, string strActionToken) {
            return base.Channel.CheckUserVendorAccessAsync(strToken, strActionToken);
        }
        
        public bool CheckExternalTokenVendor(string strApplication, string strToken) {
            return base.Channel.CheckExternalTokenVendor(strApplication, strToken);
        }
        
        public System.Threading.Tasks.Task<bool> CheckExternalTokenVendorAsync(string strApplication, string strToken) {
            return base.Channel.CheckExternalTokenVendorAsync(strApplication, strToken);
        }
        
        public void LogoutVendor(string strToken) {
            base.Channel.LogoutVendor(strToken);
        }
        
        public System.Threading.Tasks.Task LogoutVendorAsync(string strToken) {
            return base.Channel.LogoutVendorAsync(strToken);
        }
        
        public ARSystemFrontEnd.SecureAccessService.mstUserVendor ForceLogoutVendor(string strToken, string strUserID) {
            return base.Channel.ForceLogoutVendor(strToken, strUserID);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstUserVendor> ForceLogoutVendorAsync(string strToken, string strUserID) {
            return base.Channel.ForceLogoutVendorAsync(strToken, strUserID);
        }
        
        public bool CheckUserVendorAccessNew(string strToken, string actionToken) {
            return base.Channel.CheckUserVendorAccessNew(strToken, actionToken);
        }
        
        public System.Threading.Tasks.Task<bool> CheckUserVendorAccessNewAsync(string strToken, string actionToken) {
            return base.Channel.CheckUserVendorAccessNewAsync(strToken, actionToken);
        }
        
        public int GetUserVendorCount(string strToken, string strUserID, string strFullName, int intRoleID, string strPhoneNumber, string strEmail, int intIsActive) {
            return base.Channel.GetUserVendorCount(strToken, strUserID, strFullName, intRoleID, strPhoneNumber, strEmail, intIsActive);
        }
        
        public System.Threading.Tasks.Task<int> GetUserVendorCountAsync(string strToken, string strUserID, string strFullName, int intRoleID, string strPhoneNumber, string strEmail, int intIsActive) {
            return base.Channel.GetUserVendorCountAsync(strToken, strUserID, strFullName, intRoleID, strPhoneNumber, strEmail, intIsActive);
        }
        
        public ARSystemFrontEnd.SecureAccessService.vwUserVendor[] GetUserVendorToList(string strToken, string strUserID, string strFullName, int intRoleID, string strPhoneNumber, string strEmail, int intIsActive, string strOrderBy, int intRowSkip, int intPageSize) {
            return base.Channel.GetUserVendorToList(strToken, strUserID, strFullName, intRoleID, strPhoneNumber, strEmail, intIsActive, strOrderBy, intRowSkip, intPageSize);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vwUserVendor[]> GetUserVendorToListAsync(string strToken, string strUserID, string strFullName, int intRoleID, string strPhoneNumber, string strEmail, int intIsActive, string strOrderBy, int intRowSkip, int intPageSize) {
            return base.Channel.GetUserVendorToListAsync(strToken, strUserID, strFullName, intRoleID, strPhoneNumber, strEmail, intIsActive, strOrderBy, intRowSkip, intPageSize);
        }
        
        public ARSystemFrontEnd.SecureAccessService.mstUserVendor GetUserVendorSingle(string strToken) {
            return base.Channel.GetUserVendorSingle(strToken);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstUserVendor> GetUserVendorSingleAsync(string strToken) {
            return base.Channel.GetUserVendorSingleAsync(strToken);
        }
        
        public ARSystemFrontEnd.SecureAccessService.mstUserVendor GetUserVendorByID(string UserID) {
            return base.Channel.GetUserVendorByID(UserID);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstUserVendor> GetUserVendorByIDAsync(string UserID) {
            return base.Channel.GetUserVendorByIDAsync(UserID);
        }
        
        public ARSystemFrontEnd.SecureAccessService.mstUserVendor UpdateUserVendor(string strToken, string strUserID, string strNewPassword, ARSystemFrontEnd.SecureAccessService.mstUserVendor user) {
            return base.Channel.UpdateUserVendor(strToken, strUserID, strNewPassword, user);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstUserVendor> UpdateUserVendorAsync(string strToken, string strUserID, string strNewPassword, ARSystemFrontEnd.SecureAccessService.mstUserVendor user) {
            return base.Channel.UpdateUserVendorAsync(strToken, strUserID, strNewPassword, user);
        }
        
        public ARSystemFrontEnd.SecureAccessService.mstUserVendor UpdatePasswordVendor(string strToken, string strOldPassword, string strNewPassword) {
            return base.Channel.UpdatePasswordVendor(strToken, strOldPassword, strNewPassword);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstUserVendor> UpdatePasswordVendorAsync(string strToken, string strOldPassword, string strNewPassword) {
            return base.Channel.UpdatePasswordVendorAsync(strToken, strOldPassword, strNewPassword);
        }
        
        public ARSystemFrontEnd.SecureAccessService.mstVendor GetVendor(string vendorID) {
            return base.Channel.GetVendor(vendorID);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstVendor> GetVendorAsync(string vendorID) {
            return base.Channel.GetVendorAsync(vendorID);
        }
        
        public int GetVendorCount(string strToken, string strVendorID, string strVendorName, string strVendorInitial, string strEmail, string strAddress1) {
            return base.Channel.GetVendorCount(strToken, strVendorID, strVendorName, strVendorInitial, strEmail, strAddress1);
        }
        
        public System.Threading.Tasks.Task<int> GetVendorCountAsync(string strToken, string strVendorID, string strVendorName, string strVendorInitial, string strEmail, string strAddress1) {
            return base.Channel.GetVendorCountAsync(strToken, strVendorID, strVendorName, strVendorInitial, strEmail, strAddress1);
        }
        
        public ARSystemFrontEnd.SecureAccessService.mstVendor[] GetVendorToList(string strToken, string strVendorID, string strVendorName, string strVendorInitial, string strEmail, string strAddress1, string strOrderBy, int intRowSkip, int intPageSize) {
            return base.Channel.GetVendorToList(strToken, strVendorID, strVendorName, strVendorInitial, strEmail, strAddress1, strOrderBy, intRowSkip, intPageSize);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstVendor[]> GetVendorToListAsync(string strToken, string strVendorID, string strVendorName, string strVendorInitial, string strEmail, string strAddress1, string strOrderBy, int intRowSkip, int intPageSize) {
            return base.Channel.GetVendorToListAsync(strToken, strVendorID, strVendorName, strVendorInitial, strEmail, strAddress1, strOrderBy, intRowSkip, intPageSize);
        }
        
        public string UpdateUserVendorFromExt(string strToken, ARSystemFrontEnd.SecureAccessService.mstUserVendor user) {
            return base.Channel.UpdateUserVendorFromExt(strToken, user);
        }
        
        public System.Threading.Tasks.Task<string> UpdateUserVendorFromExtAsync(string strToken, ARSystemFrontEnd.SecureAccessService.mstUserVendor user) {
            return base.Channel.UpdateUserVendorFromExtAsync(strToken, user);
        }
        
        public string InsertUserVendorFromExt(string strToken, ARSystemFrontEnd.SecureAccessService.mstUserVendor user) {
            return base.Channel.InsertUserVendorFromExt(strToken, user);
        }
        
        public System.Threading.Tasks.Task<string> InsertUserVendorFromExtAsync(string strToken, ARSystemFrontEnd.SecureAccessService.mstUserVendor user) {
            return base.Channel.InsertUserVendorFromExtAsync(strToken, user);
        }
        
        public string UpdateVendorFromExt(string strToken, ARSystemFrontEnd.SecureAccessService.mstVendor vendor) {
            return base.Channel.UpdateVendorFromExt(strToken, vendor);
        }
        
        public System.Threading.Tasks.Task<string> UpdateVendorFromExtAsync(string strToken, ARSystemFrontEnd.SecureAccessService.mstVendor vendor) {
            return base.Channel.UpdateVendorFromExtAsync(strToken, vendor);
        }
        
        public string InsertVendorFromExt(string strToken, ARSystemFrontEnd.SecureAccessService.mstVendor vendor) {
            return base.Channel.InsertVendorFromExt(strToken, vendor);
        }
        
        public System.Threading.Tasks.Task<string> InsertVendorFromExtAsync(string strToken, ARSystemFrontEnd.SecureAccessService.mstVendor vendor) {
            return base.Channel.InsertVendorFromExtAsync(strToken, vendor);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SecureAccessService.IActionService")]
    public interface IActionService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IActionService/GetGridActionList", ReplyAction="http://tempuri.org/IActionService/GetGridActionListResponse")]
        ARSystemFrontEnd.SecureAccessService.vwAction[] GetGridActionList(string strToken, ARSystemFrontEnd.SecureAccessService.vwAction filter, string strOrderBy, int intRowSkip, int intPageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IActionService/GetGridActionList", ReplyAction="http://tempuri.org/IActionService/GetGridActionListResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vwAction[]> GetGridActionListAsync(string strToken, ARSystemFrontEnd.SecureAccessService.vwAction filter, string strOrderBy, int intRowSkip, int intPageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IActionService/GetGridActionListCount", ReplyAction="http://tempuri.org/IActionService/GetGridActionListCountResponse")]
        int GetGridActionListCount(string strToken, ARSystemFrontEnd.SecureAccessService.vwAction filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IActionService/GetGridActionListCount", ReplyAction="http://tempuri.org/IActionService/GetGridActionListCountResponse")]
        System.Threading.Tasks.Task<int> GetGridActionListCountAsync(string strToken, ARSystemFrontEnd.SecureAccessService.vwAction filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IActionService/CreateAction", ReplyAction="http://tempuri.org/IActionService/CreateActionResponse")]
        ARSystemFrontEnd.SecureAccessService.mstAction CreateAction(string strToken, ARSystemFrontEnd.SecureAccessService.mstAction action);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IActionService/CreateAction", ReplyAction="http://tempuri.org/IActionService/CreateActionResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstAction> CreateActionAsync(string strToken, ARSystemFrontEnd.SecureAccessService.mstAction action);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IActionService/UpdateAction", ReplyAction="http://tempuri.org/IActionService/UpdateActionResponse")]
        ARSystemFrontEnd.SecureAccessService.mstAction UpdateAction(string strToken, ARSystemFrontEnd.SecureAccessService.mstAction oldAction);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IActionService/UpdateAction", ReplyAction="http://tempuri.org/IActionService/UpdateActionResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstAction> UpdateActionAsync(string strToken, ARSystemFrontEnd.SecureAccessService.mstAction oldAction);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IActionService/GetListAction", ReplyAction="http://tempuri.org/IActionService/GetListActionResponse")]
        ARSystemFrontEnd.SecureAccessService.mstAction[] GetListAction(string strToken, int applicationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IActionService/GetListAction", ReplyAction="http://tempuri.org/IActionService/GetListActionResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstAction[]> GetListActionAsync(string strToken, int applicationID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IActionServiceChannel : ARSystemFrontEnd.SecureAccessService.IActionService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ActionServiceClient : System.ServiceModel.ClientBase<ARSystemFrontEnd.SecureAccessService.IActionService>, ARSystemFrontEnd.SecureAccessService.IActionService {
        
        public ActionServiceClient() {
        }
        
        public ActionServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ActionServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ActionServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ActionServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ARSystemFrontEnd.SecureAccessService.vwAction[] GetGridActionList(string strToken, ARSystemFrontEnd.SecureAccessService.vwAction filter, string strOrderBy, int intRowSkip, int intPageSize) {
            return base.Channel.GetGridActionList(strToken, filter, strOrderBy, intRowSkip, intPageSize);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vwAction[]> GetGridActionListAsync(string strToken, ARSystemFrontEnd.SecureAccessService.vwAction filter, string strOrderBy, int intRowSkip, int intPageSize) {
            return base.Channel.GetGridActionListAsync(strToken, filter, strOrderBy, intRowSkip, intPageSize);
        }
        
        public int GetGridActionListCount(string strToken, ARSystemFrontEnd.SecureAccessService.vwAction filter) {
            return base.Channel.GetGridActionListCount(strToken, filter);
        }
        
        public System.Threading.Tasks.Task<int> GetGridActionListCountAsync(string strToken, ARSystemFrontEnd.SecureAccessService.vwAction filter) {
            return base.Channel.GetGridActionListCountAsync(strToken, filter);
        }
        
        public ARSystemFrontEnd.SecureAccessService.mstAction CreateAction(string strToken, ARSystemFrontEnd.SecureAccessService.mstAction action) {
            return base.Channel.CreateAction(strToken, action);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstAction> CreateActionAsync(string strToken, ARSystemFrontEnd.SecureAccessService.mstAction action) {
            return base.Channel.CreateActionAsync(strToken, action);
        }
        
        public ARSystemFrontEnd.SecureAccessService.mstAction UpdateAction(string strToken, ARSystemFrontEnd.SecureAccessService.mstAction oldAction) {
            return base.Channel.UpdateAction(strToken, oldAction);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstAction> UpdateActionAsync(string strToken, ARSystemFrontEnd.SecureAccessService.mstAction oldAction) {
            return base.Channel.UpdateActionAsync(strToken, oldAction);
        }
        
        public ARSystemFrontEnd.SecureAccessService.mstAction[] GetListAction(string strToken, int applicationID) {
            return base.Channel.GetListAction(strToken, applicationID);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstAction[]> GetListActionAsync(string strToken, int applicationID) {
            return base.Channel.GetListActionAsync(strToken, applicationID);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SecureAccessService.IDashboardService")]
    public interface IDashboardService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDashboardService/GetDashboardCount", ReplyAction="http://tempuri.org/IDashboardService/GetDashboardCountResponse")]
        int GetDashboardCount(string strToken, ARSystemFrontEnd.SecureAccessService.vwDashboard filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDashboardService/GetDashboardCount", ReplyAction="http://tempuri.org/IDashboardService/GetDashboardCountResponse")]
        System.Threading.Tasks.Task<int> GetDashboardCountAsync(string strToken, ARSystemFrontEnd.SecureAccessService.vwDashboard filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDashboardService/GetDashboardToList", ReplyAction="http://tempuri.org/IDashboardService/GetDashboardToListResponse")]
        ARSystemFrontEnd.SecureAccessService.vwDashboard[] GetDashboardToList(string strToken, ARSystemFrontEnd.SecureAccessService.vwDashboard filter, string strOrderBy, int intRowSkip, int intPageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDashboardService/GetDashboardToList", ReplyAction="http://tempuri.org/IDashboardService/GetDashboardToListResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vwDashboard[]> GetDashboardToListAsync(string strToken, ARSystemFrontEnd.SecureAccessService.vwDashboard filter, string strOrderBy, int intRowSkip, int intPageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDashboardService/GetDashboardSingle", ReplyAction="http://tempuri.org/IDashboardService/GetDashboardSingleResponse")]
        ARSystemFrontEnd.SecureAccessService.vwDashboardNavigation GetDashboardSingle(string strToken, int dashboardID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDashboardService/GetDashboardSingle", ReplyAction="http://tempuri.org/IDashboardService/GetDashboardSingleResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vwDashboardNavigation> GetDashboardSingleAsync(string strToken, int dashboardID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDashboardService/GetCategoryList", ReplyAction="http://tempuri.org/IDashboardService/GetCategoryListResponse")]
        ARSystemFrontEnd.SecureAccessService.mstDashboardCategory[] GetCategoryList(string strToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDashboardService/GetCategoryList", ReplyAction="http://tempuri.org/IDashboardService/GetCategoryListResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstDashboardCategory[]> GetCategoryListAsync(string strToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDashboardService/GetDirectorateList", ReplyAction="http://tempuri.org/IDashboardService/GetDirectorateListResponse")]
        ARSystemFrontEnd.SecureAccessService.mstDirectorate[] GetDirectorateList(string strToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDashboardService/GetDirectorateList", ReplyAction="http://tempuri.org/IDashboardService/GetDirectorateListResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstDirectorate[]> GetDirectorateListAsync(string strToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDashboardService/CreateDashboard", ReplyAction="http://tempuri.org/IDashboardService/CreateDashboardResponse")]
        ARSystemFrontEnd.SecureAccessService.mstDashboard CreateDashboard(string strToken, ARSystemFrontEnd.SecureAccessService.mstDashboard dashboard);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDashboardService/CreateDashboard", ReplyAction="http://tempuri.org/IDashboardService/CreateDashboardResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstDashboard> CreateDashboardAsync(string strToken, ARSystemFrontEnd.SecureAccessService.mstDashboard dashboard);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDashboardService/UpdateDashboard", ReplyAction="http://tempuri.org/IDashboardService/UpdateDashboardResponse")]
        ARSystemFrontEnd.SecureAccessService.mstDashboard UpdateDashboard(string strToken, ARSystemFrontEnd.SecureAccessService.mstDashboard dashboard);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDashboardService/UpdateDashboard", ReplyAction="http://tempuri.org/IDashboardService/UpdateDashboardResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstDashboard> UpdateDashboardAsync(string strToken, ARSystemFrontEnd.SecureAccessService.mstDashboard dashboard);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDashboardService/DeleteDashboard", ReplyAction="http://tempuri.org/IDashboardService/DeleteDashboardResponse")]
        bool DeleteDashboard(string strToken, int dashboardID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDashboardService/DeleteDashboard", ReplyAction="http://tempuri.org/IDashboardService/DeleteDashboardResponse")]
        System.Threading.Tasks.Task<bool> DeleteDashboardAsync(string strToken, int dashboardID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDashboardServiceChannel : ARSystemFrontEnd.SecureAccessService.IDashboardService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DashboardServiceClient : System.ServiceModel.ClientBase<ARSystemFrontEnd.SecureAccessService.IDashboardService>, ARSystemFrontEnd.SecureAccessService.IDashboardService {
        
        public DashboardServiceClient() {
        }
        
        public DashboardServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DashboardServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DashboardServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DashboardServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int GetDashboardCount(string strToken, ARSystemFrontEnd.SecureAccessService.vwDashboard filter) {
            return base.Channel.GetDashboardCount(strToken, filter);
        }
        
        public System.Threading.Tasks.Task<int> GetDashboardCountAsync(string strToken, ARSystemFrontEnd.SecureAccessService.vwDashboard filter) {
            return base.Channel.GetDashboardCountAsync(strToken, filter);
        }
        
        public ARSystemFrontEnd.SecureAccessService.vwDashboard[] GetDashboardToList(string strToken, ARSystemFrontEnd.SecureAccessService.vwDashboard filter, string strOrderBy, int intRowSkip, int intPageSize) {
            return base.Channel.GetDashboardToList(strToken, filter, strOrderBy, intRowSkip, intPageSize);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vwDashboard[]> GetDashboardToListAsync(string strToken, ARSystemFrontEnd.SecureAccessService.vwDashboard filter, string strOrderBy, int intRowSkip, int intPageSize) {
            return base.Channel.GetDashboardToListAsync(strToken, filter, strOrderBy, intRowSkip, intPageSize);
        }
        
        public ARSystemFrontEnd.SecureAccessService.vwDashboardNavigation GetDashboardSingle(string strToken, int dashboardID) {
            return base.Channel.GetDashboardSingle(strToken, dashboardID);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vwDashboardNavigation> GetDashboardSingleAsync(string strToken, int dashboardID) {
            return base.Channel.GetDashboardSingleAsync(strToken, dashboardID);
        }
        
        public ARSystemFrontEnd.SecureAccessService.mstDashboardCategory[] GetCategoryList(string strToken) {
            return base.Channel.GetCategoryList(strToken);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstDashboardCategory[]> GetCategoryListAsync(string strToken) {
            return base.Channel.GetCategoryListAsync(strToken);
        }
        
        public ARSystemFrontEnd.SecureAccessService.mstDirectorate[] GetDirectorateList(string strToken) {
            return base.Channel.GetDirectorateList(strToken);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstDirectorate[]> GetDirectorateListAsync(string strToken) {
            return base.Channel.GetDirectorateListAsync(strToken);
        }
        
        public ARSystemFrontEnd.SecureAccessService.mstDashboard CreateDashboard(string strToken, ARSystemFrontEnd.SecureAccessService.mstDashboard dashboard) {
            return base.Channel.CreateDashboard(strToken, dashboard);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstDashboard> CreateDashboardAsync(string strToken, ARSystemFrontEnd.SecureAccessService.mstDashboard dashboard) {
            return base.Channel.CreateDashboardAsync(strToken, dashboard);
        }
        
        public ARSystemFrontEnd.SecureAccessService.mstDashboard UpdateDashboard(string strToken, ARSystemFrontEnd.SecureAccessService.mstDashboard dashboard) {
            return base.Channel.UpdateDashboard(strToken, dashboard);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstDashboard> UpdateDashboardAsync(string strToken, ARSystemFrontEnd.SecureAccessService.mstDashboard dashboard) {
            return base.Channel.UpdateDashboardAsync(strToken, dashboard);
        }
        
        public bool DeleteDashboard(string strToken, int dashboardID) {
            return base.Channel.DeleteDashboard(strToken, dashboardID);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteDashboardAsync(string strToken, int dashboardID) {
            return base.Channel.DeleteDashboardAsync(strToken, dashboardID);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SecureAccessService.ITaskToDoService")]
    public interface ITaskToDoService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITaskToDoService/GetTaskToDoList", ReplyAction="http://tempuri.org/ITaskToDoService/GetTaskToDoListResponse")]
        ARSystemFrontEnd.SecureAccessService.vwTaskToDo[] GetTaskToDoList(string strToken, ARSystemFrontEnd.SecureAccessService.vwTaskToDo filter, string strOrderBy, int intRowSkip, int intPageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITaskToDoService/GetTaskToDoList", ReplyAction="http://tempuri.org/ITaskToDoService/GetTaskToDoListResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vwTaskToDo[]> GetTaskToDoListAsync(string strToken, ARSystemFrontEnd.SecureAccessService.vwTaskToDo filter, string strOrderBy, int intRowSkip, int intPageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITaskToDoService/GetTaskToDoListCount", ReplyAction="http://tempuri.org/ITaskToDoService/GetTaskToDoListCountResponse")]
        int GetTaskToDoListCount(string strToken, ARSystemFrontEnd.SecureAccessService.vwTaskToDo filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITaskToDoService/GetTaskToDoListCount", ReplyAction="http://tempuri.org/ITaskToDoService/GetTaskToDoListCountResponse")]
        System.Threading.Tasks.Task<int> GetTaskToDoListCountAsync(string strToken, ARSystemFrontEnd.SecureAccessService.vwTaskToDo filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITaskToDoService/CreateTaskToDo", ReplyAction="http://tempuri.org/ITaskToDoService/CreateTaskToDoResponse")]
        ARSystemFrontEnd.SecureAccessService.mstTaskToDo CreateTaskToDo(string strToken, ARSystemFrontEnd.SecureAccessService.mstTaskToDo TaskToDo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITaskToDoService/CreateTaskToDo", ReplyAction="http://tempuri.org/ITaskToDoService/CreateTaskToDoResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstTaskToDo> CreateTaskToDoAsync(string strToken, ARSystemFrontEnd.SecureAccessService.mstTaskToDo TaskToDo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITaskToDoService/UpdateTaskToDo", ReplyAction="http://tempuri.org/ITaskToDoService/UpdateTaskToDoResponse")]
        ARSystemFrontEnd.SecureAccessService.mstTaskToDo UpdateTaskToDo(string strToken, ARSystemFrontEnd.SecureAccessService.mstTaskToDo oldTaskToDo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITaskToDoService/UpdateTaskToDo", ReplyAction="http://tempuri.org/ITaskToDoService/UpdateTaskToDoResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstTaskToDo> UpdateTaskToDoAsync(string strToken, ARSystemFrontEnd.SecureAccessService.mstTaskToDo oldTaskToDo);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITaskToDoServiceChannel : ARSystemFrontEnd.SecureAccessService.ITaskToDoService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TaskToDoServiceClient : System.ServiceModel.ClientBase<ARSystemFrontEnd.SecureAccessService.ITaskToDoService>, ARSystemFrontEnd.SecureAccessService.ITaskToDoService {
        
        public TaskToDoServiceClient() {
        }
        
        public TaskToDoServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TaskToDoServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TaskToDoServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TaskToDoServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ARSystemFrontEnd.SecureAccessService.vwTaskToDo[] GetTaskToDoList(string strToken, ARSystemFrontEnd.SecureAccessService.vwTaskToDo filter, string strOrderBy, int intRowSkip, int intPageSize) {
            return base.Channel.GetTaskToDoList(strToken, filter, strOrderBy, intRowSkip, intPageSize);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vwTaskToDo[]> GetTaskToDoListAsync(string strToken, ARSystemFrontEnd.SecureAccessService.vwTaskToDo filter, string strOrderBy, int intRowSkip, int intPageSize) {
            return base.Channel.GetTaskToDoListAsync(strToken, filter, strOrderBy, intRowSkip, intPageSize);
        }
        
        public int GetTaskToDoListCount(string strToken, ARSystemFrontEnd.SecureAccessService.vwTaskToDo filter) {
            return base.Channel.GetTaskToDoListCount(strToken, filter);
        }
        
        public System.Threading.Tasks.Task<int> GetTaskToDoListCountAsync(string strToken, ARSystemFrontEnd.SecureAccessService.vwTaskToDo filter) {
            return base.Channel.GetTaskToDoListCountAsync(strToken, filter);
        }
        
        public ARSystemFrontEnd.SecureAccessService.mstTaskToDo CreateTaskToDo(string strToken, ARSystemFrontEnd.SecureAccessService.mstTaskToDo TaskToDo) {
            return base.Channel.CreateTaskToDo(strToken, TaskToDo);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstTaskToDo> CreateTaskToDoAsync(string strToken, ARSystemFrontEnd.SecureAccessService.mstTaskToDo TaskToDo) {
            return base.Channel.CreateTaskToDoAsync(strToken, TaskToDo);
        }
        
        public ARSystemFrontEnd.SecureAccessService.mstTaskToDo UpdateTaskToDo(string strToken, ARSystemFrontEnd.SecureAccessService.mstTaskToDo oldTaskToDo) {
            return base.Channel.UpdateTaskToDo(strToken, oldTaskToDo);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstTaskToDo> UpdateTaskToDoAsync(string strToken, ARSystemFrontEnd.SecureAccessService.mstTaskToDo oldTaskToDo) {
            return base.Channel.UpdateTaskToDoAsync(strToken, oldTaskToDo);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SecureAccessService.IUserCustomerService")]
    public interface IUserCustomerService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserCustomerService/LoginCustomer", ReplyAction="http://tempuri.org/IUserCustomerService/LoginCustomerResponse")]
        ARSystemFrontEnd.SecureAccessService.vmUserCustomerLogin LoginCustomer(ARSystemFrontEnd.SecureAccessService.vmLogin login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserCustomerService/LoginCustomer", ReplyAction="http://tempuri.org/IUserCustomerService/LoginCustomerResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vmUserCustomerLogin> LoginCustomerAsync(ARSystemFrontEnd.SecureAccessService.vmLogin login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserCustomerService/LoginCustomerValidation", ReplyAction="http://tempuri.org/IUserCustomerService/LoginCustomerValidationResponse")]
        ARSystemFrontEnd.SecureAccessService.vmUserCustomerLogin LoginCustomerValidation(ARSystemFrontEnd.SecureAccessService.vmLogin login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserCustomerService/LoginCustomerValidation", ReplyAction="http://tempuri.org/IUserCustomerService/LoginCustomerValidationResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vmUserCustomerLogin> LoginCustomerValidationAsync(ARSystemFrontEnd.SecureAccessService.vmLogin login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserCustomerService/CheckUserCustomerToken", ReplyAction="http://tempuri.org/IUserCustomerService/CheckUserCustomerTokenResponse")]
        ARSystemFrontEnd.SecureAccessService.vmUserCredential CheckUserCustomerToken(string strToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserCustomerService/CheckUserCustomerToken", ReplyAction="http://tempuri.org/IUserCustomerService/CheckUserCustomerTokenResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vmUserCredential> CheckUserCustomerTokenAsync(string strToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserCustomerService/CheckUserCustomerAccess", ReplyAction="http://tempuri.org/IUserCustomerService/CheckUserCustomerAccessResponse")]
        bool CheckUserCustomerAccess(string strToken, string strActionToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserCustomerService/CheckUserCustomerAccess", ReplyAction="http://tempuri.org/IUserCustomerService/CheckUserCustomerAccessResponse")]
        System.Threading.Tasks.Task<bool> CheckUserCustomerAccessAsync(string strToken, string strActionToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserCustomerService/CheckExternalTokenCustomer", ReplyAction="http://tempuri.org/IUserCustomerService/CheckExternalTokenCustomerResponse")]
        bool CheckExternalTokenCustomer(string strApplication, string strToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserCustomerService/CheckExternalTokenCustomer", ReplyAction="http://tempuri.org/IUserCustomerService/CheckExternalTokenCustomerResponse")]
        System.Threading.Tasks.Task<bool> CheckExternalTokenCustomerAsync(string strApplication, string strToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserCustomerService/LogoutUserCustomer", ReplyAction="http://tempuri.org/IUserCustomerService/LogoutUserCustomerResponse")]
        void LogoutUserCustomer(string strToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserCustomerService/LogoutUserCustomer", ReplyAction="http://tempuri.org/IUserCustomerService/LogoutUserCustomerResponse")]
        System.Threading.Tasks.Task LogoutUserCustomerAsync(string strToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserCustomerService/ForceLogoutUserCustomer", ReplyAction="http://tempuri.org/IUserCustomerService/ForceLogoutUserCustomerResponse")]
        ARSystemFrontEnd.SecureAccessService.mstUserCustomer ForceLogoutUserCustomer(string strToken, string strUserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserCustomerService/ForceLogoutUserCustomer", ReplyAction="http://tempuri.org/IUserCustomerService/ForceLogoutUserCustomerResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstUserCustomer> ForceLogoutUserCustomerAsync(string strToken, string strUserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserCustomerService/CheckUserCustomerAccessNew", ReplyAction="http://tempuri.org/IUserCustomerService/CheckUserCustomerAccessNewResponse")]
        bool CheckUserCustomerAccessNew(string strToken, string actionToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserCustomerService/CheckUserCustomerAccessNew", ReplyAction="http://tempuri.org/IUserCustomerService/CheckUserCustomerAccessNewResponse")]
        System.Threading.Tasks.Task<bool> CheckUserCustomerAccessNewAsync(string strToken, string actionToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserCustomerService/GetUserCustomerCount", ReplyAction="http://tempuri.org/IUserCustomerService/GetUserCustomerCountResponse")]
        int GetUserCustomerCount(string strToken, ARSystemFrontEnd.SecureAccessService.vwUserCustomer user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserCustomerService/GetUserCustomerCount", ReplyAction="http://tempuri.org/IUserCustomerService/GetUserCustomerCountResponse")]
        System.Threading.Tasks.Task<int> GetUserCustomerCountAsync(string strToken, ARSystemFrontEnd.SecureAccessService.vwUserCustomer user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserCustomerService/GetUserCustomerList", ReplyAction="http://tempuri.org/IUserCustomerService/GetUserCustomerListResponse")]
        ARSystemFrontEnd.SecureAccessService.vwUserCustomer[] GetUserCustomerList(string strToken, ARSystemFrontEnd.SecureAccessService.vwUserCustomer user, string strOrderBy, int intRowSkip, int intPageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserCustomerService/GetUserCustomerList", ReplyAction="http://tempuri.org/IUserCustomerService/GetUserCustomerListResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vwUserCustomer[]> GetUserCustomerListAsync(string strToken, ARSystemFrontEnd.SecureAccessService.vwUserCustomer user, string strOrderBy, int intRowSkip, int intPageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserCustomerService/GetUserCustomerSingle", ReplyAction="http://tempuri.org/IUserCustomerService/GetUserCustomerSingleResponse")]
        ARSystemFrontEnd.SecureAccessService.vwUserCustomer GetUserCustomerSingle(string strToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserCustomerService/GetUserCustomerSingle", ReplyAction="http://tempuri.org/IUserCustomerService/GetUserCustomerSingleResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vwUserCustomer> GetUserCustomerSingleAsync(string strToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserCustomerService/GetUserCustomerByID", ReplyAction="http://tempuri.org/IUserCustomerService/GetUserCustomerByIDResponse")]
        ARSystemFrontEnd.SecureAccessService.vwUserCustomer GetUserCustomerByID(string UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserCustomerService/GetUserCustomerByID", ReplyAction="http://tempuri.org/IUserCustomerService/GetUserCustomerByIDResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vwUserCustomer> GetUserCustomerByIDAsync(string UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserCustomerService/UpdateUserCustomer", ReplyAction="http://tempuri.org/IUserCustomerService/UpdateUserCustomerResponse")]
        ARSystemFrontEnd.SecureAccessService.vmUserCustomer UpdateUserCustomer(string strToken, ARSystemFrontEnd.SecureAccessService.vmUserCustomer user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserCustomerService/UpdateUserCustomer", ReplyAction="http://tempuri.org/IUserCustomerService/UpdateUserCustomerResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vmUserCustomer> UpdateUserCustomerAsync(string strToken, ARSystemFrontEnd.SecureAccessService.vmUserCustomer user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserCustomerService/CreateUserCustomer", ReplyAction="http://tempuri.org/IUserCustomerService/CreateUserCustomerResponse")]
        ARSystemFrontEnd.SecureAccessService.vmUserCustomer CreateUserCustomer(string strToken, ARSystemFrontEnd.SecureAccessService.vmUserCustomer user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserCustomerService/CreateUserCustomer", ReplyAction="http://tempuri.org/IUserCustomerService/CreateUserCustomerResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vmUserCustomer> CreateUserCustomerAsync(string strToken, ARSystemFrontEnd.SecureAccessService.vmUserCustomer user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserCustomerService/CreateUserCustomerByIntegration", ReplyAction="http://tempuri.org/IUserCustomerService/CreateUserCustomerByIntegrationResponse")]
        ARSystemFrontEnd.SecureAccessService.vmUserCustomer CreateUserCustomerByIntegration(ARSystemFrontEnd.SecureAccessService.vmUserCustomer user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserCustomerService/CreateUserCustomerByIntegration", ReplyAction="http://tempuri.org/IUserCustomerService/CreateUserCustomerByIntegrationResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vmUserCustomer> CreateUserCustomerByIntegrationAsync(ARSystemFrontEnd.SecureAccessService.vmUserCustomer user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserCustomerService/GetCustomerVendor", ReplyAction="http://tempuri.org/IUserCustomerService/GetCustomerVendorResponse")]
        ARSystemFrontEnd.SecureAccessService.mstCustomerVendor GetCustomerVendor(int customerVendorID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserCustomerService/GetCustomerVendor", ReplyAction="http://tempuri.org/IUserCustomerService/GetCustomerVendorResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstCustomerVendor> GetCustomerVendorAsync(int customerVendorID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserCustomerService/GetCustomerVendorCount", ReplyAction="http://tempuri.org/IUserCustomerService/GetCustomerVendorCountResponse")]
        int GetCustomerVendorCount(string strToken, int intCustomerVendorID, string strCustomerVendor, string strTelephone, string strEmail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserCustomerService/GetCustomerVendorCount", ReplyAction="http://tempuri.org/IUserCustomerService/GetCustomerVendorCountResponse")]
        System.Threading.Tasks.Task<int> GetCustomerVendorCountAsync(string strToken, int intCustomerVendorID, string strCustomerVendor, string strTelephone, string strEmail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserCustomerService/GetCustomerVendorList", ReplyAction="http://tempuri.org/IUserCustomerService/GetCustomerVendorListResponse")]
        ARSystemFrontEnd.SecureAccessService.mstCustomerVendor[] GetCustomerVendorList(string strToken, int intCustomerVendorID, string strCustomerVendor, string strTelephone, string strEmail, string strOrderBy, int intRowSkip, int intPageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserCustomerService/GetCustomerVendorList", ReplyAction="http://tempuri.org/IUserCustomerService/GetCustomerVendorListResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstCustomerVendor[]> GetCustomerVendorListAsync(string strToken, int intCustomerVendorID, string strCustomerVendor, string strTelephone, string strEmail, string strOrderBy, int intRowSkip, int intPageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserCustomerService/GetCustomerList", ReplyAction="http://tempuri.org/IUserCustomerService/GetCustomerListResponse")]
        ARSystemFrontEnd.SecureAccessService.mstCustomer[] GetCustomerList(string strToken, System.Nullable<bool> bolIsTelco);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserCustomerService/GetCustomerList", ReplyAction="http://tempuri.org/IUserCustomerService/GetCustomerListResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstCustomer[]> GetCustomerListAsync(string strToken, System.Nullable<bool> bolIsTelco);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUserCustomerServiceChannel : ARSystemFrontEnd.SecureAccessService.IUserCustomerService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserCustomerServiceClient : System.ServiceModel.ClientBase<ARSystemFrontEnd.SecureAccessService.IUserCustomerService>, ARSystemFrontEnd.SecureAccessService.IUserCustomerService {
        
        public UserCustomerServiceClient() {
        }
        
        public UserCustomerServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UserCustomerServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserCustomerServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserCustomerServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ARSystemFrontEnd.SecureAccessService.vmUserCustomerLogin LoginCustomer(ARSystemFrontEnd.SecureAccessService.vmLogin login) {
            return base.Channel.LoginCustomer(login);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vmUserCustomerLogin> LoginCustomerAsync(ARSystemFrontEnd.SecureAccessService.vmLogin login) {
            return base.Channel.LoginCustomerAsync(login);
        }
        
        public ARSystemFrontEnd.SecureAccessService.vmUserCustomerLogin LoginCustomerValidation(ARSystemFrontEnd.SecureAccessService.vmLogin login) {
            return base.Channel.LoginCustomerValidation(login);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vmUserCustomerLogin> LoginCustomerValidationAsync(ARSystemFrontEnd.SecureAccessService.vmLogin login) {
            return base.Channel.LoginCustomerValidationAsync(login);
        }
        
        public ARSystemFrontEnd.SecureAccessService.vmUserCredential CheckUserCustomerToken(string strToken) {
            return base.Channel.CheckUserCustomerToken(strToken);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vmUserCredential> CheckUserCustomerTokenAsync(string strToken) {
            return base.Channel.CheckUserCustomerTokenAsync(strToken);
        }
        
        public bool CheckUserCustomerAccess(string strToken, string strActionToken) {
            return base.Channel.CheckUserCustomerAccess(strToken, strActionToken);
        }
        
        public System.Threading.Tasks.Task<bool> CheckUserCustomerAccessAsync(string strToken, string strActionToken) {
            return base.Channel.CheckUserCustomerAccessAsync(strToken, strActionToken);
        }
        
        public bool CheckExternalTokenCustomer(string strApplication, string strToken) {
            return base.Channel.CheckExternalTokenCustomer(strApplication, strToken);
        }
        
        public System.Threading.Tasks.Task<bool> CheckExternalTokenCustomerAsync(string strApplication, string strToken) {
            return base.Channel.CheckExternalTokenCustomerAsync(strApplication, strToken);
        }
        
        public void LogoutUserCustomer(string strToken) {
            base.Channel.LogoutUserCustomer(strToken);
        }
        
        public System.Threading.Tasks.Task LogoutUserCustomerAsync(string strToken) {
            return base.Channel.LogoutUserCustomerAsync(strToken);
        }
        
        public ARSystemFrontEnd.SecureAccessService.mstUserCustomer ForceLogoutUserCustomer(string strToken, string strUserID) {
            return base.Channel.ForceLogoutUserCustomer(strToken, strUserID);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstUserCustomer> ForceLogoutUserCustomerAsync(string strToken, string strUserID) {
            return base.Channel.ForceLogoutUserCustomerAsync(strToken, strUserID);
        }
        
        public bool CheckUserCustomerAccessNew(string strToken, string actionToken) {
            return base.Channel.CheckUserCustomerAccessNew(strToken, actionToken);
        }
        
        public System.Threading.Tasks.Task<bool> CheckUserCustomerAccessNewAsync(string strToken, string actionToken) {
            return base.Channel.CheckUserCustomerAccessNewAsync(strToken, actionToken);
        }
        
        public int GetUserCustomerCount(string strToken, ARSystemFrontEnd.SecureAccessService.vwUserCustomer user) {
            return base.Channel.GetUserCustomerCount(strToken, user);
        }
        
        public System.Threading.Tasks.Task<int> GetUserCustomerCountAsync(string strToken, ARSystemFrontEnd.SecureAccessService.vwUserCustomer user) {
            return base.Channel.GetUserCustomerCountAsync(strToken, user);
        }
        
        public ARSystemFrontEnd.SecureAccessService.vwUserCustomer[] GetUserCustomerList(string strToken, ARSystemFrontEnd.SecureAccessService.vwUserCustomer user, string strOrderBy, int intRowSkip, int intPageSize) {
            return base.Channel.GetUserCustomerList(strToken, user, strOrderBy, intRowSkip, intPageSize);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vwUserCustomer[]> GetUserCustomerListAsync(string strToken, ARSystemFrontEnd.SecureAccessService.vwUserCustomer user, string strOrderBy, int intRowSkip, int intPageSize) {
            return base.Channel.GetUserCustomerListAsync(strToken, user, strOrderBy, intRowSkip, intPageSize);
        }
        
        public ARSystemFrontEnd.SecureAccessService.vwUserCustomer GetUserCustomerSingle(string strToken) {
            return base.Channel.GetUserCustomerSingle(strToken);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vwUserCustomer> GetUserCustomerSingleAsync(string strToken) {
            return base.Channel.GetUserCustomerSingleAsync(strToken);
        }
        
        public ARSystemFrontEnd.SecureAccessService.vwUserCustomer GetUserCustomerByID(string UserID) {
            return base.Channel.GetUserCustomerByID(UserID);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vwUserCustomer> GetUserCustomerByIDAsync(string UserID) {
            return base.Channel.GetUserCustomerByIDAsync(UserID);
        }
        
        public ARSystemFrontEnd.SecureAccessService.vmUserCustomer UpdateUserCustomer(string strToken, ARSystemFrontEnd.SecureAccessService.vmUserCustomer user) {
            return base.Channel.UpdateUserCustomer(strToken, user);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vmUserCustomer> UpdateUserCustomerAsync(string strToken, ARSystemFrontEnd.SecureAccessService.vmUserCustomer user) {
            return base.Channel.UpdateUserCustomerAsync(strToken, user);
        }
        
        public ARSystemFrontEnd.SecureAccessService.vmUserCustomer CreateUserCustomer(string strToken, ARSystemFrontEnd.SecureAccessService.vmUserCustomer user) {
            return base.Channel.CreateUserCustomer(strToken, user);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vmUserCustomer> CreateUserCustomerAsync(string strToken, ARSystemFrontEnd.SecureAccessService.vmUserCustomer user) {
            return base.Channel.CreateUserCustomerAsync(strToken, user);
        }
        
        public ARSystemFrontEnd.SecureAccessService.vmUserCustomer CreateUserCustomerByIntegration(ARSystemFrontEnd.SecureAccessService.vmUserCustomer user) {
            return base.Channel.CreateUserCustomerByIntegration(user);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vmUserCustomer> CreateUserCustomerByIntegrationAsync(ARSystemFrontEnd.SecureAccessService.vmUserCustomer user) {
            return base.Channel.CreateUserCustomerByIntegrationAsync(user);
        }
        
        public ARSystemFrontEnd.SecureAccessService.mstCustomerVendor GetCustomerVendor(int customerVendorID) {
            return base.Channel.GetCustomerVendor(customerVendorID);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstCustomerVendor> GetCustomerVendorAsync(int customerVendorID) {
            return base.Channel.GetCustomerVendorAsync(customerVendorID);
        }
        
        public int GetCustomerVendorCount(string strToken, int intCustomerVendorID, string strCustomerVendor, string strTelephone, string strEmail) {
            return base.Channel.GetCustomerVendorCount(strToken, intCustomerVendorID, strCustomerVendor, strTelephone, strEmail);
        }
        
        public System.Threading.Tasks.Task<int> GetCustomerVendorCountAsync(string strToken, int intCustomerVendorID, string strCustomerVendor, string strTelephone, string strEmail) {
            return base.Channel.GetCustomerVendorCountAsync(strToken, intCustomerVendorID, strCustomerVendor, strTelephone, strEmail);
        }
        
        public ARSystemFrontEnd.SecureAccessService.mstCustomerVendor[] GetCustomerVendorList(string strToken, int intCustomerVendorID, string strCustomerVendor, string strTelephone, string strEmail, string strOrderBy, int intRowSkip, int intPageSize) {
            return base.Channel.GetCustomerVendorList(strToken, intCustomerVendorID, strCustomerVendor, strTelephone, strEmail, strOrderBy, intRowSkip, intPageSize);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstCustomerVendor[]> GetCustomerVendorListAsync(string strToken, int intCustomerVendorID, string strCustomerVendor, string strTelephone, string strEmail, string strOrderBy, int intRowSkip, int intPageSize) {
            return base.Channel.GetCustomerVendorListAsync(strToken, intCustomerVendorID, strCustomerVendor, strTelephone, strEmail, strOrderBy, intRowSkip, intPageSize);
        }
        
        public ARSystemFrontEnd.SecureAccessService.mstCustomer[] GetCustomerList(string strToken, System.Nullable<bool> bolIsTelco) {
            return base.Channel.GetCustomerList(strToken, bolIsTelco);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstCustomer[]> GetCustomerListAsync(string strToken, System.Nullable<bool> bolIsTelco) {
            return base.Channel.GetCustomerListAsync(strToken, bolIsTelco);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SecureAccessService.IHomeDashboardService")]
    public interface IHomeDashboardService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHomeDashboardService/GetHomeDashboardList", ReplyAction="http://tempuri.org/IHomeDashboardService/GetHomeDashboardListResponse")]
        ARSystemFrontEnd.SecureAccessService.vwHomeDashboard[] GetHomeDashboardList(string strToken, ARSystemFrontEnd.SecureAccessService.vwHomeDashboard filter, string strOrderBy, int intRowSkip, int intPageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHomeDashboardService/GetHomeDashboardList", ReplyAction="http://tempuri.org/IHomeDashboardService/GetHomeDashboardListResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vwHomeDashboard[]> GetHomeDashboardListAsync(string strToken, ARSystemFrontEnd.SecureAccessService.vwHomeDashboard filter, string strOrderBy, int intRowSkip, int intPageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHomeDashboardService/GetHomeDashboardListCount", ReplyAction="http://tempuri.org/IHomeDashboardService/GetHomeDashboardListCountResponse")]
        int GetHomeDashboardListCount(string strToken, ARSystemFrontEnd.SecureAccessService.vwHomeDashboard filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHomeDashboardService/GetHomeDashboardListCount", ReplyAction="http://tempuri.org/IHomeDashboardService/GetHomeDashboardListCountResponse")]
        System.Threading.Tasks.Task<int> GetHomeDashboardListCountAsync(string strToken, ARSystemFrontEnd.SecureAccessService.vwHomeDashboard filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHomeDashboardService/CreateHomeDashboard", ReplyAction="http://tempuri.org/IHomeDashboardService/CreateHomeDashboardResponse")]
        ARSystemFrontEnd.SecureAccessService.mstHomeDashboard CreateHomeDashboard(string strToken, ARSystemFrontEnd.SecureAccessService.mstHomeDashboard HomeDashboard);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHomeDashboardService/CreateHomeDashboard", ReplyAction="http://tempuri.org/IHomeDashboardService/CreateHomeDashboardResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstHomeDashboard> CreateHomeDashboardAsync(string strToken, ARSystemFrontEnd.SecureAccessService.mstHomeDashboard HomeDashboard);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHomeDashboardService/UpdateHomeDashboard", ReplyAction="http://tempuri.org/IHomeDashboardService/UpdateHomeDashboardResponse")]
        ARSystemFrontEnd.SecureAccessService.mstHomeDashboard UpdateHomeDashboard(string strToken, ARSystemFrontEnd.SecureAccessService.mstHomeDashboard oldHomeDashboard);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHomeDashboardService/UpdateHomeDashboard", ReplyAction="http://tempuri.org/IHomeDashboardService/UpdateHomeDashboardResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstHomeDashboard> UpdateHomeDashboardAsync(string strToken, ARSystemFrontEnd.SecureAccessService.mstHomeDashboard oldHomeDashboard);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IHomeDashboardServiceChannel : ARSystemFrontEnd.SecureAccessService.IHomeDashboardService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class HomeDashboardServiceClient : System.ServiceModel.ClientBase<ARSystemFrontEnd.SecureAccessService.IHomeDashboardService>, ARSystemFrontEnd.SecureAccessService.IHomeDashboardService {
        
        public HomeDashboardServiceClient() {
        }
        
        public HomeDashboardServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public HomeDashboardServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public HomeDashboardServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public HomeDashboardServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ARSystemFrontEnd.SecureAccessService.vwHomeDashboard[] GetHomeDashboardList(string strToken, ARSystemFrontEnd.SecureAccessService.vwHomeDashboard filter, string strOrderBy, int intRowSkip, int intPageSize) {
            return base.Channel.GetHomeDashboardList(strToken, filter, strOrderBy, intRowSkip, intPageSize);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vwHomeDashboard[]> GetHomeDashboardListAsync(string strToken, ARSystemFrontEnd.SecureAccessService.vwHomeDashboard filter, string strOrderBy, int intRowSkip, int intPageSize) {
            return base.Channel.GetHomeDashboardListAsync(strToken, filter, strOrderBy, intRowSkip, intPageSize);
        }
        
        public int GetHomeDashboardListCount(string strToken, ARSystemFrontEnd.SecureAccessService.vwHomeDashboard filter) {
            return base.Channel.GetHomeDashboardListCount(strToken, filter);
        }
        
        public System.Threading.Tasks.Task<int> GetHomeDashboardListCountAsync(string strToken, ARSystemFrontEnd.SecureAccessService.vwHomeDashboard filter) {
            return base.Channel.GetHomeDashboardListCountAsync(strToken, filter);
        }
        
        public ARSystemFrontEnd.SecureAccessService.mstHomeDashboard CreateHomeDashboard(string strToken, ARSystemFrontEnd.SecureAccessService.mstHomeDashboard HomeDashboard) {
            return base.Channel.CreateHomeDashboard(strToken, HomeDashboard);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstHomeDashboard> CreateHomeDashboardAsync(string strToken, ARSystemFrontEnd.SecureAccessService.mstHomeDashboard HomeDashboard) {
            return base.Channel.CreateHomeDashboardAsync(strToken, HomeDashboard);
        }
        
        public ARSystemFrontEnd.SecureAccessService.mstHomeDashboard UpdateHomeDashboard(string strToken, ARSystemFrontEnd.SecureAccessService.mstHomeDashboard oldHomeDashboard) {
            return base.Channel.UpdateHomeDashboard(strToken, oldHomeDashboard);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstHomeDashboard> UpdateHomeDashboardAsync(string strToken, ARSystemFrontEnd.SecureAccessService.mstHomeDashboard oldHomeDashboard) {
            return base.Channel.UpdateHomeDashboardAsync(strToken, oldHomeDashboard);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SecureAccessService.IDashboardNavigationService")]
    public interface IDashboardNavigationService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDashboardNavigationService/GetDashboardNavigationListFiltered" +
            "ByRole", ReplyAction="http://tempuri.org/IDashboardNavigationService/GetDashboardNavigationListFiltered" +
            "ByRoleResponse")]
        ARSystemFrontEnd.SecureAccessService.vmDashboardNavigation GetDashboardNavigationListFilteredByRole(string strToken, ARSystemFrontEnd.SecureAccessService.vwDashboardNavigation filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDashboardNavigationService/GetDashboardNavigationListFiltered" +
            "ByRole", ReplyAction="http://tempuri.org/IDashboardNavigationService/GetDashboardNavigationListFiltered" +
            "ByRoleResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vmDashboardNavigation> GetDashboardNavigationListFilteredByRoleAsync(string strToken, ARSystemFrontEnd.SecureAccessService.vwDashboardNavigation filter);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDashboardNavigationServiceChannel : ARSystemFrontEnd.SecureAccessService.IDashboardNavigationService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DashboardNavigationServiceClient : System.ServiceModel.ClientBase<ARSystemFrontEnd.SecureAccessService.IDashboardNavigationService>, ARSystemFrontEnd.SecureAccessService.IDashboardNavigationService {
        
        public DashboardNavigationServiceClient() {
        }
        
        public DashboardNavigationServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DashboardNavigationServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DashboardNavigationServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DashboardNavigationServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ARSystemFrontEnd.SecureAccessService.vmDashboardNavigation GetDashboardNavigationListFilteredByRole(string strToken, ARSystemFrontEnd.SecureAccessService.vwDashboardNavigation filter) {
            return base.Channel.GetDashboardNavigationListFilteredByRole(strToken, filter);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vmDashboardNavigation> GetDashboardNavigationListFilteredByRoleAsync(string strToken, ARSystemFrontEnd.SecureAccessService.vwDashboardNavigation filter) {
            return base.Channel.GetDashboardNavigationListFilteredByRoleAsync(strToken, filter);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SecureAccessService.IDashboardCategoryService")]
    public interface IDashboardCategoryService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDashboardCategoryService/GetDashboardCategoryCount", ReplyAction="http://tempuri.org/IDashboardCategoryService/GetDashboardCategoryCountResponse")]
        int GetDashboardCategoryCount(string strToken, ARSystemFrontEnd.SecureAccessService.mstDashboardCategory filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDashboardCategoryService/GetDashboardCategoryCount", ReplyAction="http://tempuri.org/IDashboardCategoryService/GetDashboardCategoryCountResponse")]
        System.Threading.Tasks.Task<int> GetDashboardCategoryCountAsync(string strToken, ARSystemFrontEnd.SecureAccessService.mstDashboardCategory filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDashboardCategoryService/GetDashboardCategoryToList", ReplyAction="http://tempuri.org/IDashboardCategoryService/GetDashboardCategoryToListResponse")]
        ARSystemFrontEnd.SecureAccessService.mstDashboardCategory[] GetDashboardCategoryToList(string strToken, ARSystemFrontEnd.SecureAccessService.mstDashboardCategory filter, string strOrderBy, int intRowSkip, int intPageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDashboardCategoryService/GetDashboardCategoryToList", ReplyAction="http://tempuri.org/IDashboardCategoryService/GetDashboardCategoryToListResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstDashboardCategory[]> GetDashboardCategoryToListAsync(string strToken, ARSystemFrontEnd.SecureAccessService.mstDashboardCategory filter, string strOrderBy, int intRowSkip, int intPageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDashboardCategoryService/GetDashboardCategorySingle", ReplyAction="http://tempuri.org/IDashboardCategoryService/GetDashboardCategorySingleResponse")]
        ARSystemFrontEnd.SecureAccessService.mstDashboardCategory GetDashboardCategorySingle(string strToken, int dashboardCategoryID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDashboardCategoryService/GetDashboardCategorySingle", ReplyAction="http://tempuri.org/IDashboardCategoryService/GetDashboardCategorySingleResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstDashboardCategory> GetDashboardCategorySingleAsync(string strToken, int dashboardCategoryID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDashboardCategoryService/CreateDashboardCategory", ReplyAction="http://tempuri.org/IDashboardCategoryService/CreateDashboardCategoryResponse")]
        ARSystemFrontEnd.SecureAccessService.mstDashboardCategory CreateDashboardCategory(string strToken, ARSystemFrontEnd.SecureAccessService.mstDashboardCategory dashboardCategory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDashboardCategoryService/CreateDashboardCategory", ReplyAction="http://tempuri.org/IDashboardCategoryService/CreateDashboardCategoryResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstDashboardCategory> CreateDashboardCategoryAsync(string strToken, ARSystemFrontEnd.SecureAccessService.mstDashboardCategory dashboardCategory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDashboardCategoryService/UpdateDashboardCategory", ReplyAction="http://tempuri.org/IDashboardCategoryService/UpdateDashboardCategoryResponse")]
        ARSystemFrontEnd.SecureAccessService.mstDashboardCategory UpdateDashboardCategory(string strToken, ARSystemFrontEnd.SecureAccessService.mstDashboardCategory dashboardCategory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDashboardCategoryService/UpdateDashboardCategory", ReplyAction="http://tempuri.org/IDashboardCategoryService/UpdateDashboardCategoryResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstDashboardCategory> UpdateDashboardCategoryAsync(string strToken, ARSystemFrontEnd.SecureAccessService.mstDashboardCategory dashboardCategory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDashboardCategoryService/DeleteDashboardCategory", ReplyAction="http://tempuri.org/IDashboardCategoryService/DeleteDashboardCategoryResponse")]
        bool DeleteDashboardCategory(string strToken, int dashboardCategoryID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDashboardCategoryService/DeleteDashboardCategory", ReplyAction="http://tempuri.org/IDashboardCategoryService/DeleteDashboardCategoryResponse")]
        System.Threading.Tasks.Task<bool> DeleteDashboardCategoryAsync(string strToken, int dashboardCategoryID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDashboardCategoryServiceChannel : ARSystemFrontEnd.SecureAccessService.IDashboardCategoryService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DashboardCategoryServiceClient : System.ServiceModel.ClientBase<ARSystemFrontEnd.SecureAccessService.IDashboardCategoryService>, ARSystemFrontEnd.SecureAccessService.IDashboardCategoryService {
        
        public DashboardCategoryServiceClient() {
        }
        
        public DashboardCategoryServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DashboardCategoryServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DashboardCategoryServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DashboardCategoryServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int GetDashboardCategoryCount(string strToken, ARSystemFrontEnd.SecureAccessService.mstDashboardCategory filter) {
            return base.Channel.GetDashboardCategoryCount(strToken, filter);
        }
        
        public System.Threading.Tasks.Task<int> GetDashboardCategoryCountAsync(string strToken, ARSystemFrontEnd.SecureAccessService.mstDashboardCategory filter) {
            return base.Channel.GetDashboardCategoryCountAsync(strToken, filter);
        }
        
        public ARSystemFrontEnd.SecureAccessService.mstDashboardCategory[] GetDashboardCategoryToList(string strToken, ARSystemFrontEnd.SecureAccessService.mstDashboardCategory filter, string strOrderBy, int intRowSkip, int intPageSize) {
            return base.Channel.GetDashboardCategoryToList(strToken, filter, strOrderBy, intRowSkip, intPageSize);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstDashboardCategory[]> GetDashboardCategoryToListAsync(string strToken, ARSystemFrontEnd.SecureAccessService.mstDashboardCategory filter, string strOrderBy, int intRowSkip, int intPageSize) {
            return base.Channel.GetDashboardCategoryToListAsync(strToken, filter, strOrderBy, intRowSkip, intPageSize);
        }
        
        public ARSystemFrontEnd.SecureAccessService.mstDashboardCategory GetDashboardCategorySingle(string strToken, int dashboardCategoryID) {
            return base.Channel.GetDashboardCategorySingle(strToken, dashboardCategoryID);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstDashboardCategory> GetDashboardCategorySingleAsync(string strToken, int dashboardCategoryID) {
            return base.Channel.GetDashboardCategorySingleAsync(strToken, dashboardCategoryID);
        }
        
        public ARSystemFrontEnd.SecureAccessService.mstDashboardCategory CreateDashboardCategory(string strToken, ARSystemFrontEnd.SecureAccessService.mstDashboardCategory dashboardCategory) {
            return base.Channel.CreateDashboardCategory(strToken, dashboardCategory);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstDashboardCategory> CreateDashboardCategoryAsync(string strToken, ARSystemFrontEnd.SecureAccessService.mstDashboardCategory dashboardCategory) {
            return base.Channel.CreateDashboardCategoryAsync(strToken, dashboardCategory);
        }
        
        public ARSystemFrontEnd.SecureAccessService.mstDashboardCategory UpdateDashboardCategory(string strToken, ARSystemFrontEnd.SecureAccessService.mstDashboardCategory dashboardCategory) {
            return base.Channel.UpdateDashboardCategory(strToken, dashboardCategory);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstDashboardCategory> UpdateDashboardCategoryAsync(string strToken, ARSystemFrontEnd.SecureAccessService.mstDashboardCategory dashboardCategory) {
            return base.Channel.UpdateDashboardCategoryAsync(strToken, dashboardCategory);
        }
        
        public bool DeleteDashboardCategory(string strToken, int dashboardCategoryID) {
            return base.Channel.DeleteDashboardCategory(strToken, dashboardCategoryID);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteDashboardCategoryAsync(string strToken, int dashboardCategoryID) {
            return base.Channel.DeleteDashboardCategoryAsync(strToken, dashboardCategoryID);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SecureAccessService.IDirectorateService")]
    public interface IDirectorateService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDirectorateService/GetDirectorateCount", ReplyAction="http://tempuri.org/IDirectorateService/GetDirectorateCountResponse")]
        int GetDirectorateCount(string strToken, ARSystemFrontEnd.SecureAccessService.mstDirectorate filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDirectorateService/GetDirectorateCount", ReplyAction="http://tempuri.org/IDirectorateService/GetDirectorateCountResponse")]
        System.Threading.Tasks.Task<int> GetDirectorateCountAsync(string strToken, ARSystemFrontEnd.SecureAccessService.mstDirectorate filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDirectorateService/GetDirectorateToList", ReplyAction="http://tempuri.org/IDirectorateService/GetDirectorateToListResponse")]
        ARSystemFrontEnd.SecureAccessService.mstDirectorate[] GetDirectorateToList(string strToken, ARSystemFrontEnd.SecureAccessService.mstDirectorate filter, string strOrderBy, int intRowSkip, int intPageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDirectorateService/GetDirectorateToList", ReplyAction="http://tempuri.org/IDirectorateService/GetDirectorateToListResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstDirectorate[]> GetDirectorateToListAsync(string strToken, ARSystemFrontEnd.SecureAccessService.mstDirectorate filter, string strOrderBy, int intRowSkip, int intPageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDirectorateService/GetDirectorateSingle", ReplyAction="http://tempuri.org/IDirectorateService/GetDirectorateSingleResponse")]
        ARSystemFrontEnd.SecureAccessService.mstDirectorate GetDirectorateSingle(string strToken, int directorateID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDirectorateService/GetDirectorateSingle", ReplyAction="http://tempuri.org/IDirectorateService/GetDirectorateSingleResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstDirectorate> GetDirectorateSingleAsync(string strToken, int directorateID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDirectorateService/CreateDirectorate", ReplyAction="http://tempuri.org/IDirectorateService/CreateDirectorateResponse")]
        ARSystemFrontEnd.SecureAccessService.mstDirectorate CreateDirectorate(string strToken, ARSystemFrontEnd.SecureAccessService.mstDirectorate directorate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDirectorateService/CreateDirectorate", ReplyAction="http://tempuri.org/IDirectorateService/CreateDirectorateResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstDirectorate> CreateDirectorateAsync(string strToken, ARSystemFrontEnd.SecureAccessService.mstDirectorate directorate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDirectorateService/UpdateDirectorate", ReplyAction="http://tempuri.org/IDirectorateService/UpdateDirectorateResponse")]
        ARSystemFrontEnd.SecureAccessService.mstDirectorate UpdateDirectorate(string strToken, ARSystemFrontEnd.SecureAccessService.mstDirectorate directorate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDirectorateService/UpdateDirectorate", ReplyAction="http://tempuri.org/IDirectorateService/UpdateDirectorateResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstDirectorate> UpdateDirectorateAsync(string strToken, ARSystemFrontEnd.SecureAccessService.mstDirectorate directorate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDirectorateService/DeleteDirectorate", ReplyAction="http://tempuri.org/IDirectorateService/DeleteDirectorateResponse")]
        bool DeleteDirectorate(string strToken, int directorateID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDirectorateService/DeleteDirectorate", ReplyAction="http://tempuri.org/IDirectorateService/DeleteDirectorateResponse")]
        System.Threading.Tasks.Task<bool> DeleteDirectorateAsync(string strToken, int directorateID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDirectorateServiceChannel : ARSystemFrontEnd.SecureAccessService.IDirectorateService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DirectorateServiceClient : System.ServiceModel.ClientBase<ARSystemFrontEnd.SecureAccessService.IDirectorateService>, ARSystemFrontEnd.SecureAccessService.IDirectorateService {
        
        public DirectorateServiceClient() {
        }
        
        public DirectorateServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DirectorateServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DirectorateServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DirectorateServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int GetDirectorateCount(string strToken, ARSystemFrontEnd.SecureAccessService.mstDirectorate filter) {
            return base.Channel.GetDirectorateCount(strToken, filter);
        }
        
        public System.Threading.Tasks.Task<int> GetDirectorateCountAsync(string strToken, ARSystemFrontEnd.SecureAccessService.mstDirectorate filter) {
            return base.Channel.GetDirectorateCountAsync(strToken, filter);
        }
        
        public ARSystemFrontEnd.SecureAccessService.mstDirectorate[] GetDirectorateToList(string strToken, ARSystemFrontEnd.SecureAccessService.mstDirectorate filter, string strOrderBy, int intRowSkip, int intPageSize) {
            return base.Channel.GetDirectorateToList(strToken, filter, strOrderBy, intRowSkip, intPageSize);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstDirectorate[]> GetDirectorateToListAsync(string strToken, ARSystemFrontEnd.SecureAccessService.mstDirectorate filter, string strOrderBy, int intRowSkip, int intPageSize) {
            return base.Channel.GetDirectorateToListAsync(strToken, filter, strOrderBy, intRowSkip, intPageSize);
        }
        
        public ARSystemFrontEnd.SecureAccessService.mstDirectorate GetDirectorateSingle(string strToken, int directorateID) {
            return base.Channel.GetDirectorateSingle(strToken, directorateID);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstDirectorate> GetDirectorateSingleAsync(string strToken, int directorateID) {
            return base.Channel.GetDirectorateSingleAsync(strToken, directorateID);
        }
        
        public ARSystemFrontEnd.SecureAccessService.mstDirectorate CreateDirectorate(string strToken, ARSystemFrontEnd.SecureAccessService.mstDirectorate directorate) {
            return base.Channel.CreateDirectorate(strToken, directorate);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstDirectorate> CreateDirectorateAsync(string strToken, ARSystemFrontEnd.SecureAccessService.mstDirectorate directorate) {
            return base.Channel.CreateDirectorateAsync(strToken, directorate);
        }
        
        public ARSystemFrontEnd.SecureAccessService.mstDirectorate UpdateDirectorate(string strToken, ARSystemFrontEnd.SecureAccessService.mstDirectorate directorate) {
            return base.Channel.UpdateDirectorate(strToken, directorate);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstDirectorate> UpdateDirectorateAsync(string strToken, ARSystemFrontEnd.SecureAccessService.mstDirectorate directorate) {
            return base.Channel.UpdateDirectorateAsync(strToken, directorate);
        }
        
        public bool DeleteDirectorate(string strToken, int directorateID) {
            return base.Channel.DeleteDirectorate(strToken, directorateID);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteDirectorateAsync(string strToken, int directorateID) {
            return base.Channel.DeleteDirectorateAsync(strToken, directorateID);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SecureAccessService.IDashboardNavigationMenuService")]
    public interface IDashboardNavigationMenuService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDashboardNavigationMenuService/GetApplicationToListFilteredBy" +
            "User", ReplyAction="http://tempuri.org/IDashboardNavigationMenuService/GetApplicationToListFilteredBy" +
            "UserResponse")]
        ARSystemFrontEnd.SecureAccessService.vwApplicationUrl[] GetApplicationToListFilteredByUser(string strToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDashboardNavigationMenuService/GetApplicationToListFilteredBy" +
            "User", ReplyAction="http://tempuri.org/IDashboardNavigationMenuService/GetApplicationToListFilteredBy" +
            "UserResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vwApplicationUrl[]> GetApplicationToListFilteredByUserAsync(string strToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDashboardNavigationMenuService/GetFavoriteMenuList", ReplyAction="http://tempuri.org/IDashboardNavigationMenuService/GetFavoriteMenuListResponse")]
        ARSystemFrontEnd.SecureAccessService.trxFavoriteMenu[] GetFavoriteMenuList(string strToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDashboardNavigationMenuService/GetFavoriteMenuList", ReplyAction="http://tempuri.org/IDashboardNavigationMenuService/GetFavoriteMenuListResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.trxFavoriteMenu[]> GetFavoriteMenuListAsync(string strToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDashboardNavigationMenuService/CreateFavoriteMenu", ReplyAction="http://tempuri.org/IDashboardNavigationMenuService/CreateFavoriteMenuResponse")]
        ARSystemFrontEnd.SecureAccessService.trxFavoriteMenu CreateFavoriteMenu(string strToken, ARSystemFrontEnd.SecureAccessService.trxFavoriteMenu favMenu);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDashboardNavigationMenuService/CreateFavoriteMenu", ReplyAction="http://tempuri.org/IDashboardNavigationMenuService/CreateFavoriteMenuResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.trxFavoriteMenu> CreateFavoriteMenuAsync(string strToken, ARSystemFrontEnd.SecureAccessService.trxFavoriteMenu favMenu);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDashboardNavigationMenuService/DeleteFavoriteMenu", ReplyAction="http://tempuri.org/IDashboardNavigationMenuService/DeleteFavoriteMenuResponse")]
        bool DeleteFavoriteMenu(string strToken, ARSystemFrontEnd.SecureAccessService.trxFavoriteMenu favMenu);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDashboardNavigationMenuService/DeleteFavoriteMenu", ReplyAction="http://tempuri.org/IDashboardNavigationMenuService/DeleteFavoriteMenuResponse")]
        System.Threading.Tasks.Task<bool> DeleteFavoriteMenuAsync(string strToken, ARSystemFrontEnd.SecureAccessService.trxFavoriteMenu favMenu);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDashboardNavigationMenuServiceChannel : ARSystemFrontEnd.SecureAccessService.IDashboardNavigationMenuService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DashboardNavigationMenuServiceClient : System.ServiceModel.ClientBase<ARSystemFrontEnd.SecureAccessService.IDashboardNavigationMenuService>, ARSystemFrontEnd.SecureAccessService.IDashboardNavigationMenuService {
        
        public DashboardNavigationMenuServiceClient() {
        }
        
        public DashboardNavigationMenuServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DashboardNavigationMenuServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DashboardNavigationMenuServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DashboardNavigationMenuServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ARSystemFrontEnd.SecureAccessService.vwApplicationUrl[] GetApplicationToListFilteredByUser(string strToken) {
            return base.Channel.GetApplicationToListFilteredByUser(strToken);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vwApplicationUrl[]> GetApplicationToListFilteredByUserAsync(string strToken) {
            return base.Channel.GetApplicationToListFilteredByUserAsync(strToken);
        }
        
        public ARSystemFrontEnd.SecureAccessService.trxFavoriteMenu[] GetFavoriteMenuList(string strToken) {
            return base.Channel.GetFavoriteMenuList(strToken);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.trxFavoriteMenu[]> GetFavoriteMenuListAsync(string strToken) {
            return base.Channel.GetFavoriteMenuListAsync(strToken);
        }
        
        public ARSystemFrontEnd.SecureAccessService.trxFavoriteMenu CreateFavoriteMenu(string strToken, ARSystemFrontEnd.SecureAccessService.trxFavoriteMenu favMenu) {
            return base.Channel.CreateFavoriteMenu(strToken, favMenu);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.trxFavoriteMenu> CreateFavoriteMenuAsync(string strToken, ARSystemFrontEnd.SecureAccessService.trxFavoriteMenu favMenu) {
            return base.Channel.CreateFavoriteMenuAsync(strToken, favMenu);
        }
        
        public bool DeleteFavoriteMenu(string strToken, ARSystemFrontEnd.SecureAccessService.trxFavoriteMenu favMenu) {
            return base.Channel.DeleteFavoriteMenu(strToken, favMenu);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteFavoriteMenuAsync(string strToken, ARSystemFrontEnd.SecureAccessService.trxFavoriteMenu favMenu) {
            return base.Channel.DeleteFavoriteMenuAsync(strToken, favMenu);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SecureAccessService.IActionNewService")]
    public interface IActionNewService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IActionNewService/GetGridActionNew", ReplyAction="http://tempuri.org/IActionNewService/GetGridActionNewResponse")]
        ARSystemFrontEnd.SecureAccessService.DatatableOfvwActionNewYDz5Kj5d GetGridActionNew(string token, ARSystemFrontEnd.SecureAccessService.dtActionFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IActionNewService/GetGridActionNew", ReplyAction="http://tempuri.org/IActionNewService/GetGridActionNewResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.DatatableOfvwActionNewYDz5Kj5d> GetGridActionNewAsync(string token, ARSystemFrontEnd.SecureAccessService.dtActionFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IActionNewService/GetSingleActionNewIsMenu", ReplyAction="http://tempuri.org/IActionNewService/GetSingleActionNewIsMenuResponse")]
        ARSystemFrontEnd.SecureAccessService.mstActionNew GetSingleActionNewIsMenu(string token, int menuID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IActionNewService/GetSingleActionNewIsMenu", ReplyAction="http://tempuri.org/IActionNewService/GetSingleActionNewIsMenuResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstActionNew> GetSingleActionNewIsMenuAsync(string token, int menuID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IActionNewService/GetListActionNew", ReplyAction="http://tempuri.org/IActionNewService/GetListActionNewResponse")]
        ARSystemFrontEnd.SecureAccessService.vwActionNew[] GetListActionNew(string token, ARSystemFrontEnd.SecureAccessService.vmUpdateAuthorization data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IActionNewService/GetListActionNew", ReplyAction="http://tempuri.org/IActionNewService/GetListActionNewResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vwActionNew[]> GetListActionNewAsync(string token, ARSystemFrontEnd.SecureAccessService.vmUpdateAuthorization data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IActionNewService/GetListActionNewByApplication", ReplyAction="http://tempuri.org/IActionNewService/GetListActionNewByApplicationResponse")]
        ARSystemFrontEnd.SecureAccessService.vwActionNew[] GetListActionNewByApplication(string token, int applicationIDs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IActionNewService/GetListActionNewByApplication", ReplyAction="http://tempuri.org/IActionNewService/GetListActionNewByApplicationResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vwActionNew[]> GetListActionNewByApplicationAsync(string token, int applicationIDs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IActionNewService/GetListActionNewByMenu", ReplyAction="http://tempuri.org/IActionNewService/GetListActionNewByMenuResponse")]
        ARSystemFrontEnd.SecureAccessService.mstActionNew[] GetListActionNewByMenu(string token, int menuID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IActionNewService/GetListActionNewByMenu", ReplyAction="http://tempuri.org/IActionNewService/GetListActionNewByMenuResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstActionNew[]> GetListActionNewByMenuAsync(string token, int menuID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IActionNewService/GetSingleActionNew", ReplyAction="http://tempuri.org/IActionNewService/GetSingleActionNewResponse")]
        ARSystemFrontEnd.SecureAccessService.mstActionNew GetSingleActionNew(string token, int actionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IActionNewService/GetSingleActionNew", ReplyAction="http://tempuri.org/IActionNewService/GetSingleActionNewResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstActionNew> GetSingleActionNewAsync(string token, int actionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IActionNewService/CreateActionNew", ReplyAction="http://tempuri.org/IActionNewService/CreateActionNewResponse")]
        ARSystemFrontEnd.SecureAccessService.mstActionNew CreateActionNew(string token, ARSystemFrontEnd.SecureAccessService.mstActionNew action);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IActionNewService/CreateActionNew", ReplyAction="http://tempuri.org/IActionNewService/CreateActionNewResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstActionNew> CreateActionNewAsync(string token, ARSystemFrontEnd.SecureAccessService.mstActionNew action);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IActionNewService/UpdateActionNew", ReplyAction="http://tempuri.org/IActionNewService/UpdateActionNewResponse")]
        ARSystemFrontEnd.SecureAccessService.mstActionNew UpdateActionNew(string token, ARSystemFrontEnd.SecureAccessService.mstActionNew dataUpdate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IActionNewService/UpdateActionNew", ReplyAction="http://tempuri.org/IActionNewService/UpdateActionNewResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstActionNew> UpdateActionNewAsync(string token, ARSystemFrontEnd.SecureAccessService.mstActionNew dataUpdate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IActionNewService/DeleteActionNew", ReplyAction="http://tempuri.org/IActionNewService/DeleteActionNewResponse")]
        ARSystemFrontEnd.SecureAccessService.mstActionNew DeleteActionNew(string token, int actionNewID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IActionNewService/DeleteActionNew", ReplyAction="http://tempuri.org/IActionNewService/DeleteActionNewResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstActionNew> DeleteActionNewAsync(string token, int actionNewID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IActionNewServiceChannel : ARSystemFrontEnd.SecureAccessService.IActionNewService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ActionNewServiceClient : System.ServiceModel.ClientBase<ARSystemFrontEnd.SecureAccessService.IActionNewService>, ARSystemFrontEnd.SecureAccessService.IActionNewService {
        
        public ActionNewServiceClient() {
        }
        
        public ActionNewServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ActionNewServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ActionNewServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ActionNewServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ARSystemFrontEnd.SecureAccessService.DatatableOfvwActionNewYDz5Kj5d GetGridActionNew(string token, ARSystemFrontEnd.SecureAccessService.dtActionFilter filter) {
            return base.Channel.GetGridActionNew(token, filter);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.DatatableOfvwActionNewYDz5Kj5d> GetGridActionNewAsync(string token, ARSystemFrontEnd.SecureAccessService.dtActionFilter filter) {
            return base.Channel.GetGridActionNewAsync(token, filter);
        }
        
        public ARSystemFrontEnd.SecureAccessService.mstActionNew GetSingleActionNewIsMenu(string token, int menuID) {
            return base.Channel.GetSingleActionNewIsMenu(token, menuID);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstActionNew> GetSingleActionNewIsMenuAsync(string token, int menuID) {
            return base.Channel.GetSingleActionNewIsMenuAsync(token, menuID);
        }
        
        public ARSystemFrontEnd.SecureAccessService.vwActionNew[] GetListActionNew(string token, ARSystemFrontEnd.SecureAccessService.vmUpdateAuthorization data) {
            return base.Channel.GetListActionNew(token, data);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vwActionNew[]> GetListActionNewAsync(string token, ARSystemFrontEnd.SecureAccessService.vmUpdateAuthorization data) {
            return base.Channel.GetListActionNewAsync(token, data);
        }
        
        public ARSystemFrontEnd.SecureAccessService.vwActionNew[] GetListActionNewByApplication(string token, int applicationIDs) {
            return base.Channel.GetListActionNewByApplication(token, applicationIDs);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vwActionNew[]> GetListActionNewByApplicationAsync(string token, int applicationIDs) {
            return base.Channel.GetListActionNewByApplicationAsync(token, applicationIDs);
        }
        
        public ARSystemFrontEnd.SecureAccessService.mstActionNew[] GetListActionNewByMenu(string token, int menuID) {
            return base.Channel.GetListActionNewByMenu(token, menuID);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstActionNew[]> GetListActionNewByMenuAsync(string token, int menuID) {
            return base.Channel.GetListActionNewByMenuAsync(token, menuID);
        }
        
        public ARSystemFrontEnd.SecureAccessService.mstActionNew GetSingleActionNew(string token, int actionID) {
            return base.Channel.GetSingleActionNew(token, actionID);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstActionNew> GetSingleActionNewAsync(string token, int actionID) {
            return base.Channel.GetSingleActionNewAsync(token, actionID);
        }
        
        public ARSystemFrontEnd.SecureAccessService.mstActionNew CreateActionNew(string token, ARSystemFrontEnd.SecureAccessService.mstActionNew action) {
            return base.Channel.CreateActionNew(token, action);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstActionNew> CreateActionNewAsync(string token, ARSystemFrontEnd.SecureAccessService.mstActionNew action) {
            return base.Channel.CreateActionNewAsync(token, action);
        }
        
        public ARSystemFrontEnd.SecureAccessService.mstActionNew UpdateActionNew(string token, ARSystemFrontEnd.SecureAccessService.mstActionNew dataUpdate) {
            return base.Channel.UpdateActionNew(token, dataUpdate);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstActionNew> UpdateActionNewAsync(string token, ARSystemFrontEnd.SecureAccessService.mstActionNew dataUpdate) {
            return base.Channel.UpdateActionNewAsync(token, dataUpdate);
        }
        
        public ARSystemFrontEnd.SecureAccessService.mstActionNew DeleteActionNew(string token, int actionNewID) {
            return base.Channel.DeleteActionNew(token, actionNewID);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstActionNew> DeleteActionNewAsync(string token, int actionNewID) {
            return base.Channel.DeleteActionNewAsync(token, actionNewID);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SecureAccessService.IMenuNewService")]
    public interface IMenuNewService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMenuNewService/GetGridMenuNew", ReplyAction="http://tempuri.org/IMenuNewService/GetGridMenuNewResponse")]
        ARSystemFrontEnd.SecureAccessService.DatatableOfvwMenuYDz5Kj5d GetGridMenuNew(string token, ARSystemFrontEnd.SecureAccessService.dtMenuFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMenuNewService/GetGridMenuNew", ReplyAction="http://tempuri.org/IMenuNewService/GetGridMenuNewResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.DatatableOfvwMenuYDz5Kj5d> GetGridMenuNewAsync(string token, ARSystemFrontEnd.SecureAccessService.dtMenuFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMenuNewService/GetSingleMenuNew", ReplyAction="http://tempuri.org/IMenuNewService/GetSingleMenuNewResponse")]
        ARSystemFrontEnd.SecureAccessService.mstMenuNew GetSingleMenuNew(string token, int menuID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMenuNewService/GetSingleMenuNew", ReplyAction="http://tempuri.org/IMenuNewService/GetSingleMenuNewResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstMenuNew> GetSingleMenuNewAsync(string token, int menuID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMenuNewService/GetListMenuNewByApplication", ReplyAction="http://tempuri.org/IMenuNewService/GetListMenuNewByApplicationResponse")]
        ARSystemFrontEnd.SecureAccessService.mstMenuNew[] GetListMenuNewByApplication(string token, int applicationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMenuNewService/GetListMenuNewByApplication", ReplyAction="http://tempuri.org/IMenuNewService/GetListMenuNewByApplicationResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstMenuNew[]> GetListMenuNewByApplicationAsync(string token, int applicationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMenuNewService/GetListMenuNewByParent", ReplyAction="http://tempuri.org/IMenuNewService/GetListMenuNewByParentResponse")]
        ARSystemFrontEnd.SecureAccessService.mstMenuNew[] GetListMenuNewByParent(string token, int parentID, int applicationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMenuNewService/GetListMenuNewByParent", ReplyAction="http://tempuri.org/IMenuNewService/GetListMenuNewByParentResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstMenuNew[]> GetListMenuNewByParentAsync(string token, int parentID, int applicationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMenuNewService/GetListNestedOrderMenuNewByApplication", ReplyAction="http://tempuri.org/IMenuNewService/GetListNestedOrderMenuNewByApplicationResponse" +
            "")]
        ARSystemFrontEnd.SecureAccessService.vwMenu[] GetListNestedOrderMenuNewByApplication(string token, int applicationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMenuNewService/GetListNestedOrderMenuNewByApplication", ReplyAction="http://tempuri.org/IMenuNewService/GetListNestedOrderMenuNewByApplicationResponse" +
            "")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vwMenu[]> GetListNestedOrderMenuNewByApplicationAsync(string token, int applicationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMenuNewService/GetMenuTreeList", ReplyAction="http://tempuri.org/IMenuNewService/GetMenuTreeListResponse")]
        ARSystemFrontEnd.SecureAccessService.vmTree[] GetMenuTreeList(string token, int roleID, int applicationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMenuNewService/GetMenuTreeList", ReplyAction="http://tempuri.org/IMenuNewService/GetMenuTreeListResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vmTree[]> GetMenuTreeListAsync(string token, int roleID, int applicationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMenuNewService/CreateMenuNew", ReplyAction="http://tempuri.org/IMenuNewService/CreateMenuNewResponse")]
        ARSystemFrontEnd.SecureAccessService.mstMenuNew CreateMenuNew(string token, ARSystemFrontEnd.SecureAccessService.mstMenuNew menu);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMenuNewService/CreateMenuNew", ReplyAction="http://tempuri.org/IMenuNewService/CreateMenuNewResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstMenuNew> CreateMenuNewAsync(string token, ARSystemFrontEnd.SecureAccessService.mstMenuNew menu);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMenuNewService/UpdateMenuNew", ReplyAction="http://tempuri.org/IMenuNewService/UpdateMenuNewResponse")]
        ARSystemFrontEnd.SecureAccessService.mstMenuNew UpdateMenuNew(string token, ARSystemFrontEnd.SecureAccessService.mstMenuNew dataUpdate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMenuNewService/UpdateMenuNew", ReplyAction="http://tempuri.org/IMenuNewService/UpdateMenuNewResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstMenuNew> UpdateMenuNewAsync(string token, ARSystemFrontEnd.SecureAccessService.mstMenuNew dataUpdate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMenuNewService/DeleteMenuNew", ReplyAction="http://tempuri.org/IMenuNewService/DeleteMenuNewResponse")]
        ARSystemFrontEnd.SecureAccessService.mstMenuNew DeleteMenuNew(string token, int menuNewID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMenuNewService/DeleteMenuNew", ReplyAction="http://tempuri.org/IMenuNewService/DeleteMenuNewResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstMenuNew> DeleteMenuNewAsync(string token, int menuNewID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMenuNewServiceChannel : ARSystemFrontEnd.SecureAccessService.IMenuNewService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MenuNewServiceClient : System.ServiceModel.ClientBase<ARSystemFrontEnd.SecureAccessService.IMenuNewService>, ARSystemFrontEnd.SecureAccessService.IMenuNewService {
        
        public MenuNewServiceClient() {
        }
        
        public MenuNewServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MenuNewServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MenuNewServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MenuNewServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ARSystemFrontEnd.SecureAccessService.DatatableOfvwMenuYDz5Kj5d GetGridMenuNew(string token, ARSystemFrontEnd.SecureAccessService.dtMenuFilter filter) {
            return base.Channel.GetGridMenuNew(token, filter);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.DatatableOfvwMenuYDz5Kj5d> GetGridMenuNewAsync(string token, ARSystemFrontEnd.SecureAccessService.dtMenuFilter filter) {
            return base.Channel.GetGridMenuNewAsync(token, filter);
        }
        
        public ARSystemFrontEnd.SecureAccessService.mstMenuNew GetSingleMenuNew(string token, int menuID) {
            return base.Channel.GetSingleMenuNew(token, menuID);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstMenuNew> GetSingleMenuNewAsync(string token, int menuID) {
            return base.Channel.GetSingleMenuNewAsync(token, menuID);
        }
        
        public ARSystemFrontEnd.SecureAccessService.mstMenuNew[] GetListMenuNewByApplication(string token, int applicationID) {
            return base.Channel.GetListMenuNewByApplication(token, applicationID);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstMenuNew[]> GetListMenuNewByApplicationAsync(string token, int applicationID) {
            return base.Channel.GetListMenuNewByApplicationAsync(token, applicationID);
        }
        
        public ARSystemFrontEnd.SecureAccessService.mstMenuNew[] GetListMenuNewByParent(string token, int parentID, int applicationID) {
            return base.Channel.GetListMenuNewByParent(token, parentID, applicationID);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstMenuNew[]> GetListMenuNewByParentAsync(string token, int parentID, int applicationID) {
            return base.Channel.GetListMenuNewByParentAsync(token, parentID, applicationID);
        }
        
        public ARSystemFrontEnd.SecureAccessService.vwMenu[] GetListNestedOrderMenuNewByApplication(string token, int applicationID) {
            return base.Channel.GetListNestedOrderMenuNewByApplication(token, applicationID);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vwMenu[]> GetListNestedOrderMenuNewByApplicationAsync(string token, int applicationID) {
            return base.Channel.GetListNestedOrderMenuNewByApplicationAsync(token, applicationID);
        }
        
        public ARSystemFrontEnd.SecureAccessService.vmTree[] GetMenuTreeList(string token, int roleID, int applicationID) {
            return base.Channel.GetMenuTreeList(token, roleID, applicationID);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vmTree[]> GetMenuTreeListAsync(string token, int roleID, int applicationID) {
            return base.Channel.GetMenuTreeListAsync(token, roleID, applicationID);
        }
        
        public ARSystemFrontEnd.SecureAccessService.mstMenuNew CreateMenuNew(string token, ARSystemFrontEnd.SecureAccessService.mstMenuNew menu) {
            return base.Channel.CreateMenuNew(token, menu);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstMenuNew> CreateMenuNewAsync(string token, ARSystemFrontEnd.SecureAccessService.mstMenuNew menu) {
            return base.Channel.CreateMenuNewAsync(token, menu);
        }
        
        public ARSystemFrontEnd.SecureAccessService.mstMenuNew UpdateMenuNew(string token, ARSystemFrontEnd.SecureAccessService.mstMenuNew dataUpdate) {
            return base.Channel.UpdateMenuNew(token, dataUpdate);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstMenuNew> UpdateMenuNewAsync(string token, ARSystemFrontEnd.SecureAccessService.mstMenuNew dataUpdate) {
            return base.Channel.UpdateMenuNewAsync(token, dataUpdate);
        }
        
        public ARSystemFrontEnd.SecureAccessService.mstMenuNew DeleteMenuNew(string token, int menuNewID) {
            return base.Channel.DeleteMenuNew(token, menuNewID);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstMenuNew> DeleteMenuNewAsync(string token, int menuNewID) {
            return base.Channel.DeleteMenuNewAsync(token, menuNewID);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SecureAccessService.IRoleMenuService")]
    public interface IRoleMenuService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoleMenuService/GetMappingRoleToMenuNew", ReplyAction="http://tempuri.org/IRoleMenuService/GetMappingRoleToMenuNewResponse")]
        ARSystemFrontEnd.SecureAccessService.vwRoleMenuNew[] GetMappingRoleToMenuNew(string token, int applicationID, int roleID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoleMenuService/GetMappingRoleToMenuNew", ReplyAction="http://tempuri.org/IRoleMenuService/GetMappingRoleToMenuNewResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vwRoleMenuNew[]> GetMappingRoleToMenuNewAsync(string token, int applicationID, int roleID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoleMenuService/GetListRoleIDByMenuNew", ReplyAction="http://tempuri.org/IRoleMenuService/GetListRoleIDByMenuNewResponse")]
        ARSystemFrontEnd.SecureAccessService.idxRoleMenu[] GetListRoleIDByMenuNew(string token, int menuID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoleMenuService/GetListRoleIDByMenuNew", ReplyAction="http://tempuri.org/IRoleMenuService/GetListRoleIDByMenuNewResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.idxRoleMenu[]> GetListRoleIDByMenuNewAsync(string token, int menuID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRoleMenuServiceChannel : ARSystemFrontEnd.SecureAccessService.IRoleMenuService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RoleMenuServiceClient : System.ServiceModel.ClientBase<ARSystemFrontEnd.SecureAccessService.IRoleMenuService>, ARSystemFrontEnd.SecureAccessService.IRoleMenuService {
        
        public RoleMenuServiceClient() {
        }
        
        public RoleMenuServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RoleMenuServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RoleMenuServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RoleMenuServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ARSystemFrontEnd.SecureAccessService.vwRoleMenuNew[] GetMappingRoleToMenuNew(string token, int applicationID, int roleID) {
            return base.Channel.GetMappingRoleToMenuNew(token, applicationID, roleID);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vwRoleMenuNew[]> GetMappingRoleToMenuNewAsync(string token, int applicationID, int roleID) {
            return base.Channel.GetMappingRoleToMenuNewAsync(token, applicationID, roleID);
        }
        
        public ARSystemFrontEnd.SecureAccessService.idxRoleMenu[] GetListRoleIDByMenuNew(string token, int menuID) {
            return base.Channel.GetListRoleIDByMenuNew(token, menuID);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.idxRoleMenu[]> GetListRoleIDByMenuNewAsync(string token, int menuID) {
            return base.Channel.GetListRoleIDByMenuNewAsync(token, menuID);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SecureAccessService.IRoleActionService")]
    public interface IRoleActionService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoleActionService/GetMappingRoleToActionNew", ReplyAction="http://tempuri.org/IRoleActionService/GetMappingRoleToActionNewResponse")]
        ARSystemFrontEnd.SecureAccessService.vwRoleActionNew[] GetMappingRoleToActionNew(string token, int applicationID, int roleID, int isMenu);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoleActionService/GetMappingRoleToActionNew", ReplyAction="http://tempuri.org/IRoleActionService/GetMappingRoleToActionNewResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vwRoleActionNew[]> GetMappingRoleToActionNewAsync(string token, int applicationID, int roleID, int isMenu);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoleActionService/GetListRoleByActionNew", ReplyAction="http://tempuri.org/IRoleActionService/GetListRoleByActionNewResponse")]
        ARSystemFrontEnd.SecureAccessService.vwRoleActionNew[] GetListRoleByActionNew(string token, int actionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoleActionService/GetListRoleByActionNew", ReplyAction="http://tempuri.org/IRoleActionService/GetListRoleByActionNewResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vwRoleActionNew[]> GetListRoleByActionNewAsync(string token, int actionID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRoleActionServiceChannel : ARSystemFrontEnd.SecureAccessService.IRoleActionService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RoleActionServiceClient : System.ServiceModel.ClientBase<ARSystemFrontEnd.SecureAccessService.IRoleActionService>, ARSystemFrontEnd.SecureAccessService.IRoleActionService {
        
        public RoleActionServiceClient() {
        }
        
        public RoleActionServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RoleActionServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RoleActionServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RoleActionServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ARSystemFrontEnd.SecureAccessService.vwRoleActionNew[] GetMappingRoleToActionNew(string token, int applicationID, int roleID, int isMenu) {
            return base.Channel.GetMappingRoleToActionNew(token, applicationID, roleID, isMenu);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vwRoleActionNew[]> GetMappingRoleToActionNewAsync(string token, int applicationID, int roleID, int isMenu) {
            return base.Channel.GetMappingRoleToActionNewAsync(token, applicationID, roleID, isMenu);
        }
        
        public ARSystemFrontEnd.SecureAccessService.vwRoleActionNew[] GetListRoleByActionNew(string token, int actionID) {
            return base.Channel.GetListRoleByActionNew(token, actionID);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vwRoleActionNew[]> GetListRoleByActionNewAsync(string token, int actionID) {
            return base.Channel.GetListRoleByActionNewAsync(token, actionID);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SecureAccessService.ITaskToDoNewService")]
    public interface ITaskToDoNewService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITaskToDoNewService/GetGridTaskToDoNew", ReplyAction="http://tempuri.org/ITaskToDoNewService/GetGridTaskToDoNewResponse")]
        ARSystemFrontEnd.SecureAccessService.DatatableOfvwTaskToDoNewYDz5Kj5d GetGridTaskToDoNew(string token, ARSystemFrontEnd.SecureAccessService.dtTaskToDoFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITaskToDoNewService/GetGridTaskToDoNew", ReplyAction="http://tempuri.org/ITaskToDoNewService/GetGridTaskToDoNewResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.DatatableOfvwTaskToDoNewYDz5Kj5d> GetGridTaskToDoNewAsync(string token, ARSystemFrontEnd.SecureAccessService.dtTaskToDoFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITaskToDoNewService/GetSingleTaskToDoNew", ReplyAction="http://tempuri.org/ITaskToDoNewService/GetSingleTaskToDoNewResponse")]
        ARSystemFrontEnd.SecureAccessService.mstTaskToDoNew GetSingleTaskToDoNew(string token, int taskToDoID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITaskToDoNewService/GetSingleTaskToDoNew", ReplyAction="http://tempuri.org/ITaskToDoNewService/GetSingleTaskToDoNewResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstTaskToDoNew> GetSingleTaskToDoNewAsync(string token, int taskToDoID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITaskToDoNewService/GetListTaskToDoNewByAction", ReplyAction="http://tempuri.org/ITaskToDoNewService/GetListTaskToDoNewByActionResponse")]
        ARSystemFrontEnd.SecureAccessService.vwTaskToDoNew[] GetListTaskToDoNewByAction(string token, int actionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITaskToDoNewService/GetListTaskToDoNewByAction", ReplyAction="http://tempuri.org/ITaskToDoNewService/GetListTaskToDoNewByActionResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vwTaskToDoNew[]> GetListTaskToDoNewByActionAsync(string token, int actionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITaskToDoNewService/GetListTaskToDoNew", ReplyAction="http://tempuri.org/ITaskToDoNewService/GetListTaskToDoNewResponse")]
        ARSystemFrontEnd.SecureAccessService.vwTaskToDoNew[] GetListTaskToDoNew(string token, ARSystemFrontEnd.SecureAccessService.vmUpdateAuthorization data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITaskToDoNewService/GetListTaskToDoNew", ReplyAction="http://tempuri.org/ITaskToDoNewService/GetListTaskToDoNewResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vwTaskToDoNew[]> GetListTaskToDoNewAsync(string token, ARSystemFrontEnd.SecureAccessService.vmUpdateAuthorization data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITaskToDoNewService/CreateTaskToDoNew", ReplyAction="http://tempuri.org/ITaskToDoNewService/CreateTaskToDoNewResponse")]
        ARSystemFrontEnd.SecureAccessService.mstTaskToDoNew CreateTaskToDoNew(string token, ARSystemFrontEnd.SecureAccessService.mstTaskToDoNew taskToDo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITaskToDoNewService/CreateTaskToDoNew", ReplyAction="http://tempuri.org/ITaskToDoNewService/CreateTaskToDoNewResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstTaskToDoNew> CreateTaskToDoNewAsync(string token, ARSystemFrontEnd.SecureAccessService.mstTaskToDoNew taskToDo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITaskToDoNewService/UpdateTaskToDoNew", ReplyAction="http://tempuri.org/ITaskToDoNewService/UpdateTaskToDoNewResponse")]
        ARSystemFrontEnd.SecureAccessService.mstTaskToDoNew UpdateTaskToDoNew(string token, ARSystemFrontEnd.SecureAccessService.mstTaskToDoNew dataUpdate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITaskToDoNewService/UpdateTaskToDoNew", ReplyAction="http://tempuri.org/ITaskToDoNewService/UpdateTaskToDoNewResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstTaskToDoNew> UpdateTaskToDoNewAsync(string token, ARSystemFrontEnd.SecureAccessService.mstTaskToDoNew dataUpdate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITaskToDoNewService/DeleteTaskToDoNew", ReplyAction="http://tempuri.org/ITaskToDoNewService/DeleteTaskToDoNewResponse")]
        ARSystemFrontEnd.SecureAccessService.mstTaskToDoNew DeleteTaskToDoNew(string token, int taskToDoNewID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITaskToDoNewService/DeleteTaskToDoNew", ReplyAction="http://tempuri.org/ITaskToDoNewService/DeleteTaskToDoNewResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstTaskToDoNew> DeleteTaskToDoNewAsync(string token, int taskToDoNewID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITaskToDoNewServiceChannel : ARSystemFrontEnd.SecureAccessService.ITaskToDoNewService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TaskToDoNewServiceClient : System.ServiceModel.ClientBase<ARSystemFrontEnd.SecureAccessService.ITaskToDoNewService>, ARSystemFrontEnd.SecureAccessService.ITaskToDoNewService {
        
        public TaskToDoNewServiceClient() {
        }
        
        public TaskToDoNewServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TaskToDoNewServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TaskToDoNewServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TaskToDoNewServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ARSystemFrontEnd.SecureAccessService.DatatableOfvwTaskToDoNewYDz5Kj5d GetGridTaskToDoNew(string token, ARSystemFrontEnd.SecureAccessService.dtTaskToDoFilter filter) {
            return base.Channel.GetGridTaskToDoNew(token, filter);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.DatatableOfvwTaskToDoNewYDz5Kj5d> GetGridTaskToDoNewAsync(string token, ARSystemFrontEnd.SecureAccessService.dtTaskToDoFilter filter) {
            return base.Channel.GetGridTaskToDoNewAsync(token, filter);
        }
        
        public ARSystemFrontEnd.SecureAccessService.mstTaskToDoNew GetSingleTaskToDoNew(string token, int taskToDoID) {
            return base.Channel.GetSingleTaskToDoNew(token, taskToDoID);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstTaskToDoNew> GetSingleTaskToDoNewAsync(string token, int taskToDoID) {
            return base.Channel.GetSingleTaskToDoNewAsync(token, taskToDoID);
        }
        
        public ARSystemFrontEnd.SecureAccessService.vwTaskToDoNew[] GetListTaskToDoNewByAction(string token, int actionID) {
            return base.Channel.GetListTaskToDoNewByAction(token, actionID);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vwTaskToDoNew[]> GetListTaskToDoNewByActionAsync(string token, int actionID) {
            return base.Channel.GetListTaskToDoNewByActionAsync(token, actionID);
        }
        
        public ARSystemFrontEnd.SecureAccessService.vwTaskToDoNew[] GetListTaskToDoNew(string token, ARSystemFrontEnd.SecureAccessService.vmUpdateAuthorization data) {
            return base.Channel.GetListTaskToDoNew(token, data);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vwTaskToDoNew[]> GetListTaskToDoNewAsync(string token, ARSystemFrontEnd.SecureAccessService.vmUpdateAuthorization data) {
            return base.Channel.GetListTaskToDoNewAsync(token, data);
        }
        
        public ARSystemFrontEnd.SecureAccessService.mstTaskToDoNew CreateTaskToDoNew(string token, ARSystemFrontEnd.SecureAccessService.mstTaskToDoNew taskToDo) {
            return base.Channel.CreateTaskToDoNew(token, taskToDo);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstTaskToDoNew> CreateTaskToDoNewAsync(string token, ARSystemFrontEnd.SecureAccessService.mstTaskToDoNew taskToDo) {
            return base.Channel.CreateTaskToDoNewAsync(token, taskToDo);
        }
        
        public ARSystemFrontEnd.SecureAccessService.mstTaskToDoNew UpdateTaskToDoNew(string token, ARSystemFrontEnd.SecureAccessService.mstTaskToDoNew dataUpdate) {
            return base.Channel.UpdateTaskToDoNew(token, dataUpdate);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstTaskToDoNew> UpdateTaskToDoNewAsync(string token, ARSystemFrontEnd.SecureAccessService.mstTaskToDoNew dataUpdate) {
            return base.Channel.UpdateTaskToDoNewAsync(token, dataUpdate);
        }
        
        public ARSystemFrontEnd.SecureAccessService.mstTaskToDoNew DeleteTaskToDoNew(string token, int taskToDoNewID) {
            return base.Channel.DeleteTaskToDoNew(token, taskToDoNewID);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.mstTaskToDoNew> DeleteTaskToDoNewAsync(string token, int taskToDoNewID) {
            return base.Channel.DeleteTaskToDoNewAsync(token, taskToDoNewID);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SecureAccessService.IRoleTaskToDoService")]
    public interface IRoleTaskToDoService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoleTaskToDoService/GetMappingRoleToTaskToDoNew", ReplyAction="http://tempuri.org/IRoleTaskToDoService/GetMappingRoleToTaskToDoNewResponse")]
        ARSystemFrontEnd.SecureAccessService.vwRoleTaskToDoNew[] GetMappingRoleToTaskToDoNew(string token, int applicationID, int roleID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoleTaskToDoService/GetMappingRoleToTaskToDoNew", ReplyAction="http://tempuri.org/IRoleTaskToDoService/GetMappingRoleToTaskToDoNewResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vwRoleTaskToDoNew[]> GetMappingRoleToTaskToDoNewAsync(string token, int applicationID, int roleID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoleTaskToDoService/GetListRoleIDByTaskToDoNew", ReplyAction="http://tempuri.org/IRoleTaskToDoService/GetListRoleIDByTaskToDoNewResponse")]
        ARSystemFrontEnd.SecureAccessService.idxRoleTaskToDoNew[] GetListRoleIDByTaskToDoNew(string token, int taskToDoID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoleTaskToDoService/GetListRoleIDByTaskToDoNew", ReplyAction="http://tempuri.org/IRoleTaskToDoService/GetListRoleIDByTaskToDoNewResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.idxRoleTaskToDoNew[]> GetListRoleIDByTaskToDoNewAsync(string token, int taskToDoID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRoleTaskToDoServiceChannel : ARSystemFrontEnd.SecureAccessService.IRoleTaskToDoService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RoleTaskToDoServiceClient : System.ServiceModel.ClientBase<ARSystemFrontEnd.SecureAccessService.IRoleTaskToDoService>, ARSystemFrontEnd.SecureAccessService.IRoleTaskToDoService {
        
        public RoleTaskToDoServiceClient() {
        }
        
        public RoleTaskToDoServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RoleTaskToDoServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RoleTaskToDoServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RoleTaskToDoServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ARSystemFrontEnd.SecureAccessService.vwRoleTaskToDoNew[] GetMappingRoleToTaskToDoNew(string token, int applicationID, int roleID) {
            return base.Channel.GetMappingRoleToTaskToDoNew(token, applicationID, roleID);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vwRoleTaskToDoNew[]> GetMappingRoleToTaskToDoNewAsync(string token, int applicationID, int roleID) {
            return base.Channel.GetMappingRoleToTaskToDoNewAsync(token, applicationID, roleID);
        }
        
        public ARSystemFrontEnd.SecureAccessService.idxRoleTaskToDoNew[] GetListRoleIDByTaskToDoNew(string token, int taskToDoID) {
            return base.Channel.GetListRoleIDByTaskToDoNew(token, taskToDoID);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.idxRoleTaskToDoNew[]> GetListRoleIDByTaskToDoNewAsync(string token, int taskToDoID) {
            return base.Channel.GetListRoleIDByTaskToDoNewAsync(token, taskToDoID);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SecureAccessService.IAccessLogService")]
    public interface IAccessLogService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccessLogService/GetLastTwoMonth", ReplyAction="http://tempuri.org/IAccessLogService/GetLastTwoMonthResponse")]
        ARSystemFrontEnd.SecureAccessService.vwLogHitCounter[] GetLastTwoMonth(string userID, string userToken, int appID, string filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccessLogService/GetLastTwoMonth", ReplyAction="http://tempuri.org/IAccessLogService/GetLastTwoMonthResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vwLogHitCounter[]> GetLastTwoMonthAsync(string userID, string userToken, int appID, string filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccessLogService/GetGridHitLog", ReplyAction="http://tempuri.org/IAccessLogService/GetGridHitLogResponse")]
        ARSystemFrontEnd.SecureAccessService.DatatableOfvwLogHitCounterYDz5Kj5d GetGridHitLog(string token, ARSystemFrontEnd.SecureAccessService.dtAccessHistoryFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccessLogService/GetGridHitLog", ReplyAction="http://tempuri.org/IAccessLogService/GetGridHitLogResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.DatatableOfvwLogHitCounterYDz5Kj5d> GetGridHitLogAsync(string token, ARSystemFrontEnd.SecureAccessService.dtAccessHistoryFilter filter);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAccessLogServiceChannel : ARSystemFrontEnd.SecureAccessService.IAccessLogService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AccessLogServiceClient : System.ServiceModel.ClientBase<ARSystemFrontEnd.SecureAccessService.IAccessLogService>, ARSystemFrontEnd.SecureAccessService.IAccessLogService {
        
        public AccessLogServiceClient() {
        }
        
        public AccessLogServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AccessLogServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AccessLogServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AccessLogServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ARSystemFrontEnd.SecureAccessService.vwLogHitCounter[] GetLastTwoMonth(string userID, string userToken, int appID, string filter) {
            return base.Channel.GetLastTwoMonth(userID, userToken, appID, filter);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vwLogHitCounter[]> GetLastTwoMonthAsync(string userID, string userToken, int appID, string filter) {
            return base.Channel.GetLastTwoMonthAsync(userID, userToken, appID, filter);
        }
        
        public ARSystemFrontEnd.SecureAccessService.DatatableOfvwLogHitCounterYDz5Kj5d GetGridHitLog(string token, ARSystemFrontEnd.SecureAccessService.dtAccessHistoryFilter filter) {
            return base.Channel.GetGridHitLog(token, filter);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.DatatableOfvwLogHitCounterYDz5Kj5d> GetGridHitLogAsync(string token, ARSystemFrontEnd.SecureAccessService.dtAccessHistoryFilter filter) {
            return base.Channel.GetGridHitLogAsync(token, filter);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SecureAccessService.IExternalTokenAuthorizeService")]
    public interface IExternalTokenAuthorizeService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExternalTokenAuthorizeService/GetExternalTokenCount", ReplyAction="http://tempuri.org/IExternalTokenAuthorizeService/GetExternalTokenCountResponse")]
        int GetExternalTokenCount(string Token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExternalTokenAuthorizeService/GetExternalTokenCount", ReplyAction="http://tempuri.org/IExternalTokenAuthorizeService/GetExternalTokenCountResponse")]
        System.Threading.Tasks.Task<int> GetExternalTokenCountAsync(string Token);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IExternalTokenAuthorizeServiceChannel : ARSystemFrontEnd.SecureAccessService.IExternalTokenAuthorizeService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ExternalTokenAuthorizeServiceClient : System.ServiceModel.ClientBase<ARSystemFrontEnd.SecureAccessService.IExternalTokenAuthorizeService>, ARSystemFrontEnd.SecureAccessService.IExternalTokenAuthorizeService {
        
        public ExternalTokenAuthorizeServiceClient() {
        }
        
        public ExternalTokenAuthorizeServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ExternalTokenAuthorizeServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ExternalTokenAuthorizeServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ExternalTokenAuthorizeServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int GetExternalTokenCount(string Token) {
            return base.Channel.GetExternalTokenCount(Token);
        }
        
        public System.Threading.Tasks.Task<int> GetExternalTokenCountAsync(string Token) {
            return base.Channel.GetExternalTokenCountAsync(Token);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SecureAccessService.ILoginLogService")]
    public interface ILoginLogService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginLogService/GetLastTwoMonthLog", ReplyAction="http://tempuri.org/ILoginLogService/GetLastTwoMonthLogResponse")]
        ARSystemFrontEnd.SecureAccessService.vwLoginLog[] GetLastTwoMonthLog(string userID, string userToken, int appID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginLogService/GetLastTwoMonthLog", ReplyAction="http://tempuri.org/ILoginLogService/GetLastTwoMonthLogResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vwLoginLog[]> GetLastTwoMonthLogAsync(string userID, string userToken, int appID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginLogService/GetGridLoginLog", ReplyAction="http://tempuri.org/ILoginLogService/GetGridLoginLogResponse")]
        ARSystemFrontEnd.SecureAccessService.DatatableOfvwLoginLogYDz5Kj5d GetGridLoginLog(string token, ARSystemFrontEnd.SecureAccessService.dtLoginHistoryFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginLogService/GetGridLoginLog", ReplyAction="http://tempuri.org/ILoginLogService/GetGridLoginLogResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.DatatableOfvwLoginLogYDz5Kj5d> GetGridLoginLogAsync(string token, ARSystemFrontEnd.SecureAccessService.dtLoginHistoryFilter filter);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILoginLogServiceChannel : ARSystemFrontEnd.SecureAccessService.ILoginLogService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoginLogServiceClient : System.ServiceModel.ClientBase<ARSystemFrontEnd.SecureAccessService.ILoginLogService>, ARSystemFrontEnd.SecureAccessService.ILoginLogService {
        
        public LoginLogServiceClient() {
        }
        
        public LoginLogServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LoginLogServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LoginLogServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LoginLogServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ARSystemFrontEnd.SecureAccessService.vwLoginLog[] GetLastTwoMonthLog(string userID, string userToken, int appID) {
            return base.Channel.GetLastTwoMonthLog(userID, userToken, appID);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.vwLoginLog[]> GetLastTwoMonthLogAsync(string userID, string userToken, int appID) {
            return base.Channel.GetLastTwoMonthLogAsync(userID, userToken, appID);
        }
        
        public ARSystemFrontEnd.SecureAccessService.DatatableOfvwLoginLogYDz5Kj5d GetGridLoginLog(string token, ARSystemFrontEnd.SecureAccessService.dtLoginHistoryFilter filter) {
            return base.Channel.GetGridLoginLog(token, filter);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.DatatableOfvwLoginLogYDz5Kj5d> GetGridLoginLogAsync(string token, ARSystemFrontEnd.SecureAccessService.dtLoginHistoryFilter filter) {
            return base.Channel.GetGridLoginLogAsync(token, filter);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SecureAccessService.IActionLogService")]
    public interface IActionLogService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IActionLogService/GetGridActionLog", ReplyAction="http://tempuri.org/IActionLogService/GetGridActionLogResponse")]
        ARSystemFrontEnd.SecureAccessService.DatatableOfvwAuditTrailYDz5Kj5d GetGridActionLog(string token, ARSystemFrontEnd.SecureAccessService.dtActionHistoryFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IActionLogService/GetGridActionLog", ReplyAction="http://tempuri.org/IActionLogService/GetGridActionLogResponse")]
        System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.DatatableOfvwAuditTrailYDz5Kj5d> GetGridActionLogAsync(string token, ARSystemFrontEnd.SecureAccessService.dtActionHistoryFilter filter);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IActionLogServiceChannel : ARSystemFrontEnd.SecureAccessService.IActionLogService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ActionLogServiceClient : System.ServiceModel.ClientBase<ARSystemFrontEnd.SecureAccessService.IActionLogService>, ARSystemFrontEnd.SecureAccessService.IActionLogService {
        
        public ActionLogServiceClient() {
        }
        
        public ActionLogServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ActionLogServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ActionLogServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ActionLogServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ARSystemFrontEnd.SecureAccessService.DatatableOfvwAuditTrailYDz5Kj5d GetGridActionLog(string token, ARSystemFrontEnd.SecureAccessService.dtActionHistoryFilter filter) {
            return base.Channel.GetGridActionLog(token, filter);
        }
        
        public System.Threading.Tasks.Task<ARSystemFrontEnd.SecureAccessService.DatatableOfvwAuditTrailYDz5Kj5d> GetGridActionLogAsync(string token, ARSystemFrontEnd.SecureAccessService.dtActionHistoryFilter filter) {
            return base.Channel.GetGridActionLogAsync(token, filter);
        }
    }
}
